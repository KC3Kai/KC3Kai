/* jshint ignore:start */
// Suppress all warnings of jshint, see http://jshint.com/docs/
// Generated by psc-bundle 0.10.5
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var apply = function (f) {
      return function (x) {
          return f(x);
      };
  };
  exports["apply"] = apply;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["on"] = on;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showArray"] = showArray;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Semigroup = function (append) {
      this.append = append;
  };
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Alt = function (__superclass_Data$dotFunctor$dotFunctor_0, alt) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.alt = alt;
  };
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
    "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var result = [];
      var n = 0;
      for (var i = 0, l = fs.length; i < l; i++) {
        for (var j = 0, k = xs.length; j < k; j++) {
          result[n++] = fs[i](xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];
  var Alternative = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotPlus$dotPlus_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
  };
  exports["Alternative"] = Alternative;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
    "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindArray"] = bindArray;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);/*RemoveLogging:skip*/
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
    "use strict";

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Eq = function (eq) {
      this.eq = eq;
  };
  var eqString = new Eq($foreign.refEq);
  var eqNumber = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqString"] = eqString;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var MonadZero = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Control$dotMonad$dotMonad_0) {
      this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
  };
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
          };
          throw new Error("Failed pattern match at Control.MonadZero line 52, column 1 - line 52, column 23: " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS["Control.MonadZero"] = PS["Control.MonadZero"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["zero"] = zero;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Data_Semiring = PS["Data.Semiring"];
  var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
      this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
      this.compare = compare;
  };
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var comparing = function (dictOrd) {
      return function (f) {
          return Data_Function.on(compare(dictOrd))(f);
      };
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var $24 = compare(dictOrd)(a1)(a2);
              if ($24 instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var $28 = compare(dictOrd)(x)(y);
              if ($28 instanceof Data_Ordering.LT) {
                  return y;
              };
              if ($28 instanceof Data_Ordering.EQ) {
                  return x;
              };
              if ($28 instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord line 123, column 3 - line 126, column 12: " + [ $28.constructor.name ]);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["comparing"] = comparing;
  exports["greaterThanOrEq"] = greaterThanOrEq;
  exports["max"] = max;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Boolean = PS["Data.Boolean"];
  var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
      this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
      this.mempty = mempty;
  };
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidArray"] = monoidArray;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Ordering = PS["Data.Ordering"];
  var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
      this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 214, column 1 - line 214, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar33) {
                  return $dollar33;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 265, column 1 - line 265, column 21: " + [ v.constructor.name ]);
          })());
      };
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 67, column 3 - line 67, column 31: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 126, column 3 - line 126, column 24: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
      return applicativeMaybe;
  }, function () {
      return plusMaybe;
  });
  var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
      return alternativeMaybe;
  }, function () {
      return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromJust"] = fromJust;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
  exports["monadZeroMaybe"] = monadZeroMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["not"] = not;
  exports["tt"] = tt;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($64) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeConj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Conj);
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["newtypeConj"] = newtypeConj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeDisj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Disj);
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["newtypeDisj"] = newtypeDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($169) {
                  return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($169));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var sum = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
      };
  };
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return function (p) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)))(p);
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return function (p) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)))(p);
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["all"] = all;
  exports["any"] = any;
  exports["fold"] = fold;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["for_"] = for_;
  exports["sum"] = sum;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont(fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList(x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray(list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Data$dotFunctor$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return function (tma) {
              return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]()))(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 37, column 3 - line 37, column 26: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 230, column 1 - line 230, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  exports["catchException"] = $foreign.catchException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var MonadError = function (__superclass_Control$dotMonad$dotMonad_0, catchError, throwError) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.catchError = catchError;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };
  var catchError = function (dict) {
      return dict.catchError;
  };
  exports["MonadError"] = MonadError;
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var ExceptT = function (x) {
      return x;
  };
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function ($88) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($88));
              })(function (a) {
                  var $56 = k(a);
                  return $56;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($89) {
          return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($89)));
      });
  };
  var monadErrorExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadError(function () {
          return monadExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function (a) {
                  var $60 = k(a);
                  return $60;
              })(function ($91) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($91));
              }));
          };
      }, function ($92) {
          return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($92)));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadErrorExceptT"] = monadErrorExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
    "use strict";

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.modifySTRef = function (ref) {
    return function (f) {
      return function () {
        /* jshint boss: true */
        return ref.value = f(ref.value);
      };
    };
  };

  exports.writeSTRef = function (ref) {
    return function (a) {
      return function () {
        /* jshint boss: true */
        return ref.value = a;
      };
    };
  };

  exports.runST = function (f) {
    return f;
  };
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var pureST = function (st) {
      return Control_Monad_Eff.runPure($foreign.runST(st));
  };
  exports["pureST"] = pureST;
  exports["modifySTRef"] = $foreign.modifySTRef;
  exports["newSTRef"] = $foreign.newSTRef;
  exports["readSTRef"] = $foreign.readSTRef;
  exports["writeSTRef"] = $foreign.writeSTRef;
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      for (var i = start, n = 0; i !== end; i += step) {
        result[n++] = i;
      }
      result[n] = i;
      return result;
    };
  };

  exports.replicate = function (count) {
    return function (value) {
      var result = [];
      var n = 0;
      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }
      return result;
    };
  };

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      // jshint maxparams: 2
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports.runSTArray = function (f) {
    return f;
  };

  exports.emptySTArray = function () {
    return [];
  };

  exports.pushAllSTArray = function (xs) {
    return function (as) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.copyImpl = function (xs) {
    return function () {
      return xs.slice();
    };
  };
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var unsafeFreeze = function ($0) {
      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Unsafe_Coerce.unsafeCoerce($0));
  };
  var thaw = $foreign.copyImpl;
  var pushSTArray = function (arr) {
      return function (a) {
          return $foreign.pushAllSTArray(arr)([ a ]);
      };
  };
  exports["pushSTArray"] = pushSTArray;
  exports["thaw"] = thaw;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["emptySTArray"] = $foreign.emptySTArray;
  exports["runSTArray"] = $foreign.runSTArray;
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Iterator = (function () {
      function Iterator(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Iterator.create = function (value0) {
          return function (value1) {
              return new Iterator(value0, value1);
          };
      };
      return Iterator;
  })();
  var peek = function (v) {
      return function __do() {
          var v1 = Control_Monad_ST.readSTRef(v.value1)();
          return v.value0(v1);
      };
  };
  var next = function (v) {
      return function __do() {
          var v1 = Control_Monad_ST.readSTRef(v.value1)();
          var v2 = Control_Monad_ST.modifySTRef(v.value1)(function (v2) {
              return v2 + 1 | 0;
          })();
          return v.value0(v1);
      };
  };
  var pushWhile = function (p) {
      return function (iter) {
          return function (array) {
              return function __do() {
                  var v = Control_Monad_ST.newSTRef(false)();
                  while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                      (function __do() {
                          var v1 = peek(iter)();
                          if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
                              var v2 = Data_Array_ST.pushSTArray(array)(v1.value0)();
                              return Data_Functor["void"](Control_Monad_Eff.functorEff)(next(iter))();
                          };
                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                      })();
                  };
                  return {};
              };
          };
      };
  };
  var iterator = function (f) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Iterator.create(f))(Control_Monad_ST.newSTRef(0));
  };
  var iterate = function (iter) {
      return function (f) {
          return function __do() {
              var v = Control_Monad_ST.newSTRef(false)();
              while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                  (function __do() {
                      var v1 = next(iter)();
                      if (v1 instanceof Data_Maybe.Just) {
                          return f(v1.value0)();
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                      };
                      throw new Error("Failed pattern match at Data.Array.ST.Iterator line 39, column 5 - line 41, column 46: " + [ v1.constructor.name ]);
                  })();
              };
              return {};
          };
      };
  };
  exports["iterate"] = iterate;
  exports["iterator"] = iterator;
  exports["next"] = next;
  exports["peek"] = peek;
  exports["pushWhile"] = pushWhile;
})(PS["Data.Array.ST.Iterator"] = PS["Data.Array.ST.Iterator"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              while (true) {
                var maybe = f(b);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                b = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Partial"];
  var crash = function (dictPartial) {
      return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
  };
  exports["crash"] = crash;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  exports["unsafePartial"] = $foreign.unsafePartial;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Functor = PS["Data.Functor"];
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Partial_Unsafe.unsafePartial(function (dictPartial) {
      return Data_Maybe.fromJust(dictPartial);
  }))(Data_Tuple.fst)(Data_Tuple.snd));
  var replicate = function (dictUnfoldable) {
      return function (n) {
          return function (v) {
              var step = function (i) {
                  var $8 = i <= 0;
                  if ($8) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (!$8) {
                      return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
                  };
                  throw new Error("Failed pattern match at Data.Unfoldable line 59, column 7 - line 60, column 34: " + [ $8.constructor.name ]);
              };
              return unfoldr(dictUnfoldable)(step)(n);
          };
      };
  };
  exports["Unfoldable"] = Unfoldable;
  exports["replicate"] = replicate;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  };
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var $56 = comp(x)(y);
                  if ($56 instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if ($56 instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if ($56 instanceof Data_Ordering.LT) {
                      return -1;
                  };
                  throw new Error("Failed pattern match at Data.Array line 467, column 15 - line 472, column 1: " + [ $56.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var groupBy = function (op) {
      return function (xs) {
          return Control_Monad_ST.pureST(function __do() {
              var v = Data_Array_ST.emptySTArray();
              var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
                  return index(xs)(v1);
              })();
              Data_Array_ST_Iterator.iterate(v1)(function (x) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                      var v2 = Data_Array_ST.emptySTArray();
                      Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
                      var v3 = Data_Array_ST.unsafeFreeze(v2)();
                      return Data_Array_ST.pushSTArray(v)(new Data_NonEmpty.NonEmpty(x, v3))();
                  });
              })();
              return Data_Array_ST.unsafeFreeze(v)();
          });
      };
  };
  var group = function (dictEq) {
      return function (xs) {
          return groupBy(Data_Eq.eq(dictEq))(xs);
      };
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var elemIndex = function (dictEq) {
      return function (x) {
          return findIndex(function (v) {
              return Data_Eq.eq(dictEq)(v)(x);
          });
      };
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap(function ($85) {
          return Data_Maybe.maybe([  ])(singleton)(f($85));
      });
  };
  exports["concatMap"] = concatMap;
  exports["elemIndex"] = elemIndex;
  exports["findIndex"] = findIndex;
  exports["group"] = group;
  exports["groupBy"] = groupBy;
  exports["index"] = index;
  exports["mapMaybe"] = mapMaybe;
  exports["null"] = $$null;
  exports["singleton"] = singleton;
  exports["sortBy"] = sortBy;
  exports["uncons"] = uncons;
  exports["unsafeIndex"] = unsafeIndex;
  exports["zip"] = zip;
  exports["cons"] = $foreign.cons;
  exports["filter"] = $foreign.filter;
  exports["length"] = $foreign.length;
  exports["range"] = $foreign.range;
  exports["replicate"] = $foreign.replicate;
  exports["reverse"] = $foreign.reverse;
  exports["slice"] = $foreign.slice;
  exports["snoc"] = $foreign.snoc;
  exports["take"] = $foreign.take;
  exports["zipWith"] = $foreign.zipWith;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Ring = PS["Data.Ring"];
  var tail = function (dictPartial) {
      return function (xs) {
          return Data_Array.slice(1)(Data_Array.length(xs))(xs);
      };
  };
  var head = function (dictPartial) {
      return function (xs) {
          return xs[0];
      };
  };
  exports["head"] = head;
  exports["tail"] = tail;
})(PS["Data.Array.Partial"] = PS["Data.Array.Partial"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  // jshint maxparams: 1

  exports.toForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
    "use strict";

  exports.mkFn3 = function (fn) {
    /* jshint maxparams: 3 */
    return function (a, b, c) {
      return fn(a)(b)(c);
    };
  };

  exports.mkFn4 = function (fn) {
    /* jshint maxparams: 4 */
    return function (a, b, c, d) {
      return fn(a)(b)(c)(d);
    };
  };

  exports.mkFn5 = function (fn) {
    /* jshint maxparams: 5 */
    return function (a, b, c, d, e) {
      return fn(a)(b)(c)(d)(e);
    };
  };

  exports.mkFn6 = function (fn) {
    /* jshint maxparams: 6 */
    return function (a, b, c, d, e, f) {
      return fn(a)(b)(c)(d)(e)(f);
    };
  };

  exports.mkFn7 = function (fn) {
    /* jshint maxparams: 7 */
    return function (a, b, c, d, e, f, g) {
      return fn(a)(b)(c)(d)(e)(f)(g);
    };
  };

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["mkFn3"] = $foreign.mkFn3;
  exports["mkFn4"] = $foreign.mkFn4;
  exports["mkFn5"] = $foreign.mkFn5;
  exports["mkFn6"] = $foreign.mkFn6;
  exports["mkFn7"] = $foreign.mkFn7;
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
    "use strict";

  exports.ceil = Math.ceil;

  exports.floor = Math.floor;

  exports.sqrt = Math.sqrt;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Math"];
  exports["ceil"] = $foreign.ceil;
  exports["floor"] = $foreign.floor;
  exports["sqrt"] = $foreign.sqrt;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Int"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Maybe.fromJust(dictPartial)(fromNumber(x));
          });
      };
      throw new Error("Failed pattern match at Data.Int line 66, column 1 - line 69, column 56: " + [ x.constructor.name ]);
  };
  var floor = function ($4) {
      return unsafeClamp($$Math.floor($4));
  };
  var even = function (x) {
      return (x & 1) === 0;
  };
  var ceil = function ($5) {
      return unsafeClamp($$Math.ceil($5));
  };
  exports["ceil"] = ceil;
  exports["even"] = even;
  exports["floor"] = floor;
  exports["fromNumber"] = fromNumber;
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($128) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($128));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function (__copy_b) {
          return function (__copy_v) {
              var b = __copy_b;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return b;
                  };
                  if (v instanceof Cons) {
                      var __tco_b = f(b)(v.value0);
                      var __tco_v = v.value1;
                      b = __tco_b;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 66, column 3 - line 69, column 34: " + [ b.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          return function (as) {
              var rev = function (__copy_acc) {
                  return function (__copy_v) {
                      var acc = __copy_acc;
                      var v = __copy_v;
                      tco: while (true) {
                          if (v instanceof Nil) {
                              return acc;
                          };
                          if (v instanceof Cons) {
                              var __tco_acc = new Cons(v.value0, acc);
                              var __tco_v = v.value1;
                              acc = __tco_acc;
                              v = __tco_v;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.List.Types line 62, column 3 - line 65, column 40: " + [ acc.constructor.name, v.constructor.name ]);
                      };
                  };
              };
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)(as));
          };
      };
  });
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function ($129) {
              return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                  return function ($130) {
                      return Control_Apply.lift2(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Function.flip(Cons.create))(acc)(f($130));
                  };
              })(Control_Applicative.pure(dictApplicative)(Nil.value))($129));
          };
      };
  });
  var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
      return function (b) {
          var go = function (__copy_source) {
              return function (__copy_memo) {
                  var source = __copy_source;
                  var memo = __copy_memo;
                  tco: while (true) {
                      var $70 = f(source);
                      if ($70 instanceof Data_Maybe.Nothing) {
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                      };
                      if ($70 instanceof Data_Maybe.Just) {
                          var __tco_memo = new Cons($70.value0.value0, memo);
                          source = $70.value0.value1;
                          memo = __tco_memo;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List.Types line 75, column 24 - line 77, column 54: " + [ $70.constructor.name ]);
                  };
              };
          };
          return go(b)(Nil.value);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 84, column 3 - line 84, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindList = new Control_Bind.Bind(function () {
      return applyList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 91, column 3 - line 91, column 19: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["traversableList"] = traversableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Apply = PS["Control.Apply"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List line 257, column 1 - line 257, column 21: " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List line 238, column 1 - line 238, column 19: " + [ v.constructor.name ]);
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List line 223, column 1 - line 223, column 19: " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  var findIndex = function (fn) {
      var go = function (__copy_v) {
          return function (__copy_v1) {
              var v = __copy_v;
              var v1 = __copy_v1;
              tco: while (true) {
                  if (v1 instanceof Data_List_Types.Cons) {
                      if (fn(v1.value0)) {
                          return new Data_Maybe.Just(v);
                      };
                      if (Data_Boolean.otherwise) {
                          var __tco_v = v + 1 | 0;
                          var __tco_v1 = v1.value1;
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                  };
                  if (v1 instanceof Data_List_Types.Nil) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Data.List line 288, column 3 - line 289, column 44: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      };
      return go(0);
  };
  var elemIndex = function (dictEq) {
      return function (x) {
          return findIndex(function (v) {
              return Data_Eq.eq(dictEq)(v)(x);
          });
      };
  };
  exports["elemIndex"] = elemIndex;
  exports["findIndex"] = findIndex;
  exports["fromFoldable"] = fromFoldable;
  exports["head"] = head;
  exports["tail"] = tail;
  exports["toUnfoldable"] = toUnfoldable;
  exports["uncons"] = uncons;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var singleton = function ($36) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($36));
  };
  exports["singleton"] = singleton;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["joinWith"] = $foreign.joinWith;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Identity = function (x) {
      return x;
  };
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Boolean = PS["Data.Boolean"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var fail = function ($112) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadErrorExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($112));
  };
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["fail"] = fail;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
  exports["toForeign"] = $foreign.toForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // jshint maxparams: 4
  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  // jshint maxparams: 2
  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Prelude = PS["Prelude"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.ix = ix;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var prop = unsafeReadProp;
  var ix = function (dict) {
      return dict.ix;
  };
  var hasPropertyImpl = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasProperty(v, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasOwnProperty(v, value);
          };
          return false;
      };
  };
  var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(prop));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["errorAt"] = errorAt;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["hasProperty"] = hasProperty;
  exports["ix"] = ix;
  exports["prop"] = prop;
  exports["indexString"] = indexString;
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var head = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar17) {
                  return $dollar17;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Data_List_Types.Cons) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.List.Partial line 10, column 1 - line 10, column 20: " + [ v.constructor.name ]);
          })());
      };
  };
  exports["head"] = head;
})(PS["Data.List.Partial"] = PS["Data.List.Partial"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toAscUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function (__copy_v) {
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          var __tco_v = v.value1;
                          v = __tco_v;
                          continue tco;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          var __tco_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          v = __tco_v;
                          continue tco;
                      };
                      if (v.value0 instanceof Three) {
                          var __tco_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          v = __tco_v;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 404, column 18 - line 413, column 71: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 402, column 1 - line 413, column 71: " + [ v.constructor.name ]);
              };
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var toList = toAscUnfoldable(Data_List_Types.unfoldableList);
  var lookup = function (dictOrd) {
      return Partial_Unsafe.unsafePartial(function (dictPartial) {
          return function (k) {
              return function (tree) {
                  if (tree instanceof Leaf) {
                      return Data_Maybe.Nothing.value;
                  };
                  var comp = Data_Ord.compare(dictOrd);
                  var __unused = function (dictPartial1) {
                      return function ($dollar43) {
                          return $dollar43;
                      };
                  };
                  return __unused(dictPartial)((function () {
                      if (tree instanceof Two) {
                          var $189 = comp(k)(tree.value1);
                          if ($189 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(tree.value2);
                          };
                          if ($189 instanceof Data_Ordering.LT) {
                              return lookup(dictOrd)(k)(tree.value0);
                          };
                          return lookup(dictOrd)(k)(tree.value3);
                      };
                      if (tree instanceof Three) {
                          var $194 = comp(k)(tree.value1);
                          if ($194 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(tree.value2);
                          };
                          var $196 = comp(k)(tree.value4);
                          if ($196 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(tree.value5);
                          };
                          if ($194 instanceof Data_Ordering.LT) {
                              return lookup(dictOrd)(k)(tree.value0);
                          };
                          if ($196 instanceof Data_Ordering.GT) {
                              return lookup(dictOrd)(k)(tree.value6);
                          };
                          return lookup(dictOrd)(k)(tree.value3);
                      };
                      throw new Error("Failed pattern match at Data.Map line 149, column 10 - line 163, column 39: " + [ tree.constructor.name ]);
                  })());
              };
          };
      });
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map line 417, column 1 - line 417, column 16: " + [ v.constructor.name ]);
  };
  var fromZipper = function (__copy_dictOrd) {
      return function (__copy_v) {
          return function (__copy_tree) {
              var dictOrd = __copy_dictOrd;
              var v = __copy_v;
              var tree = __copy_tree;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof TwoRight) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 240, column 3 - line 245, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 238, column 1 - line 238, column 27: " + [ v.constructor.name, tree.constructor.name ]);
              };
          };
      };
  };
  var insert = function (dictOrd) {
      var up = function (__copy_v) {
          return function (__copy_v1) {
              var v = __copy_v;
              var v1 = __copy_v1;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return new Two(v1.value0, v1.value1, v1.value2, v1.value3);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          return fromZipper(dictOrd)(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, v.value0.value0, v.value0.value1, v.value0.value2));
                      };
                      if (v.value0 instanceof TwoRight) {
                          return fromZipper(dictOrd)(v.value1)(new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0, v1.value1, v1.value2, v1.value3));
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2, v1.value3), v.value0.value0, v.value0.value1, new Two(v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0), v1.value1, v1.value2, new Two(v1.value3, v.value0.value3, v.value0.value4, v.value0.value5));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), v.value0.value4, v.value0.value5, new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 276, column 5 - line 281, column 104: " + [ v.value0.constructor.name, v1.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 274, column 3 - line 274, column 54: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      };
      var comp = Data_Ord.compare(dictOrd);
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy_v) {
                  return function (__copy_v1) {
                      var ctx = __copy_ctx;
                      var k = __copy_k;
                      var v = __copy_v;
                      var v1 = __copy_v1;
                      tco: while (true) {
                          if (v1 instanceof Leaf) {
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var $317 = comp(k)(v1.value1);
                              if ($317 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if ($317 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value0;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              var __tco_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value3;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          if (v1 instanceof Three) {
                              var $322 = comp(k)(v1.value1);
                              if ($322 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var $324 = comp(k)(v1.value4);
                              if ($324 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if ($322 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value0;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              if ($322 instanceof Data_Ordering.GT && $324 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value3;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              var __tco_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value6;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.Map line 257, column 3 - line 257, column 52: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, v1.constructor.name ]);
                      };
                  };
              };
          };
      };
      return down(Data_List_Types.Nil.value);
  };
  var pop = function (dictOrd) {
      var up = Partial_Unsafe.unsafePartial(function (dictPartial) {
          return function (ctxs) {
              return function (tree) {
                  if (ctxs instanceof Data_List_Types.Nil) {
                      return tree;
                  };
                  if (ctxs instanceof Data_List_Types.Cons) {
                      var __unused = function (dictPartial1) {
                          return function ($dollar51) {
                              return $dollar51;
                          };
                      };
                      return __unused(dictPartial)((function () {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map line 326, column 9 - line 343, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Map line 323, column 5 - line 343, column 136: " + [ ctxs.constructor.name ]);
              };
          };
      });
      var removeMaxNode = Partial_Unsafe.unsafePartial(function (dictPartial) {
          return function (ctx) {
              return function (m) {
                  var __unused = function (dictPartial1) {
                      return function ($dollar53) {
                          return $dollar53;
                      };
                  };
                  return __unused(dictPartial)((function () {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                      };
                      throw new Error("Failed pattern match at Data.Map line 355, column 5 - line 359, column 107: " + [ m.constructor.name ]);
                  })());
              };
          };
      });
      var maxNode = Partial_Unsafe.unsafePartial(function (dictPartial) {
          return function (m) {
              var __unused = function (dictPartial1) {
                  return function ($dollar55) {
                      return $dollar55;
                  };
              };
              return __unused(dictPartial)((function () {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      return maxNode(m.value3);
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      return maxNode(m.value6);
                  };
                  throw new Error("Failed pattern match at Data.Map line 346, column 33 - line 350, column 45: " + [ m.constructor.name ]);
              })());
          };
      });
      var comp = Data_Ord.compare(dictOrd);
      var down = Partial_Unsafe.unsafePartial(function (dictPartial) {
          return function (ctx) {
              return function (k) {
                  return function (m) {
                      if (m instanceof Leaf) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var $535 = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && $535 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if ($535 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if ($535 instanceof Data_Ordering.LT) {
                              return down(new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx))(k)(m.value0);
                          };
                          return down(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(k)(m.value3);
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var $544 = comp(k)(m.value1);
                          var $545 = comp(k)(m.value4);
                          if (leaves && $544 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && $545 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if ($544 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if ($545 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if ($544 instanceof Data_Ordering.LT) {
                              return down(new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx))(k)(m.value0);
                          };
                          if ($544 instanceof Data_Ordering.GT && $545 instanceof Data_Ordering.LT) {
                              return down(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx))(k)(m.value3);
                          };
                          return down(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(k)(m.value6);
                      };
                      throw new Error("Failed pattern match at Data.Map line 296, column 36 - line 319, column 82: " + [ m.constructor.name ]);
                  };
              };
          };
      });
      return down(Data_List_Types.Nil.value);
  };
  var empty = Leaf.value;
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var $635 = f(lookup(dictOrd)(k)(m));
                  if ($635 instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if ($635 instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)($635.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map line 364, column 15 - line 366, column 25: " + [ $635.constructor.name ]);
              };
          };
      };
  };
  var fromFoldableWith = function (dictOrd) {
      return function (dictFoldable) {
          return function (f) {
              var combine = function (v) {
                  return function (v1) {
                      if (v1 instanceof Data_Maybe.Just) {
                          return Data_Maybe.Just.create(f(v)(v1.value0));
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return new Data_Maybe.Just(v);
                      };
                      throw new Error("Failed pattern match at Data.Map line 381, column 3 - line 381, column 38: " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              return Data_Foldable.foldl(dictFoldable)(function (m) {
                  return function (v) {
                      return alter(dictOrd)(combine(v.value1))(v.value0)(m);
                  };
              })(empty);
          };
      };
  };
  exports["alter"] = alter;
  exports["delete"] = $$delete;
  exports["empty"] = empty;
  exports["fromFoldableWith"] = fromFoldableWith;
  exports["insert"] = insert;
  exports["keys"] = keys;
  exports["lookup"] = lookup;
  exports["pop"] = pop;
  exports["singleton"] = singleton;
  exports["toAscUnfoldable"] = toAscUnfoldable;
  exports["toList"] = toList;
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Unit = PS["Data.Unit"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semiring = PS["Data.Semiring"];
  var $$Set = (function () {
      function $$Set(value0) {
          this.value0 = value0;
      };
      $$Set.create = function (value0) {
          return new $$Set(value0);
      };
      return $$Set;
  })();
  var toList = function (v) {
      return Data_Map.keys(v.value0);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function ($61) {
          return Data_List.toUnfoldable(dictUnfoldable)(toList($61));
      };
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return new $$Set(Data_Map.insert(dictOrd)(a)(Data_Unit.unit)(v.value0));
          };
      };
  };
  var empty = new $$Set(Data_Map.empty);
  var $$delete = function (dictOrd) {
      return function (a) {
          return function (v) {
              return new $$Set(Data_Map["delete"](dictOrd)(a)(v.value0));
          };
      };
  };
  var difference = function (dictOrd) {
      return function (s1) {
          return function (s2) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(s1)(toList(s2));
          };
      };
  };
  exports["difference"] = difference;
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["toUnfoldable"] = toUnfoldable;
})(PS["Data.Set"] = PS["Data.Set"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.runST = function (f) {
    return f;
  };

  // jshint maxparams: 4
  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function _collect(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports._collect = _collect;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap.ST

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };

  exports["delete"] = function (m) {
    return function (k) {
      return function () {
        delete m[k];
        return m;
      };
    };
  };
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["delete"] = $foreign["delete"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Bind = PS["Control.Bind"];
  var values = function ($43) {
      return Data_List.fromFoldable(Data_Foldable.foldableArray)($foreign._collect(function (v) {
          return function (v1) {
              return v1;
          };
      })($43));
  };
  var toList = function ($44) {
      return Data_List.fromFoldable(Data_Foldable.foldableArray)($foreign._collect(Data_Tuple.Tuple.create)($44));
  };
  var thawST = $foreign._copyEff;
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
          });
      };
  };
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return pureST(function __do() {
              var v = Data_StrMap_ST["new"]();
              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                  return Data_StrMap_ST.poke(v)(v1.value0)(v1.value1);
              })();
              return v;
          });
      };
  };
  var $$delete = function (k) {
      return mutate(function (s) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST["delete"](s)(k));
      });
  };
  var alter = function (f) {
      return function (k) {
          return function (m) {
              var $41 = f(lookup(k)(m));
              if ($41 instanceof Data_Maybe.Nothing) {
                  return $$delete(k)(m);
              };
              if ($41 instanceof Data_Maybe.Just) {
                  return insert(k)($41.value0)(m);
              };
              throw new Error("Failed pattern match at Data.StrMap line 184, column 15 - line 186, column 25: " + [ $41.constructor.name ]);
          };
      };
  };
  exports["alter"] = alter;
  exports["fromFoldable"] = fromFoldable;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["pureST"] = pureST;
  exports["thawST"] = thawST;
  exports["toList"] = toList;
  exports["values"] = values;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
    "use strict";

  // Alias require to prevent webpack or browserify from actually requiring.
  var req = typeof module === "undefined" ? undefined : module.require;
  var util = req === undefined ? undefined : req("util");

  exports.traceAny = function (x) {
    return function (k) {
      // node only recurses two levels into an object before printing
      // "[object]" for further objects when using console logging
      if (util !== undefined) {
        var z = util.inspect(x, { depth: null, colors: true });
        console.debug(z);/*RemoveLogging:skip*/
      } else {
        console.debug(x);/*RemoveLogging:skip*/
      }
      return k({});
    };
  };
})(PS["Debug.Trace"] = PS["Debug.Trace"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["Debug.Trace"];
  var Prelude = PS["Prelude"];
  var Data_Show = PS["Data.Show"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Unit = PS["Data.Unit"];
  var trace = $foreign.traceAny;
  exports["trace"] = trace;
})(PS["Debug.Trace"] = PS["Debug.Trace"] || {});
(function(exports) {
    "use strict";

  // module KanColle.Util

  exports.peekSTArrayUnsafe = function (xs) {
        return function (i) {
          return function () {
            return xs[i];
          };
        };
  };

  exports.pokeSTArrayUnsafe = function (xs) {
    return function (i) {
      return function (a) {
        return function () {
            xs [i]=a;
            return {};
        };
      };
    };
  };

  exports.jsonStringify = function (x) {
      return JSON.stringify(x);
  };

  // level = 0 or 1
  exports.consoleMessage = function(level) {
      return function (x) {
          return function (k) {
              if (level === 0) {
                  console.log(x);/*RemoveLogging:skip*/
              } else if (level === 1) {
                  console.warn(x);/*RemoveLogging:skip*/
              } else {
                  console.warn("Unknown level: " + level);/*RemoveLogging:skip*/
                  console.warn(x);/*RemoveLogging:skip*/
              }
              return k({});
          };
      };
  };

  exports.throwWith = function(o) {
      throw o;
  };

  exports.unsafeToFixed = function (scale) {
      return function (number) {
          return function () {
              return number.toFixed(scale);
          }
      }
  };
})(PS["KanColle.Util"] = PS["KanColle.Util"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["KanColle.Util"];
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Int = PS["Data.Int"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_Partial = PS["Data.Array.Partial"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Plus = PS["Control.Plus"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var unsafeArrTail = Partial_Unsafe.unsafePartial(function (dictPartial) {
      return Data_Array_Partial.tail(dictPartial);
  });
  var unsafeArrIndex = Partial_Unsafe.unsafePartial(function (dictPartial) {
      return Data_Array.unsafeIndex(dictPartial);
  });
  var unsafeArrHead = Partial_Unsafe.unsafePartial(function (dictPartial) {
      return Data_Array_Partial.head(dictPartial);
  });
  var traceWarn = $foreign.consoleMessage(1);
  var traceLog = $foreign.consoleMessage(0);
  var todo = function (v) {
      return $foreign.throwWith("TODO");
  };
  var toFixed = function (scale) {
      return function (num) {
          return Control_Monad_Eff.runPure(Control_Monad_Eff_Exception.catchException(function ($37) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Function["const"](Data_Maybe.Nothing.value)($37));
          })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.Just.create)($foreign.unsafeToFixed(scale)(num))));
      };
  };
  var times1p = function (dictSemigroup) {
      return function (y0) {
          return function (x0) {
              var g = function (__copy_x) {
                  return function (__copy_y) {
                      return function (__copy_z) {
                          var x = __copy_x;
                          var y = __copy_y;
                          var z = __copy_z;
                          tco: while (true) {
                              if (Data_Int.even(y)) {
                                  var __tco_x = Data_Semigroup.append(dictSemigroup)(x)(x);
                                  var __tco_y = y / 2 | 0;
                                  var __tco_z = z;
                                  x = __tco_x;
                                  y = __tco_y;
                                  z = __tco_z;
                                  continue tco;
                              };
                              if (y === 1) {
                                  return Data_Semigroup.append(dictSemigroup)(x)(z);
                              };
                              if (Data_Boolean.otherwise) {
                                  var __tco_x = Data_Semigroup.append(dictSemigroup)(x)(x);
                                  var __tco_y = (y - 1) / 2 | 0;
                                  var __tco_z = Data_Semigroup.append(dictSemigroup)(x)(z);
                                  x = __tco_x;
                                  y = __tco_y;
                                  z = __tco_z;
                                  continue tco;
                              };
                              throw new Error("Failed pattern match at KanColle.Util line 73, column 1 - line 82, column 54: " + [ x.constructor.name, y.constructor.name, z.constructor.name ]);
                          };
                      };
                  };
              };
              var f = function (__copy_x) {
                  return function (__copy_y) {
                      var x = __copy_x;
                      var y = __copy_y;
                      tco: while (true) {
                          if (Data_Int.even(y)) {
                              var __tco_x = Data_Semigroup.append(dictSemigroup)(x)(x);
                              var __tco_y = y / 2 | 0;
                              x = __tco_x;
                              y = __tco_y;
                              continue tco;
                          };
                          if (y === 1) {
                              return x;
                          };
                          if (Data_Boolean.otherwise) {
                              return g(Data_Semigroup.append(dictSemigroup)(x)(x))((y - 1) / 2 | 0)(x);
                          };
                          throw new Error("Failed pattern match at KanColle.Util line 73, column 1 - line 82, column 54: " + [ x.constructor.name, y.constructor.name ]);
                      };
                  };
              };
              return f(x0)(y0 + 1 | 0);
          };
      };
  };
  var times = function (dictMonoid) {
      return function (v) {
          return function (v1) {
              if (v === 0) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              return times1p(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v - 1)(v1);
          };
      };
  };
  var tails = function (xs) {
      if (xs instanceof Data_List_Types.Nil) {
          return new Data_List_Types.Cons(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
      };
      if (xs instanceof Data_List_Types.Cons) {
          return new Data_List_Types.Cons(xs, tails(xs.value1));
      };
      throw new Error("Failed pattern match at KanColle.Util line 92, column 12 - line 94, column 40: " + [ xs.constructor.name ]);
  };
  var memptyLR = function (dictMonoid) {
      return {
          left: Data_Monoid.mempty(dictMonoid),
          right: Data_Monoid.mempty(dictMonoid)
      };
  };
  var lrOnlyRight = function (dictMonoid) {
      return function (r) {
          return {
              left: Data_Monoid.mempty(dictMonoid),
              right: r
          };
      };
  };
  var lrOnlyLeft = function (dictMonoid) {
      return function (l) {
          return {
              left: l,
              right: Data_Monoid.mempty(dictMonoid)
          };
      };
  };
  var lrMap = function (f) {
      return function (x) {
          return {
              left: f(x.left),
              right: f(x.right)
          };
      };
  };
  var lrAppend = function (dictMonoid) {
      return function (a) {
          return function (b) {
              return {
                  left: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(a.left)(b.left),
                  right: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(a.right)(b.right)
              };
          };
      };
  };
  var fleetSplit = function (cutHead) {
      return function (xs) {
          var ys = (function () {
              if (cutHead) {
                  return Partial_Unsafe.unsafePartial(function (dictPartial) {
                      return Data_Array_Partial.tail(dictPartial);
                  })(xs);
              };
              if (!cutHead) {
                  return xs;
              };
              throw new Error("Failed pattern match at KanColle.Util line 142, column 10 - line 144, column 19: " + [ cutHead.constructor.name ]);
          })();
          var check = Data_Array.length(ys) === 12;
          if (check) {
              return {
                  left: Data_Array.slice(0)(6)(ys),
                  right: Data_Array.slice(6)(12)(ys)
              };
          };
          if (!check) {
              return $foreign.throwWith("fleetSplit: array length need to be 12 (or 13 on raw)");
          };
          throw new Error("Failed pattern match at KanColle.Util line 137, column 25 - line 141, column 3: " + [ check.constructor.name ]);
      };
  };
  var chooseN = function (dictFoldable) {
      return function (xs) {
          var xsL = Data_List.fromFoldable(dictFoldable)(xs);
          var pickFrom = function (v) {
              return function (v1) {
                  if (v1 === 0) {
                      return new Data_List_Types.Cons(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
                  };
                  return Control_Bind.bind(Data_List_Types.bindList)(tails(v))(function (v2) {
                      if (v2 instanceof Data_List_Types.Nil) {
                          return Control_Plus.empty(Data_List_Types.plusList);
                      };
                      if (v2 instanceof Data_List_Types.Cons) {
                          return Control_Bind.bind(Data_List_Types.bindList)(pickFrom(v2.value1)(v1 - 1))(function (v3) {
                              return Control_Applicative.pure(Data_List_Types.applicativeList)(new Data_List_Types.Cons(v2.value0, v3));
                          });
                      };
                      throw new Error("Failed pattern match at KanColle.Util line 105, column 7 - line 109, column 30: " + [ v2.constructor.name ]);
                  });
              };
          };
          return function ($38) {
              return Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(pickFrom(xsL)($38));
          };
      };
  };
  var chooseN_FFI = function (xs, n) {
      return Data_Functor.map(Data_Functor.functorArray)(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray))(chooseN(Data_Foldable.foldableArray)(xs)(n));
  };
  exports["chooseN"] = chooseN;
  exports["chooseN_FFI"] = chooseN_FFI;
  exports["fleetSplit"] = fleetSplit;
  exports["lrAppend"] = lrAppend;
  exports["lrMap"] = lrMap;
  exports["lrOnlyLeft"] = lrOnlyLeft;
  exports["lrOnlyRight"] = lrOnlyRight;
  exports["memptyLR"] = memptyLR;
  exports["times"] = times;
  exports["toFixed"] = toFixed;
  exports["todo"] = todo;
  exports["traceLog"] = traceLog;
  exports["traceWarn"] = traceWarn;
  exports["unsafeArrHead"] = unsafeArrHead;
  exports["unsafeArrIndex"] = unsafeArrIndex;
  exports["unsafeArrTail"] = unsafeArrTail;
  exports["jsonStringify"] = $foreign.jsonStringify;
  exports["peekSTArrayUnsafe"] = $foreign.peekSTArrayUnsafe;
  exports["pokeSTArrayUnsafe"] = $foreign.pokeSTArrayUnsafe;
  exports["throwWith"] = $foreign.throwWith;
})(PS["KanColle.Util"] = PS["KanColle.Util"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var KanColle_Util = PS["KanColle.Util"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Show = PS["Data.Show"];
  var Data_Ord = PS["Data.Ord"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var RepairTeam = (function () {
      function RepairTeam() {

      };
      RepairTeam.value = new RepairTeam();
      return RepairTeam;
  })();
  var RepairGoddess = (function () {
      function RepairGoddess() {

      };
      RepairGoddess.value = new RepairGoddess();
      return RepairGoddess;
  })();
  var toCombinedBattleAC = function (g) {
      return {
          main: g.allyMain,
          enemyMain: g.enemyMain,
          enemyEscort: g.enemyEscort
      };
  };
  var toCombinedBattle = function (g) {
      return {
          main: g.allyMain,
          escort: g.allyEscort,
          enemy: g.enemyMain
      };
  };
  var showDameCon = new Data_Show.Show(function (c) {
      if (c instanceof RepairTeam) {
          return "RepairTeam";
      };
      if (c instanceof RepairGoddess) {
          return "RepairGoddess";
      };
      throw new Error("Failed pattern match at KanColle.DamageAnalysis.Types line 39, column 12 - line 43, column 1: " + [ c.constructor.name ]);
  });
  var mkShip = function (hp) {
      return function (fullHp) {
          return function (dc) {
              return {
                  fullHp: fullHp,
                  hp: hp,
                  sunk: hp <= 0,
                  dameCon: dc
              };
          };
      };
  };
  var mapNormalBattle = function (f) {
      return function (x) {
          return {
              main: f(x.main),
              enemy: f(x.enemy)
          };
      };
  };
  var mapCombinedBattle = function (f) {
      return function (x) {
          return {
              main: f(x.main),
              escort: f(x.escort),
              enemy: f(x.enemy)
          };
      };
  };
  var lrToNormal = function (x) {
      return {
          main: x.left,
          enemy: x.right
      };
  };
  var getShipResult = function (sBefore) {
      return function (sAfter) {
          return {
              hp: sAfter.hp,
              sunk: sAfter.hp <= 0,
              dameConConsumed: Data_Maybe.isJust(sBefore.dameCon) && Data_Maybe.isNothing(sAfter.dameCon)
          };
      };
  };
  var eqDameCon = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof RepairTeam && y instanceof RepairTeam) {
              return true;
          };
          if (x instanceof RepairGoddess && y instanceof RepairGoddess) {
              return true;
          };
          return false;
      };
  });
  var dupAsNormalBattle = function (v) {
      return {
          main: v,
          enemy: v
      };
  };
  var dupAsCombinedBattle = function (v) {
      return {
          main: v,
          escort: v,
          enemy: v
      };
  };
  var appNormalBattle = function (f) {
      return function (a) {
          return {
              main: f.main(a.main),
              enemy: f.enemy(a.enemy)
          };
      };
  };
  var appCombinedBattle = function (f) {
      return function (a) {
          return {
              main: f.main(a.main),
              escort: f.escort(a.escort),
              enemy: f.enemy(a.enemy)
          };
      };
  };
  exports["RepairTeam"] = RepairTeam;
  exports["RepairGoddess"] = RepairGoddess;
  exports["appCombinedBattle"] = appCombinedBattle;
  exports["appNormalBattle"] = appNormalBattle;
  exports["dupAsCombinedBattle"] = dupAsCombinedBattle;
  exports["dupAsNormalBattle"] = dupAsNormalBattle;
  exports["getShipResult"] = getShipResult;
  exports["lrToNormal"] = lrToNormal;
  exports["mapCombinedBattle"] = mapCombinedBattle;
  exports["mapNormalBattle"] = mapNormalBattle;
  exports["mkShip"] = mkShip;
  exports["toCombinedBattle"] = toCombinedBattle;
  exports["toCombinedBattleAC"] = toCombinedBattleAC;
  exports["eqDameCon"] = eqDameCon;
  exports["showDameCon"] = showDameCon;
})(PS["KanColle.DamageAnalysis.Types"] = PS["KanColle.DamageAnalysis.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Int = PS["Data.Int"];
  var KanColle_DamageAnalysis_Types = PS["KanColle.DamageAnalysis.Types"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Damage = function (x) {
      return x;
  };
  var mergeDamage = function (v) {
      return function (v1) {
          return function ($22) {
              return v1(v($22));
          };
      };
  };
  var semigroupDamage = new Data_Semigroup.Semigroup(mergeDamage);
  var monoidDamage = new Data_Monoid.Monoid(function () {
      return semigroupDamage;
  }, Control_Category.id(Control_Category.categoryFn));
  var applyDameCon = function (dc) {
      return function (s) {
          var s1 = (function () {
              var $6 = {};
              for (var $7 in s) {
                  if ({}.hasOwnProperty.call(s, $7)) {
                      $6[$7] = s[$7];
                  };
              };
              $6.sunk = false;
              $6.dameCon = Data_Maybe.Nothing.value;
              return $6;
          })();
          if (dc instanceof KanColle_DamageAnalysis_Types.RepairTeam) {
              var $10 = {};
              for (var $11 in s1) {
                  if ({}.hasOwnProperty.call(s1, $11)) {
                      $10[$11] = s1[$11];
                  };
              };
              $10.hp = Data_Int.floor(0.2 * Data_Int.toNumber(s.fullHp));
              return $10;
          };
          if (dc instanceof KanColle_DamageAnalysis_Types.RepairGoddess) {
              var $13 = {};
              for (var $14 in s1) {
                  if ({}.hasOwnProperty.call(s1, $14)) {
                      $13[$14] = s1[$14];
                  };
              };
              $13.hp = s.fullHp;
              return $13;
          };
          throw new Error("Failed pattern match at KanColle.DamageAnalysis.Damage line 40, column 21 - line 42, column 40: " + [ dc.constructor.name ]);
      };
  };
  var tryDameCon = function (s) {
      if (s.sunk) {
          return Data_Maybe.maybe(s)(function (dc) {
              return applyDameCon(dc)(s);
          })(s.dameCon);
      };
      if (!s.sunk) {
          return s;
      };
      throw new Error("Failed pattern match at KanColle.DamageAnalysis.Damage line 48, column 16 - line 51, column 11: " + [ s.sunk.constructor.name ]);
  };
  var applyDamageNum = function (v) {
      return function (s) {
          var newHp = s.hp - v;
          var $17 = {};
          for (var $18 in s) {
              if ({}.hasOwnProperty.call(s, $18)) {
                  $17[$18] = s[$18];
              };
          };
          $17.hp = newHp;
          $17.sunk = newHp <= 0;
          return $17;
      };
  };
  var mkDamage = function (v) {
      if (v === 0) {
          return Control_Category.id(Control_Category.categoryFn);
      };
      return function ($23) {
          return tryDameCon(applyDamageNum(v)($23));
      };
  };
  var applyDamage = function (v) {
      return v;
  };
  var damageToInt = function (dmg) {
      var dummyShip = {
          hp: 10000,
          fullHp: 10000,
          sunk: false,
          dameCon: Data_Maybe.Nothing.value
      };
      var afterShip = applyDamage(dmg)(dummyShip);
      return dummyShip.hp - afterShip.hp;
  };
  var addDamage = function (dmg) {
      return function (v) {
          return mergeDamage(dmg)(mkDamage(v));
      };
  };
  exports["addDamage"] = addDamage;
  exports["applyDamage"] = applyDamage;
  exports["damageToInt"] = damageToInt;
  exports["mergeDamage"] = mergeDamage;
  exports["mkDamage"] = mkDamage;
  exports["semigroupDamage"] = semigroupDamage;
  exports["monoidDamage"] = monoidDamage;
})(PS["KanColle.DamageAnalysis.Damage"] = PS["KanColle.DamageAnalysis.Damage"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var KanColle_Util = PS["KanColle.Util"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var KArray = function (x) {
      return x;
  };
  var Battle = function (x) {
      return x;
  };
  var hasField = function (s) {
      return function ($8) {
          return Data_Foreign_Index.hasOwnProperty(Data_Foreign_Index.indexString)(s)(Data_Foreign.toForeign($8));
      };
  };
  var getHouraiFlags = function (v) {
      var $5 = hasField("api_hourai_flag")(v);
      if ($5) {
          return new Data_Maybe.Just(v.api_hourai_flag);
      };
      if (!$5) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle.Internal line 115, column 4 - line 117, column 18: " + [ $5.constructor.name ]);
  };
  var fromKArray = function (v) {
      return KanColle_Util.unsafeArrTail(v);
  };
  var checkHouraiFlag = function (ind) {
      return function (b) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
              return KanColle_Util.unsafeArrIndex(v)(ind);
          })(getHouraiFlags(b)))(function (v) {
              return Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(v === 1);
          });
      };
  };
  exports["Battle"] = Battle;
  exports["checkHouraiFlag"] = checkHouraiFlag;
  exports["fromKArray"] = fromKArray;
  exports["getHouraiFlags"] = getHouraiFlags;
  exports["hasField"] = hasField;
})(PS["KanColle.KCAPI.Battle.Internal"] = PS["KanColle.KCAPI.Battle.Internal"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var KanColle_KCAPI_Battle_Internal = PS["KanColle.KCAPI.Battle.Internal"];
  var KanColle_Util = PS["KanColle.Util"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var hasLandBasedAirStrikes = KanColle_KCAPI_Battle_Internal.hasField("api_air_base_attack");
  var hasKouku2 = function (v) {
      if (KanColle_KCAPI_Battle_Internal.hasField("api_stage_flag2")(v)) {
          return KanColle_Util.unsafeArrIndex(v.api_stage_flag2)(2) === 1;
      };
      return false;
  };
  var hasKouku = function (v) {
      if (KanColle_KCAPI_Battle_Internal.hasField("api_stage_flag")(v)) {
          return KanColle_Util.unsafeArrIndex(v.api_stage_flag)(2) === 1;
      };
      return false;
  };
  var hasHourai = function (v) {
      return KanColle_KCAPI_Battle_Internal.hasField("api_hourai_flag")(v);
  };
  var hasHougeki = function (v) {
      return KanColle_KCAPI_Battle_Internal.hasField("api_hougeki")(v);
  };
  var getSupportFlag = function (v) {
      var $32 = KanColle_KCAPI_Battle_Internal.hasField("api_support_flag")(v);
      if ($32) {
          return new Data_Maybe.Just(v.api_support_flag);
      };
      if (!$32) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 100, column 32 - line 102, column 15: " + [ $32.constructor.name ]);
  };
  var getSupportHouraiInfo = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(getSupportFlag(v))(function (v1) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(v1 === 2 || v1 === 3))(function () {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_support_info.api_support_hourai);
          });
      });
  };
  var getSupportAirInfo = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(getSupportFlag(v))(function (v1) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(v1 === 1))(function () {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_support_info.api_support_airatack);
          });
      });
  };
  var getRaigeki = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(3)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_raigeki);
      });
  };
  var getOpeningTaisen = function (v) {
      var $39 = KanColle_KCAPI_Battle_Internal.hasField("api_opening_taisen_flag")(v) && v.api_opening_taisen_flag === 1;
      if ($39) {
          return new Data_Maybe.Just(v.api_opening_taisen);
      };
      if (!$39) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 130, column 5 - line 133, column 19: " + [ $39.constructor.name ]);
  };
  var getOpeningAttack = function (v) {
      var $41 = KanColle_KCAPI_Battle_Internal.hasField("api_opening_flag")(v) && v.api_opening_flag === 1;
      if ($41) {
          return new Data_Maybe.Just(v.api_opening_atack);
      };
      if (!$41) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 123, column 5 - line 126, column 19: " + [ $41.constructor.name ]);
  };
  var getLandBasedAirStrikes = function (v) {
      var $43 = hasLandBasedAirStrikes(v);
      if ($43) {
          return new Data_Maybe.Just(v.api_air_base_attack);
      };
      if (!$43) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 164, column 40 - line 166, column 17: " + [ $43.constructor.name ]);
  };
  var getKoukuStage3FDam = function (ks3) {
      var $44 = KanColle_KCAPI_Battle_Internal.hasField("api_fdam")(ks3);
      if ($44) {
          return new Data_Maybe.Just(ks3.api_fdam);
      };
      if (!$44) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 185, column 26 - line 187, column 17: " + [ $44.constructor.name ]);
  };
  var getKoukuStage3EEscortMaybe = function (kk) {
      var $45 = KanColle_Util.unsafeArrIndex(kk.api_stage_flag)(2) === 1;
      if ($45) {
          return new Data_Maybe.Just(kk.api_stage3_combined);
      };
      if (!$45) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 180, column 33 - line 182, column 17: " + [ $45.constructor.name ]);
  };
  var getKoukuStage3EDam = function (ks3) {
      var $46 = KanColle_KCAPI_Battle_Internal.hasField("api_edam")(ks3);
      if ($46) {
          return new Data_Maybe.Just(ks3.api_edam);
      };
      if (!$46) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 190, column 26 - line 192, column 17: " + [ $46.constructor.name ]);
  };
  var getKoukuStage3AC = function (kk) {
      var $47 = KanColle_Util.unsafeArrIndex(kk.api_stage_flag)(2) === 1;
      if ($47) {
          return new Data_Maybe.Just(function (f) {
              return f(kk.api_stage3)(kk.api_stage3_combined);
          });
      };
      if (!$47) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 175, column 23 - line 177, column 17: " + [ $47.constructor.name ]);
  };
  var getKoukuStage3 = function (kk) {
      var $48 = KanColle_Util.unsafeArrIndex(kk.api_stage_flag)(2) === 1;
      if ($48) {
          return new Data_Maybe.Just(kk.api_stage3);
      };
      if (!$48) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 169, column 21 - line 171, column 17: " + [ $48.constructor.name ]);
  };
  var getKouku2 = function (v) {
      var $50 = hasKouku2(v);
      if ($50) {
          return new Data_Maybe.Just(v.api_kouku2);
      };
      if (!$50) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 117, column 27 - line 119, column 15: " + [ $50.constructor.name ]);
  };
  var getKouku = function (v) {
      var $52 = hasKouku(v);
      if ($52) {
          return new Data_Maybe.Just(v.api_kouku);
      };
      if (!$52) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 95, column 26 - line 97, column 15: " + [ $52.constructor.name ]);
  };
  var getInjectionKouku = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(KanColle_KCAPI_Battle_Internal.hasField("api_injection_kouku")(v)))(function () {
          return new Data_Maybe.Just(v.api_injection_kouku);
      });
  };
  var getHougeki3 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(2)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki3);
      });
  };
  var getHougeki2 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(1)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki2);
      });
  };
  var getHougeki1 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(0)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki1);
      });
  };
  var getHougeki = function (v) {
      var $58 = hasHougeki(v);
      if ($58) {
          return new Data_Maybe.Just(v.api_hougeki);
      };
      if (!$58) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at KanColle.KCAPI.Battle line 156, column 28 - line 158, column 15: " + [ $58.constructor.name ]);
  };
  var getEnemyActiveDeck = function (v) {
      return KanColle_Util.unsafeArrIndex(v.api_active_deck)(1);
  };
  var getAirBaseInjection = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(KanColle_KCAPI_Battle_Internal.hasField("api_air_base_injection")(v)))(function () {
          return new Data_Maybe.Just(v.api_air_base_injection);
      });
  };
  var fromRawHp = function (v) {
      if (v === -1) {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just(v);
  };
  var getInitHps = function (v) {
      return Data_Functor.map(Data_Functor.functorArray)(fromRawHp)(KanColle_KCAPI_Battle_Internal.fromKArray(v.api_nowhps));
  };
  var getInitHpsCombined = function (v) {
      return Data_Functor.map(Data_Functor.functorArray)(fromRawHp)(KanColle_KCAPI_Battle_Internal.fromKArray(v.api_nowhps_combined));
  };
  var getMaxHps = function (v) {
      return Data_Functor.map(Data_Functor.functorArray)(fromRawHp)(KanColle_KCAPI_Battle_Internal.fromKArray(v.api_maxhps));
  };
  var getMaxHpsCombined = function (v) {
      return Data_Functor.map(Data_Functor.functorArray)(fromRawHp)(KanColle_KCAPI_Battle_Internal.fromKArray(v.api_maxhps_combined));
  };
  exports["getAirBaseInjection"] = getAirBaseInjection;
  exports["getEnemyActiveDeck"] = getEnemyActiveDeck;
  exports["getHougeki"] = getHougeki;
  exports["getHougeki1"] = getHougeki1;
  exports["getHougeki2"] = getHougeki2;
  exports["getHougeki3"] = getHougeki3;
  exports["getInitHps"] = getInitHps;
  exports["getInitHpsCombined"] = getInitHpsCombined;
  exports["getInjectionKouku"] = getInjectionKouku;
  exports["getKouku"] = getKouku;
  exports["getKouku2"] = getKouku2;
  exports["getKoukuStage3"] = getKoukuStage3;
  exports["getKoukuStage3EDam"] = getKoukuStage3EDam;
  exports["getKoukuStage3FDam"] = getKoukuStage3FDam;
  exports["getLandBasedAirStrikes"] = getLandBasedAirStrikes;
  exports["getMaxHps"] = getMaxHps;
  exports["getMaxHpsCombined"] = getMaxHpsCombined;
  exports["getOpeningAttack"] = getOpeningAttack;
  exports["getOpeningTaisen"] = getOpeningTaisen;
  exports["getRaigeki"] = getRaigeki;
  exports["getSupportAirInfo"] = getSupportAirInfo;
  exports["getSupportHouraiInfo"] = getSupportHouraiInfo;
})(PS["KanColle.KCAPI.Battle"] = PS["KanColle.KCAPI.Battle"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Int = PS["Data.Int"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_Types = PS["KanColle.DamageAnalysis.Types"];
  var KanColle_DamageAnalysis_Damage = PS["KanColle.DamageAnalysis.Damage"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Traversable = PS["Data.Traversable"];
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var KanColle_KCAPI_Battle_Internal = PS["KanColle.KCAPI.Battle.Internal"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Semiring = PS["Data.Semiring"];
  var FRMain = (function () {
      function FRMain() {

      };
      FRMain.value = new FRMain();
      return FRMain;
  })();
  var FREscort = (function () {
      function FREscort() {

      };
      FREscort.value = new FREscort();
      return FREscort;
  })();
  var FRSupport = (function () {
      function FRSupport() {

      };
      FRSupport.value = new FRSupport();
      return FRSupport;
  })();
  var FRLandBased = (function () {
      function FRLandBased() {

      };
      FRLandBased.value = new FRLandBased();
      return FRLandBased;
  })();
  var DV = function (x) {
      return x;
  };
  var toCombinedBC = function (dv) {
      return {
          allyMain: dv.left.left,
          allyEscort: dv.left.right,
          enemyMain: dv.right.left,
          enemyEscort: dv.right.right
      };
  };
  var toCombinedAC = function (dv) {
      return {
          main: dv.left.left,
          enemyMain: dv.right.left,
          enemyEscort: dv.right.right
      };
  };
  var simulateHougeki = function (dictTraversable) {
      return function (len) {
          return function (actions) {
              var accumulateDamage = function (arr) {
                  return function (targetInd) {
                      return function (damage) {
                          return function __do() {
                              var v = KanColle_Util.peekSTArrayUnsafe(arr)(targetInd)();
                              KanColle_Util.pokeSTArrayUnsafe(arr)(targetInd)(Data_Semigroup.append(KanColle_DamageAnalysis_Damage.semigroupDamage)(v)(damage))();
                              return Data_Unit.unit;
                          };
                      };
                  };
              };
              var resultDmgs = function __do() {
                  var v = Data_Array_ST.thaw(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(len)(Data_Monoid.mempty(KanColle_DamageAnalysis_Damage.monoidDamage)))();
                  Data_Traversable.traverse(dictTraversable)(Control_Monad_Eff.applicativeEff)(Data_Tuple.uncurry(accumulateDamage(v)))(actions)();
                  return v;
              };
              return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(resultDmgs));
          };
      };
  };
  var semigroupDamageVector = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return Data_Array.zipWith(Data_Semigroup.append(KanColle_DamageAnalysis_Damage.semigroupDamage))(v)(v1);
      };
  });
  var normalizeDamage = function (x) {
      if (x >= 0.0) {
          return Data_Int.floor(x);
      };
      if (x === -1.0) {
          return 0;
      };
      if (Data_Boolean.otherwise) {
          var warning = "invalid damage number: " + Data_Show.show(Data_Show.showNumber)(x);
          return KanColle_Util.traceWarn(warning)(function (v) {
              return 0;
          });
      };
      throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 64, column 1 - line 69, column 35: " + [ x.constructor.name ]);
  };
  var monoidDamageVector = new Data_Monoid.Monoid(function () {
      return semigroupDamageVector;
  }, Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(6)(Data_Monoid.mempty(KanColle_DamageAnalysis_Damage.monoidDamage)));
  var toGCombined = function (r) {
      return function (dv) {
          if (r instanceof FRMain) {
              return {
                  allyMain: dv.left,
                  allyEscort: Data_Monoid.mempty(monoidDamageVector),
                  enemyMain: dv.right,
                  enemyEscort: Data_Monoid.mempty(monoidDamageVector)
              };
          };
          if (r instanceof FREscort) {
              return {
                  allyMain: Data_Monoid.mempty(monoidDamageVector),
                  allyEscort: dv.left,
                  enemyMain: dv.right,
                  enemyEscort: Data_Monoid.mempty(monoidDamageVector)
              };
          };
          if (r instanceof FRSupport) {
              return {
                  allyMain: Data_Monoid.mempty(monoidDamageVector),
                  allyEscort: Data_Monoid.mempty(monoidDamageVector),
                  enemyMain: dv.right,
                  enemyEscort: Data_Monoid.mempty(monoidDamageVector)
              };
          };
          if (r instanceof FRLandBased) {
              return {
                  allyMain: Data_Monoid.mempty(monoidDamageVector),
                  allyEscort: Data_Monoid.mempty(monoidDamageVector),
                  enemyMain: dv.right,
                  enemyEscort: Data_Monoid.mempty(monoidDamageVector)
              };
          };
          throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 330, column 20 - line 342, column 53: " + [ r.constructor.name ]);
      };
  };
  var toCombined = function (r) {
      return function (dv) {
          return KanColle_DamageAnalysis_Types.toCombinedBattle(toGCombined(r)(dv));
      };
  };
  var mkDV = function (xs) {
      var check = Data_Array.length(xs) === 6;
      if (check) {
          return xs;
      };
      if (!check) {
          return KanColle_Util.throwWith("mkDV: array size should be 6");
      };
      throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 81, column 11 - line 84, column 3: " + [ check.constructor.name ]);
  };
  var getDV = function (v) {
      return v;
  };
  var debugShowDV = function (v) {
      return Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(function ($33) {
          return Data_Show.show(Data_Show.showInt)(KanColle_DamageAnalysis_Damage.damageToInt($33));
      })(v));
  };
  var convertFEDam = function ($34) {
      return Data_Functor.map(Data_Functor.functorArray)(function ($35) {
          return KanColle_DamageAnalysis_Damage.mkDamage(normalizeDamage($35));
      })(KanColle_KCAPI_Battle_Internal.fromKArray($34));
  };
  var fromFDamAndEDam = function (ks3) {
      var fDam = KanColle_KCAPI_Battle.getKoukuStage3FDam(ks3);
      var eDam = KanColle_KCAPI_Battle.getKoukuStage3EDam(ks3);
      return {
          left: Data_Maybe.fromMaybe(Data_Monoid.mempty(monoidDamageVector))(Data_Functor.map(Data_Maybe.functorMaybe)(function ($36) {
              return mkDV(convertFEDam($36));
          })(fDam)),
          right: Data_Maybe.fromMaybe(Data_Monoid.mempty(monoidDamageVector))(Data_Functor.map(Data_Maybe.functorMaybe)(function ($37) {
              return mkDV(convertFEDam($37));
          })(eDam))
      };
  };
  var fromFDamAndEDamAC = function (v) {
      var longFDam = convertFEDam(v.api_fdam);
      var longEDam = convertFEDam(v.api_edam);
      var enemyDams = KanColle_Util.fleetSplit(false)(longEDam);
      var allyDams = KanColle_Util.fleetSplit(false)(longFDam);
      return KanColle_Util.lrMap(KanColle_Util.lrMap(mkDV))({
          left: allyDams,
          right: enemyDams
      });
  };
  var calcSupportHouraiDamageAC = function (info) {
      var converted = KanColle_Util.fleetSplit(false)(convertFEDam(info.api_damage));
      return {
          left: KanColle_Util.memptyLR(monoidDamageVector),
          right: KanColle_Util.lrMap(mkDV)(converted)
      };
  };
  var calcSupportHouraiDamage = function (info) {
      return DV(convertFEDam(info.api_damage));
  };
  var calcSupportAirAttackDamage = function (info) {
      return DV(convertFEDam(info.api_stage3.api_edam));
  };
  var calcRaigekiDamageAC = fromFDamAndEDamAC;
  var calcRaigekiDamage = fromFDamAndEDam;
  var calcLandBasedKoukuDamage = function (lbkk) {
      var $18 = KanColle_KCAPI_Battle.getKoukuStage3(lbkk);
      if ($18 instanceof Data_Maybe.Just) {
          return convertFEDam($18.value0.api_edam);
      };
      if ($18 instanceof Data_Maybe.Nothing) {
          return Data_Monoid.mempty(monoidDamageVector);
      };
      throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 170, column 33 - line 172, column 22: " + [ $18.constructor.name ]);
  };
  var calcKoukuDamageCombined = function (kk) {
      return convertFEDam(kk.api_stage3_combined.api_fdam);
  };
  var calcKoukuDamageACEMain = function (kk) {
      return fromFDamAndEDam(kk.api_stage3);
  };
  var calcKoukuDamageACEEscort = function (kk) {
      return fromFDamAndEDam(kk.api_stage3_combined);
  };
  var calcKoukuDamageAC = function (kk) {
      var resultCMain = calcKoukuDamageACEMain(kk);
      var resultCEscort = calcKoukuDamageACEEscort(kk);
      return {
          left: {
              left: resultCMain.left,
              right: resultCEscort.left
          },
          right: {
              left: resultCMain.right,
              right: resultCEscort.right
          }
      };
  };
  var calcSupportAirAttackDamageAC = function (info) {
      var converted = KanColle_Util.fleetSplit(false)(convertFEDam(info.api_stage3.api_edam));
      return {
          left: KanColle_Util.memptyLR(monoidDamageVector),
          right: KanColle_Util.lrMap(mkDV)(converted)
      };
  };
  var calcKoukuDamage = function (kk) {
      return fromFDamAndEDam(kk.api_stage3);
  };
  var calcHougekiDamageAC = function (h) {
      var eventTargetsRaw = (function () {
          var toOne = function (xs) {
              var $20 = Data_Array.uncons(xs);
              if ($20 instanceof Data_Maybe.Just) {
                  var $21 = Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                      return v === $20.value0.head;
                  })($20.value0.tail) || Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                      return v === -1;
                  })($20.value0.tail);
                  if ($21) {
                      return $20.value0.head - 1;
                  };
                  if (!$21) {
                      return KanColle_Util.throwWith("invalid: elements are different in api_df_list");
                  };
                  throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 272, column 13 - line 275, column 11: " + [ $21.constructor.name ]);
              };
              if ($20 instanceof Data_Maybe.Nothing) {
                  return KanColle_Util.throwWith("invalid: empty api_df_list element");
              };
              throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 270, column 20 - line 277, column 5: " + [ $20.constructor.name ]);
          };
          return Data_Functor.map(Data_Functor.functorArray)(toOne)(KanColle_KCAPI_Battle_Internal.fromKArray(h.api_df_list));
      })();
      var eventDamages = (function () {
          var convert = function (xs) {
              var totalDmg = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(normalizeDamage)(xs));
              return KanColle_DamageAnalysis_Damage.mkDamage(totalDmg);
          };
          return Data_Functor.map(Data_Functor.functorArray)(convert)(KanColle_KCAPI_Battle_Internal.fromKArray(h.api_damage));
      })();
      var dfList = KanColle_KCAPI_Battle_Internal.fromKArray(h.api_df_list);
      var damageList = KanColle_KCAPI_Battle_Internal.fromKArray(h.api_damage);
      var atEFlag = KanColle_KCAPI_Battle_Internal.fromKArray(h.api_at_eflag);
      var eventTargets = (function () {
          var updateTarget = function (rawTarget) {
              return function (eFlag) {
                  if (eFlag === 0) {
                      return rawTarget + 12 | 0;
                  };
                  if (eFlag === 1) {
                      return rawTarget;
                  };
                  return KanColle_Util.throwWith("invalid api_at_eflag element");
              };
          };
          return Data_Array.zipWith(updateTarget)(eventTargetsRaw)(atEFlag);
      })();
      var lengthCheck = Data_Array.length(dfList) === Data_Array.length(atEFlag) && Data_Array.length(dfList) === Data_Array.length(damageList);
      if (lengthCheck) {
          var resultArr = simulateHougeki(Data_Traversable.traversableArray)(24)(Data_Array.zipWith(Data_Tuple.Tuple.create)(eventTargets)(eventDamages));
          return {
              left: {
                  left: Data_Array.slice(0)(6)(resultArr),
                  right: Data_Array.slice(6)(12)(resultArr)
              },
              right: {
                  left: Data_Array.slice(12)(18)(resultArr),
                  right: Data_Array.slice(18)(24)(resultArr)
              }
          };
      };
      if (!lengthCheck) {
          return KanColle_Util.throwWith("invalid: api_df_list / api_damage / api_at_eflag length mismatch");
      };
      throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 241, column 5 - line 251, column 3: " + [ lengthCheck.constructor.name ]);
  };
  var calcHougekiDamage = function (h) {
      var eventTargets = (function () {
          var toOne = function (xs) {
              var $27 = Data_Array.uncons(xs);
              if ($27 instanceof Data_Maybe.Just) {
                  var $28 = Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                      return v === $27.value0.head;
                  })($27.value0.tail) || Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                      return v === -1;
                  })($27.value0.tail);
                  if ($28) {
                      return $27.value0.head - 1;
                  };
                  if (!$28) {
                      return KanColle_Util.throwWith("invalid: elements are different in api_df_list");
                  };
                  throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 203, column 13 - line 206, column 11: " + [ $28.constructor.name ]);
              };
              if ($27 instanceof Data_Maybe.Nothing) {
                  return KanColle_Util.throwWith("invalid: empty api_df_list element");
              };
              throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 201, column 20 - line 208, column 5: " + [ $27.constructor.name ]);
          };
          return Data_Functor.map(Data_Functor.functorArray)(toOne)(KanColle_KCAPI_Battle_Internal.fromKArray(h.api_df_list));
      })();
      var eventDamages = (function () {
          var convert = function (xs) {
              var totalDmg = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(normalizeDamage)(xs));
              return KanColle_DamageAnalysis_Damage.mkDamage(totalDmg);
          };
          return Data_Functor.map(Data_Functor.functorArray)(convert)(KanColle_KCAPI_Battle_Internal.fromKArray(h.api_damage));
      })();
      var lengthCheck = Data_Array.length(eventTargets) === Data_Array.length(eventDamages);
      if (lengthCheck) {
          var resultArr = simulateHougeki(Data_Traversable.traversableArray)(12)(Data_Array.zipWith(Data_Tuple.Tuple.create)(eventTargets)(eventDamages));
          return KanColle_Util.lrMap(DV)(KanColle_Util.fleetSplit(false)(resultArr));
      };
      if (!lengthCheck) {
          return KanColle_Util.throwWith("invalid: api_df_list and api_damage length mismatch");
      };
      throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageVector line 184, column 5 - line 188, column 3: " + [ lengthCheck.constructor.name ]);
  };
  var applyDamageVector = function (dv) {
      return function (fleet) {
          var combine = function (dmg) {
              return function (ms) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Damage.applyDamage(dmg))(ms);
              };
          };
          return Data_Array.zipWith(combine)(getDV(dv))(fleet);
      };
  };
  var applyNormalDamageVector = function (ndv) {
      return function (fleet) {
          return KanColle_DamageAnalysis_Types.appNormalBattle(KanColle_DamageAnalysis_Types.appNormalBattle(KanColle_DamageAnalysis_Types.dupAsNormalBattle(applyDamageVector))(ndv))(fleet);
      };
  };
  var applyCombinedDamageVector = function (ndv) {
      return function (fleet) {
          return KanColle_DamageAnalysis_Types.appCombinedBattle(KanColle_DamageAnalysis_Types.appCombinedBattle(KanColle_DamageAnalysis_Types.dupAsCombinedBattle(applyDamageVector))(ndv))(fleet);
      };
  };
  exports["FRMain"] = FRMain;
  exports["FREscort"] = FREscort;
  exports["FRSupport"] = FRSupport;
  exports["FRLandBased"] = FRLandBased;
  exports["applyCombinedDamageVector"] = applyCombinedDamageVector;
  exports["applyDamageVector"] = applyDamageVector;
  exports["applyNormalDamageVector"] = applyNormalDamageVector;
  exports["calcHougekiDamage"] = calcHougekiDamage;
  exports["calcHougekiDamageAC"] = calcHougekiDamageAC;
  exports["calcKoukuDamage"] = calcKoukuDamage;
  exports["calcKoukuDamageAC"] = calcKoukuDamageAC;
  exports["calcKoukuDamageCombined"] = calcKoukuDamageCombined;
  exports["calcLandBasedKoukuDamage"] = calcLandBasedKoukuDamage;
  exports["calcRaigekiDamage"] = calcRaigekiDamage;
  exports["calcRaigekiDamageAC"] = calcRaigekiDamageAC;
  exports["calcSupportAirAttackDamage"] = calcSupportAirAttackDamage;
  exports["calcSupportAirAttackDamageAC"] = calcSupportAirAttackDamageAC;
  exports["calcSupportHouraiDamage"] = calcSupportHouraiDamage;
  exports["calcSupportHouraiDamageAC"] = calcSupportHouraiDamageAC;
  exports["getDV"] = getDV;
  exports["mkDV"] = mkDV;
  exports["toCombined"] = toCombined;
  exports["toCombinedAC"] = toCombinedAC;
  exports["toCombinedBC"] = toCombinedBC;
  exports["toGCombined"] = toGCombined;
  exports["semigroupDamageVector"] = semigroupDamageVector;
  exports["monoidDamageVector"] = monoidDamageVector;
})(PS["KanColle.DamageAnalysis.DamageVector"] = PS["KanColle.DamageAnalysis.DamageVector"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageVector = PS["KanColle.DamageAnalysis.DamageVector"];
  var KanColle_DamageAnalysis_Types = PS["KanColle.DamageAnalysis.Types"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var mt = {
      left: KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector),
      right: KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)
  };
  var memptyCombinedAC = function (dictMonoid) {
      return {
          main: Data_Monoid.mempty(dictMonoid),
          enemyMain: Data_Monoid.mempty(dictMonoid),
          enemyEscort: Data_Monoid.mempty(dictMonoid)
      };
  };
  var memptyCombined = function (dictMonoid) {
      return {
          main: Data_Monoid.mempty(dictMonoid),
          escort: Data_Monoid.mempty(dictMonoid),
          enemy: Data_Monoid.mempty(dictMonoid)
      };
  };
  var fconcat2AC = function (xs) {
      return function (b) {
          var auxAppend = function (l) {
              return function (r) {
                  return {
                      left: KanColle_Util.lrAppend(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(l.left)(r.left),
                      right: KanColle_Util.lrAppend(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(l.right)(r.right)
                  };
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(auxAppend)(mt)(Data_Functor.map(Data_Functor.functorArray)(function (f) {
              return f(b);
          })(xs));
      };
  };
  var fconcat = function (xs) {
      return function (b) {
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(KanColle_Util.lrAppend(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(Data_Functor.map(Data_Functor.functorArray)(function (f) {
              return f(b);
          })(xs));
      };
  };
  var connectDV = function (getData) {
      return function (z) {
          return function (calc) {
              return function (b) {
                  return Data_Maybe.maybe(z)(calc)(getData(b));
              };
          };
      };
  };
  var injKoukuDV = connectDV(KanColle_KCAPI_Battle.getInjectionKouku)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcKoukuDamage);
  var injKoukuDVAC = connectDV(KanColle_KCAPI_Battle.getInjectionKouku)(mt)(KanColle_DamageAnalysis_DamageVector.calcKoukuDamageAC);
  var injLandBasedDV = connectDV(KanColle_KCAPI_Battle.getAirBaseInjection)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcKoukuDamage);
  var injLandBasedDVAC = connectDV(KanColle_KCAPI_Battle.getAirBaseInjection)(mt)(KanColle_DamageAnalysis_DamageVector.calcKoukuDamageAC);
  var kouku2CombinedDV = connectDV(KanColle_KCAPI_Battle.getKouku2)(Data_Monoid.mempty(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcKoukuDamageCombined);
  var kouku2DV = connectDV(KanColle_KCAPI_Battle.getKouku2)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcKoukuDamage);
  var kouku2DVAC = connectDV(KanColle_KCAPI_Battle.getKouku2)(mt)(KanColle_DamageAnalysis_DamageVector.calcKoukuDamageAC);
  var kouku2DVBC = kouku2DVAC;
  var koukuCombinedDV = connectDV(KanColle_KCAPI_Battle.getKouku)(Data_Monoid.mempty(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcKoukuDamageCombined);
  var koukuDV = connectDV(KanColle_KCAPI_Battle.getKouku)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcKoukuDamage);
  var koukuDVAC = connectDV(KanColle_KCAPI_Battle.getKouku)(mt)(KanColle_DamageAnalysis_DamageVector.calcKoukuDamageAC);
  var koukuDVBC = koukuDVAC;
  var landBasedAirStrikeDVs = function ($4) {
      return Data_Foldable.foldl(Data_Foldable.foldableArray)(KanColle_Util.lrAppend(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(connectDV(KanColle_KCAPI_Battle.getLandBasedAirStrikes)([  ])(Data_Functor.map(Data_Functor.functorArray)(function ($5) {
          return KanColle_Util.lrOnlyRight(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_DamageVector.calcLandBasedKoukuDamage($5));
      }))($4));
  };
  var landBasedAirStrikeDVsAC = (function () {
      var auxAppend = function (l) {
          return function (r) {
              return {
                  left: KanColle_Util.lrAppend(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(l.left)(r.left),
                  right: KanColle_Util.lrAppend(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(l.right)(r.right)
              };
          };
      };
      return function ($6) {
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(auxAppend)(mt)(connectDV(KanColle_KCAPI_Battle.getLandBasedAirStrikes)([  ])(Data_Functor.map(Data_Functor.functorArray)(KanColle_DamageAnalysis_DamageVector.calcKoukuDamageAC))($6));
      };
  })();
  var landBasedAirStrikeDVsBC = landBasedAirStrikeDVsAC;
  var openingDV = connectDV(KanColle_KCAPI_Battle.getOpeningAttack)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcRaigekiDamage);
  var openingDVAC = connectDV(KanColle_KCAPI_Battle.getOpeningAttack)(mt)(KanColle_DamageAnalysis_DamageVector.calcRaigekiDamageAC);
  var openingTaisenDV = connectDV(KanColle_KCAPI_Battle.getOpeningTaisen)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var openingTaisenDVAC = connectDV(KanColle_KCAPI_Battle.getOpeningTaisen)(mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var supportAirAttackDV = connectDV(KanColle_KCAPI_Battle.getSupportAirInfo)(Data_Monoid.mempty(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcSupportAirAttackDamage);
  var supportAirAttackDVAC = connectDV(KanColle_KCAPI_Battle.getSupportAirInfo)(mt)(KanColle_DamageAnalysis_DamageVector.calcSupportAirAttackDamageAC);
  var supportHouraiDV = connectDV(KanColle_KCAPI_Battle.getSupportHouraiInfo)(Data_Monoid.mempty(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcSupportHouraiDamage);
  var supportHouraiDVAC = connectDV(KanColle_KCAPI_Battle.getSupportHouraiInfo)(mt)(KanColle_DamageAnalysis_DamageVector.calcSupportHouraiDamageAC);
  var combinedAppendAC = function (dictMonoid) {
      return function (a) {
          return function (b) {
              return {
                  main: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(a.main)(b.main),
                  enemyMain: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(a.enemyMain)(b.enemyMain),
                  enemyEscort: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(a.enemyEscort)(b.enemyEscort)
              };
          };
      };
  };
  var combinedAppend = function (dictMonoid) {
      return function (a) {
          return function (b) {
              return {
                  main: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(a.main)(b.main),
                  escort: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(a.escort)(b.escort),
                  enemy: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(a.enemy)(b.enemy)
              };
          };
      };
  };
  var fconcat2 = function (xs) {
      return function (b) {
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(combinedAppend(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(memptyCombined(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(Data_Functor.map(Data_Functor.functorArray)(function (f) {
              return f(b);
          })(xs));
      };
  };
  exports["combinedAppend"] = combinedAppend;
  exports["combinedAppendAC"] = combinedAppendAC;
  exports["connectDV"] = connectDV;
  exports["fconcat"] = fconcat;
  exports["fconcat2"] = fconcat2;
  exports["fconcat2AC"] = fconcat2AC;
  exports["injKoukuDV"] = injKoukuDV;
  exports["injKoukuDVAC"] = injKoukuDVAC;
  exports["injLandBasedDV"] = injLandBasedDV;
  exports["injLandBasedDVAC"] = injLandBasedDVAC;
  exports["kouku2CombinedDV"] = kouku2CombinedDV;
  exports["kouku2DV"] = kouku2DV;
  exports["kouku2DVAC"] = kouku2DVAC;
  exports["kouku2DVBC"] = kouku2DVBC;
  exports["koukuCombinedDV"] = koukuCombinedDV;
  exports["koukuDV"] = koukuDV;
  exports["koukuDVAC"] = koukuDVAC;
  exports["koukuDVBC"] = koukuDVBC;
  exports["landBasedAirStrikeDVs"] = landBasedAirStrikeDVs;
  exports["landBasedAirStrikeDVsAC"] = landBasedAirStrikeDVsAC;
  exports["landBasedAirStrikeDVsBC"] = landBasedAirStrikeDVsBC;
  exports["memptyCombined"] = memptyCombined;
  exports["memptyCombinedAC"] = memptyCombinedAC;
  exports["mt"] = mt;
  exports["openingDV"] = openingDV;
  exports["openingDVAC"] = openingDVAC;
  exports["openingTaisenDV"] = openingTaisenDV;
  exports["openingTaisenDVAC"] = openingTaisenDVAC;
  exports["supportAirAttackDV"] = supportAirAttackDV;
  exports["supportAirAttackDVAC"] = supportAirAttackDVAC;
  exports["supportHouraiDV"] = supportHouraiDV;
  exports["supportHouraiDVAC"] = supportHouraiDVAC;
})(PS["KanColle.DamageAnalysis.Stages.Internal"] = PS["KanColle.DamageAnalysis.Stages.Internal"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageVector = PS["KanColle.DamageAnalysis.DamageVector"];
  var KanColle_DamageAnalysis_Types = PS["KanColle.DamageAnalysis.Types"];
  var KanColle_DamageAnalysis_Stages_Internal = PS["KanColle.DamageAnalysis.Stages.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var raigekiDV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle.getRaigeki)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcRaigekiDamage);
  var hougekiDV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle.getHougeki)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var nightBattleDV = function ($0) {
      return KanColle_DamageAnalysis_Types.lrToNormal(hougekiDV($0));
  };
  var hougeki3DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle.getHougeki3)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var hougeki2DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle.getHougeki2)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var hougeki1DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle.getHougeki1)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var battleDV = function ($1) {
      return KanColle_DamageAnalysis_Types.lrToNormal(KanColle_DamageAnalysis_Stages_Internal.fconcat([ KanColle_DamageAnalysis_Stages_Internal.injLandBasedDV, KanColle_DamageAnalysis_Stages_Internal.injKoukuDV, KanColle_DamageAnalysis_Stages_Internal.landBasedAirStrikeDVs, KanColle_DamageAnalysis_Stages_Internal.koukuDV, KanColle_DamageAnalysis_Stages_Internal.kouku2DV, function ($2) {
          return KanColle_Util.lrOnlyRight(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.supportAirAttackDV($2));
      }, function ($3) {
          return KanColle_Util.lrOnlyRight(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.supportHouraiDV($3));
      }, KanColle_DamageAnalysis_Stages_Internal.openingTaisenDV, KanColle_DamageAnalysis_Stages_Internal.openingDV, hougeki1DV, hougeki2DV, hougeki3DV, raigekiDV ])($1));
  };
  exports["battleDV"] = battleDV;
  exports["nightBattleDV"] = nightBattleDV;
})(PS["KanColle.DamageAnalysis.Stages"] = PS["KanColle.DamageAnalysis.Stages"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_KCAPI_Battle_Internal = PS["KanColle.KCAPI.Battle.Internal"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var getRaigeki = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(1)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_raigeki);
      });
  };
  var getHougeki3 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(3)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki3);
      });
  };
  var getHougeki2 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(2)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki2);
      });
  };
  var getHougeki1 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(0)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki1);
      });
  };
  exports["getHougeki1"] = getHougeki1;
  exports["getHougeki2"] = getHougeki2;
  exports["getHougeki3"] = getHougeki3;
  exports["getRaigeki"] = getRaigeki;
})(PS["KanColle.KCAPI.Battle.CTF"] = PS["KanColle.KCAPI.Battle.CTF"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var KanColle_KCAPI_Battle_CTF = PS["KanColle.KCAPI.Battle.CTF"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageVector = PS["KanColle.DamageAnalysis.DamageVector"];
  var KanColle_DamageAnalysis_Stages_Internal = PS["KanColle.DamageAnalysis.Stages.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var raigekiDV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_CTF.getRaigeki)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcRaigekiDamage);
  var hougeki3DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_CTF.getHougeki3)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var hougeki2DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_CTF.getHougeki2)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var hougeki1DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_CTF.getHougeki1)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var battleDV = KanColle_DamageAnalysis_Stages_Internal.fconcat2([ function ($0) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRLandBased.value)(KanColle_DamageAnalysis_Stages_Internal.injLandBasedDV($0));
  }, function ($1) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(KanColle_DamageAnalysis_Stages_Internal.injKoukuDV($1));
  }, function ($2) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRLandBased.value)(KanColle_DamageAnalysis_Stages_Internal.landBasedAirStrikeDVs($2));
  }, function ($3) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(KanColle_DamageAnalysis_Stages_Internal.koukuDV($3));
  }, function ($4) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(KanColle_Util.lrOnlyLeft(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.koukuCombinedDV($4)));
  }, function ($5) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRSupport.value)(KanColle_Util.lrOnlyRight(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.supportAirAttackDV($5)));
  }, function ($6) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRSupport.value)(KanColle_Util.lrOnlyRight(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.supportHouraiDV($6)));
  }, function ($7) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(KanColle_DamageAnalysis_Stages_Internal.kouku2DV($7));
  }, function ($8) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(KanColle_Util.lrOnlyLeft(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.kouku2CombinedDV($8)));
  }, function ($9) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(KanColle_DamageAnalysis_Stages_Internal.openingTaisenDV($9));
  }, function ($10) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(KanColle_DamageAnalysis_Stages_Internal.openingDV($10));
  }, function ($11) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(hougeki1DV($11));
  }, function ($12) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(raigekiDV($12));
  }, function ($13) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(hougeki2DV($13));
  }, function ($14) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(hougeki3DV($14));
  } ]);
  exports["battleDV"] = battleDV;
  exports["hougeki1DV"] = hougeki1DV;
  exports["hougeki2DV"] = hougeki2DV;
  exports["hougeki3DV"] = hougeki3DV;
  exports["raigekiDV"] = raigekiDV;
})(PS["KanColle.DamageAnalysis.Stages.CTF"] = PS["KanColle.DamageAnalysis.Stages.CTF"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_KCAPI_Battle_Internal = PS["KanColle.KCAPI.Battle.Internal"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var getRaigeki = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(3)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_raigeki);
      });
  };
  var getHougeki3 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(2)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki3);
      });
  };
  var getHougeki2 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(1)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki2);
      });
  };
  var getHougeki1 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(0)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki1);
      });
  };
  exports["getHougeki1"] = getHougeki1;
  exports["getHougeki2"] = getHougeki2;
  exports["getHougeki3"] = getHougeki3;
  exports["getRaigeki"] = getRaigeki;
})(PS["KanColle.KCAPI.Battle.STF"] = PS["KanColle.KCAPI.Battle.STF"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var KanColle_KCAPI_Battle_STF = PS["KanColle.KCAPI.Battle.STF"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageVector = PS["KanColle.DamageAnalysis.DamageVector"];
  var KanColle_DamageAnalysis_Stages_Internal = PS["KanColle.DamageAnalysis.Stages.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var raigekiDV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_STF.getRaigeki)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcRaigekiDamage);
  var hougeki3DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_STF.getHougeki3)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var hougeki2DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_STF.getHougeki2)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var hougeki1DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_STF.getHougeki1)(KanColle_Util.memptyLR(KanColle_DamageAnalysis_DamageVector.monoidDamageVector))(KanColle_DamageAnalysis_DamageVector.calcHougekiDamage);
  var battleDV = KanColle_DamageAnalysis_Stages_Internal.fconcat2([ function ($0) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRLandBased.value)(KanColle_DamageAnalysis_Stages_Internal.injLandBasedDV($0));
  }, function ($1) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(KanColle_DamageAnalysis_Stages_Internal.injKoukuDV($1));
  }, function ($2) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRLandBased.value)(KanColle_DamageAnalysis_Stages_Internal.landBasedAirStrikeDVs($2));
  }, function ($3) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(KanColle_DamageAnalysis_Stages_Internal.koukuDV($3));
  }, function ($4) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(KanColle_Util.lrOnlyLeft(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.koukuCombinedDV($4)));
  }, function ($5) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRSupport.value)(KanColle_Util.lrOnlyRight(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.supportAirAttackDV($5)));
  }, function ($6) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRSupport.value)(KanColle_Util.lrOnlyRight(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.supportHouraiDV($6)));
  }, function ($7) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(KanColle_DamageAnalysis_Stages_Internal.kouku2DV($7));
  }, function ($8) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(KanColle_Util.lrOnlyLeft(KanColle_DamageAnalysis_DamageVector.monoidDamageVector)(KanColle_DamageAnalysis_Stages_Internal.kouku2CombinedDV($8)));
  }, function ($9) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(KanColle_DamageAnalysis_Stages_Internal.openingTaisenDV($9));
  }, function ($10) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(KanColle_DamageAnalysis_Stages_Internal.openingDV($10));
  }, function ($11) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(hougeki1DV($11));
  }, function ($12) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FRMain.value)(hougeki2DV($12));
  }, function ($13) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(hougeki3DV($13));
  }, function ($14) {
      return KanColle_DamageAnalysis_DamageVector.toCombined(KanColle_DamageAnalysis_DamageVector.FREscort.value)(raigekiDV($14));
  } ]);
  exports["battleDV"] = battleDV;
  exports["hougeki1DV"] = hougeki1DV;
  exports["hougeki2DV"] = hougeki2DV;
  exports["hougeki3DV"] = hougeki3DV;
  exports["raigekiDV"] = raigekiDV;
})(PS["KanColle.DamageAnalysis.Stages.STF"] = PS["KanColle.DamageAnalysis.Stages.STF"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_KCAPI_Battle_Internal = PS["KanColle.KCAPI.Battle.Internal"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var getRaigeki = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(2)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_raigeki);
      });
  };
  var getHougeki3 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(3)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki3);
      });
  };
  var getHougeki2 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(1)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki2);
      });
  };
  var getHougeki1 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(0)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki1);
      });
  };
  exports["getHougeki1"] = getHougeki1;
  exports["getHougeki2"] = getHougeki2;
  exports["getHougeki3"] = getHougeki3;
  exports["getRaigeki"] = getRaigeki;
})(PS["KanColle.KCAPI.Battle.BothCombinedCTF"] = PS["KanColle.KCAPI.Battle.BothCombinedCTF"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var Prelude = PS["Prelude"];
  var KanColle_KCAPI_Battle_BothCombinedCTF = PS["KanColle.KCAPI.Battle.BothCombinedCTF"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageVector = PS["KanColle.DamageAnalysis.DamageVector"];
  var KanColle_DamageAnalysis_Stages_Internal = PS["KanColle.DamageAnalysis.Stages.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var raigekiDV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_BothCombinedCTF.getRaigeki)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcRaigekiDamageAC);
  var hougeki3DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_BothCombinedCTF.getHougeki3)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var hougeki2DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_BothCombinedCTF.getHougeki2)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var hougeki1DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_BothCombinedCTF.getHougeki1)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var battleDV = function ($0) {
      return KanColle_DamageAnalysis_DamageVector.toCombinedBC(KanColle_DamageAnalysis_Stages_Internal.fconcat2AC([ KanColle_DamageAnalysis_Stages_Internal.injLandBasedDVAC, KanColle_DamageAnalysis_Stages_Internal.injKoukuDVAC, KanColle_DamageAnalysis_Stages_Internal.landBasedAirStrikeDVsBC, KanColle_DamageAnalysis_Stages_Internal.koukuDVBC, KanColle_DamageAnalysis_Stages_Internal.supportAirAttackDVAC, KanColle_DamageAnalysis_Stages_Internal.supportHouraiDVAC, KanColle_DamageAnalysis_Stages_Internal.kouku2DVBC, KanColle_DamageAnalysis_Stages_Internal.openingTaisenDVAC, KanColle_DamageAnalysis_Stages_Internal.openingDVAC, hougeki1DV, hougeki2DV, raigekiDV, hougeki3DV ])($0));
  };
  exports["battleDV"] = battleDV;
  exports["hougeki1DV"] = hougeki1DV;
  exports["hougeki2DV"] = hougeki2DV;
  exports["hougeki3DV"] = hougeki3DV;
  exports["raigekiDV"] = raigekiDV;
})(PS["KanColle.DamageAnalysis.Stages.BothCombinedCTF"] = PS["KanColle.DamageAnalysis.Stages.BothCombinedCTF"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_KCAPI_Battle_Internal = PS["KanColle.KCAPI.Battle.Internal"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var getRaigeki = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(3)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_raigeki);
      });
  };
  var getHougeki3 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(2)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki3);
      });
  };
  var getHougeki2 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(1)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki2);
      });
  };
  var getHougeki1 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(0)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki1);
      });
  };
  exports["getHougeki1"] = getHougeki1;
  exports["getHougeki2"] = getHougeki2;
  exports["getHougeki3"] = getHougeki3;
  exports["getRaigeki"] = getRaigeki;
})(PS["KanColle.KCAPI.Battle.BothCombinedSTF"] = PS["KanColle.KCAPI.Battle.BothCombinedSTF"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var Prelude = PS["Prelude"];
  var KanColle_KCAPI_Battle_BothCombinedSTF = PS["KanColle.KCAPI.Battle.BothCombinedSTF"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageVector = PS["KanColle.DamageAnalysis.DamageVector"];
  var KanColle_DamageAnalysis_Stages_Internal = PS["KanColle.DamageAnalysis.Stages.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var raigekiDV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_BothCombinedSTF.getRaigeki)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcRaigekiDamageAC);
  var hougeki3DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_BothCombinedSTF.getHougeki3)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var hougeki2DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_BothCombinedSTF.getHougeki2)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var hougeki1DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_BothCombinedSTF.getHougeki1)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var battleDV = function ($0) {
      return KanColle_DamageAnalysis_DamageVector.toCombinedBC(KanColle_DamageAnalysis_Stages_Internal.fconcat2AC([ KanColle_DamageAnalysis_Stages_Internal.injLandBasedDVAC, KanColle_DamageAnalysis_Stages_Internal.injKoukuDVAC, KanColle_DamageAnalysis_Stages_Internal.landBasedAirStrikeDVsBC, KanColle_DamageAnalysis_Stages_Internal.koukuDVBC, KanColle_DamageAnalysis_Stages_Internal.supportAirAttackDVAC, KanColle_DamageAnalysis_Stages_Internal.supportHouraiDVAC, KanColle_DamageAnalysis_Stages_Internal.kouku2DVBC, KanColle_DamageAnalysis_Stages_Internal.openingTaisenDVAC, KanColle_DamageAnalysis_Stages_Internal.openingDVAC, hougeki1DV, hougeki2DV, hougeki3DV, raigekiDV ])($0));
  };
  exports["battleDV"] = battleDV;
  exports["hougeki1DV"] = hougeki1DV;
  exports["hougeki2DV"] = hougeki2DV;
  exports["hougeki3DV"] = hougeki3DV;
  exports["raigekiDV"] = raigekiDV;
})(PS["KanColle.DamageAnalysis.Stages.BothCombinedSTF"] = PS["KanColle.DamageAnalysis.Stages.BothCombinedSTF"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_KCAPI_Battle_Internal = PS["KanColle.KCAPI.Battle.Internal"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var getRaigeki = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(1)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_raigeki);
      });
  };
  var getHougeki3 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(3)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki3);
      });
  };
  var getHougeki2 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(2)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki2);
      });
  };
  var getHougeki1 = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(KanColle_KCAPI_Battle_Internal.checkHouraiFlag(0)(v))(function () {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.api_hougeki1);
      });
  };
  exports["getHougeki1"] = getHougeki1;
  exports["getHougeki2"] = getHougeki2;
  exports["getHougeki3"] = getHougeki3;
  exports["getRaigeki"] = getRaigeki;
})(PS["KanColle.KCAPI.Battle.AbyssalCombined"] = PS["KanColle.KCAPI.Battle.AbyssalCombined"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var Prelude = PS["Prelude"];
  var KanColle_KCAPI_Battle_AbyssalCombined = PS["KanColle.KCAPI.Battle.AbyssalCombined"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageVector = PS["KanColle.DamageAnalysis.DamageVector"];
  var KanColle_DamageAnalysis_Stages_Internal = PS["KanColle.DamageAnalysis.Stages.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var raigekiDV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_AbyssalCombined.getRaigeki)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcRaigekiDamageAC);
  var hougeki3DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_AbyssalCombined.getHougeki3)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var hougeki2DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_AbyssalCombined.getHougeki2)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var hougeki1DV = KanColle_DamageAnalysis_Stages_Internal.connectDV(KanColle_KCAPI_Battle_AbyssalCombined.getHougeki1)(KanColle_DamageAnalysis_Stages_Internal.mt)(KanColle_DamageAnalysis_DamageVector.calcHougekiDamageAC);
  var battleDV = function ($0) {
      return KanColle_DamageAnalysis_DamageVector.toCombinedAC(KanColle_DamageAnalysis_Stages_Internal.fconcat2AC([ KanColle_DamageAnalysis_Stages_Internal.injLandBasedDVAC, KanColle_DamageAnalysis_Stages_Internal.injKoukuDVAC, KanColle_DamageAnalysis_Stages_Internal.landBasedAirStrikeDVsAC, KanColle_DamageAnalysis_Stages_Internal.koukuDVAC, KanColle_DamageAnalysis_Stages_Internal.supportAirAttackDVAC, KanColle_DamageAnalysis_Stages_Internal.supportHouraiDVAC, KanColle_DamageAnalysis_Stages_Internal.kouku2DVAC, KanColle_DamageAnalysis_Stages_Internal.openingTaisenDVAC, KanColle_DamageAnalysis_Stages_Internal.openingDVAC, hougeki1DV, raigekiDV, hougeki2DV, hougeki3DV ])($0));
  };
  exports["battleDV"] = battleDV;
  exports["hougeki1DV"] = hougeki1DV;
  exports["hougeki2DV"] = hougeki2DV;
  exports["hougeki3DV"] = hougeki3DV;
  exports["raigekiDV"] = raigekiDV;
})(PS["KanColle.DamageAnalysis.Stages.AbyssalCombined"] = PS["KanColle.DamageAnalysis.Stages.AbyssalCombined"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageVector = PS["KanColle.DamageAnalysis.DamageVector"];
  var KanColle_DamageAnalysis_Stages = PS["KanColle.DamageAnalysis.Stages"];
  var KanColle_DamageAnalysis_Stages_CTF = PS["KanColle.DamageAnalysis.Stages.CTF"];
  var KanColle_DamageAnalysis_Stages_STF = PS["KanColle.DamageAnalysis.Stages.STF"];
  var KanColle_DamageAnalysis_Stages_BothCombinedCTF = PS["KanColle.DamageAnalysis.Stages.BothCombinedCTF"];
  var KanColle_DamageAnalysis_Stages_BothCombinedSTF = PS["KanColle.DamageAnalysis.Stages.BothCombinedSTF"];
  var KanColle_DamageAnalysis_Stages_AbyssalCombined = PS["KanColle.DamageAnalysis.Stages.AbyssalCombined"];
  var KanColle_DamageAnalysis_Types = PS["KanColle.DamageAnalysis.Types"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var normalSplit = KanColle_Util.fleetSplit(false);
  var ensureHpsLen = function (expectLen) {
      return function (xs) {
          var actualLen = Data_Array.length(xs);
          var $34 = Data_Ord.compare(Data_Ord.ordInt)(expectLen)(actualLen);
          if ($34 instanceof Data_Ordering.LT) {
              return KanColle_Util.throwWith("ensureHpsLen: array length is longer than expected");
          };
          if ($34 instanceof Data_Ordering.EQ) {
              return xs;
          };
          if ($34 instanceof Data_Ordering.GT) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Array.replicate(expectLen - actualLen)(Data_Maybe.Nothing.value));
          };
          throw new Error("Failed pattern match at KanColle.DamageAnalysis.DamageAnalysis line 45, column 29 - line 48, column 60: " + [ $34.constructor.name ]);
      };
  };
  var getInitFleet = function (ds) {
      return function (battle) {
          var nowHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getInitHps(battle)));
          var mkShip = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just({
                          hp: v.value0,
                          fullHp: v1.value0,
                          sunk: v.value0 <= 0,
                          dameCon: Data_Maybe.Nothing.value
                      });
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
          var maxHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getMaxHps(battle)));
          var enemyShips = Data_Array.zipWith(mkShip)(nowHps.right)(maxHps.right);
          var addDameCon = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just((function () {
                          var $41 = {};
                          for (var $42 in v.value0) {
                              if ({}.hasOwnProperty.call(v.value0, $42)) {
                                  $41[$42] = v.value0[$42];
                              };
                          };
                          $41.dameCon = v1;
                          return $41;
                      })());
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
          var allyShips = Data_Array.zipWith(addDameCon)(Data_Array.zipWith(mkShip)(nowHps.left)(maxHps.left))(ds);
          return {
              main: allyShips,
              enemy: enemyShips
          };
      };
  };
  var getInitFleetAC = function (ds) {
      return function (battle) {
          var nullEEscortNowHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getInitHpsCombined(battle)));
          var nullEEscortMaxHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getMaxHpsCombined(battle)));
          var mkShip = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just({
                          hp: v.value0,
                          fullHp: v1.value0,
                          sunk: v.value0 <= 0,
                          dameCon: Data_Maybe.Nothing.value
                      });
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
          var enemyEscortShips = Data_Array.zipWith(mkShip)(nullEEscortNowHps.right)(nullEEscortMaxHps.right);
          var allyEMainNowHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getInitHps(battle)));
          var allyEMainMaxHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getMaxHps(battle)));
          var enemyMainShips = Data_Array.zipWith(mkShip)(allyEMainNowHps.right)(allyEMainMaxHps.right);
          var addDameCon = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just((function () {
                          var $51 = {};
                          for (var $52 in v.value0) {
                              if ({}.hasOwnProperty.call(v.value0, $52)) {
                                  $51[$52] = v.value0[$52];
                              };
                          };
                          $51.dameCon = v1;
                          return $51;
                      })());
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
          var allyShips = Data_Array.zipWith(addDameCon)(Data_Array.zipWith(mkShip)(allyEMainNowHps.left)(allyEMainMaxHps.left))(ds);
          return {
              main: allyShips,
              enemyMain: enemyMainShips,
              enemyEscort: enemyEscortShips
          };
      };
  };
  var getInitFleetBC = function (ds) {
      return function (battle) {
          var mkShip = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just({
                          hp: v.value0,
                          fullHp: v1.value0,
                          sunk: v.value0 <= 0,
                          dameCon: Data_Maybe.Nothing.value
                      });
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
          var dsPair = normalSplit(ds);
          var allyEMainNowHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getInitHps(battle)));
          var allyEMainMaxHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getMaxHps(battle)));
          var allyEEscortNowHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getInitHpsCombined(battle)));
          var allyEEscortMaxHps = normalSplit(ensureHpsLen(12)(KanColle_KCAPI_Battle.getMaxHpsCombined(battle)));
          var addDameCon = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just((function () {
                          var $61 = {};
                          for (var $62 in v.value0) {
                              if ({}.hasOwnProperty.call(v.value0, $62)) {
                                  $61[$62] = v.value0[$62];
                              };
                          };
                          $61.dameCon = v1;
                          return $61;
                      })());
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
          return {
              allyMain: Data_Array.zipWith(addDameCon)(Data_Array.zipWith(mkShip)(allyEMainNowHps.left)(allyEMainMaxHps.left))(dsPair.left),
              allyEscort: Data_Array.zipWith(addDameCon)(Data_Array.zipWith(mkShip)(allyEEscortNowHps.left)(allyEEscortMaxHps.left))(dsPair.right),
              enemyMain: Data_Array.zipWith(mkShip)(allyEMainNowHps.right)(allyEMainMaxHps.right),
              enemyEscort: Data_Array.zipWith(mkShip)(allyEEscortNowHps.right)(allyEEscortMaxHps.right)
          };
      };
  };
  var getInitFleetCombined = function (ds) {
      return function (battle) {
          var mkShip = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just({
                          hp: v.value0,
                          fullHp: v1.value0,
                          sunk: v.value0 <= 0,
                          dameCon: Data_Maybe.Nothing.value
                      });
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
          var escortNowHps = ensureHpsLen(6)(KanColle_KCAPI_Battle.getInitHpsCombined(battle));
          var escortMaxHps = ensureHpsLen(6)(KanColle_KCAPI_Battle.getMaxHpsCombined(battle));
          var dsSplitted = normalSplit(ds);
          var initFleet = getInitFleet(dsSplitted.left)(battle);
          var addDameCon = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just((function () {
                          var $71 = {};
                          for (var $72 in v.value0) {
                              if ({}.hasOwnProperty.call(v.value0, $72)) {
                                  $71[$72] = v.value0[$72];
                              };
                          };
                          $71.dameCon = v1;
                          return $71;
                      })());
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
          var escortShips = Data_Array.zipWith(addDameCon)(Data_Array.zipWith(mkShip)(escortNowHps)(escortMaxHps))(dsSplitted.right);
          return {
              main: initFleet.main,
              escort: escortShips,
              enemy: initFleet.enemy
          };
      };
  };
  var analyzeCombinedNightBattle = function (ds) {
      return function (b) {
          var nightBattleInfo = getInitFleetCombined(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.replicate(6)(Data_Maybe.Nothing.value))(ds))(b);
          var initFleet = {
              main: nightBattleInfo.escort,
              enemy: nightBattleInfo.enemy
          };
          var getShipResult$prime = function (ms1) {
              return function (ms2) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Types.getShipResult)(ms1))(ms2);
              };
          };
          var finalFleet = KanColle_DamageAnalysis_DamageVector.applyNormalDamageVector(KanColle_DamageAnalysis_Stages.nightBattleDV(b))(initFleet);
          return KanColle_DamageAnalysis_Types.appNormalBattle(KanColle_DamageAnalysis_Types.appNormalBattle(KanColle_DamageAnalysis_Types.dupAsNormalBattle(Data_Array.zipWith(getShipResult$prime)))(initFleet))(finalFleet);
      };
  };
  var analyzeCombinedBattleBy = function (getDVFromBattle) {
      return function (ds) {
          return function (battle) {
              var initFleet = getInitFleetCombined(ds)(battle);
              var getShipResult$prime = function (ms1) {
                  return function (ms2) {
                      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Types.getShipResult)(ms1))(ms2);
                  };
              };
              var finalFleet = KanColle_DamageAnalysis_DamageVector.applyCombinedDamageVector(getDVFromBattle(battle))(initFleet);
              return KanColle_DamageAnalysis_Types.appCombinedBattle(KanColle_DamageAnalysis_Types.appCombinedBattle(KanColle_DamageAnalysis_Types.dupAsCombinedBattle(Data_Array.zipWith(getShipResult$prime)))(initFleet))(finalFleet);
          };
      };
  };
  var analyzeSTFBattle = analyzeCombinedBattleBy(KanColle_DamageAnalysis_Stages_STF.battleDV);
  var analyzeCTFBattle = analyzeCombinedBattleBy(KanColle_DamageAnalysis_Stages_CTF.battleDV);
  var analyzeTECFBattle = analyzeCTFBattle;
  var analyzeBothCombinedSTFBattle = function (ds) {
      return function (b) {
          var resultDV = KanColle_DamageAnalysis_Stages_BothCombinedSTF.battleDV(b);
          var initFleet = getInitFleetBC(ds)(b);
          var getShipResult$prime = function (ms1) {
              return function (ms2) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Types.getShipResult)(ms1))(ms2);
              };
          };
          var finalFleet = {
              allyMain: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.allyMain)(initFleet.allyMain),
              allyEscort: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.allyEscort)(initFleet.allyEscort),
              enemyMain: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.enemyMain)(initFleet.enemyMain),
              enemyEscort: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.enemyEscort)(initFleet.enemyEscort)
          };
          var z = function (prj) {
              return Data_Array.zipWith(getShipResult$prime)(prj(initFleet))(prj(finalFleet));
          };
          return {
              allyMain: z(function (v) {
                  return v.allyMain;
              }),
              allyEscort: z(function (v) {
                  return v.allyEscort;
              }),
              enemyMain: z(function (v) {
                  return v.enemyMain;
              }),
              enemyEscort: z(function (v) {
                  return v.enemyEscort;
              })
          };
      };
  };
  var analyzeBothCombinedNightBattle = function (ds) {
      return function (b) {
          var resultDV = KanColle_DamageAnalysis_Stages.nightBattleDV(b);
          var getShipResult$prime = function (ms1) {
              return function (ms2) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Types.getShipResult)(ms1))(ms2);
              };
          };
          var allInitFleet = getInitFleetBC(ds)(b);
          var enemySplitted = (function () {
              var $75 = KanColle_KCAPI_Battle.getEnemyActiveDeck(b);
              if ($75 === 1) {
                  return new Data_Tuple.Tuple(allInitFleet.enemyMain, allInitFleet.enemyEscort);
              };
              if ($75 === 2) {
                  return new Data_Tuple.Tuple(allInitFleet.enemyEscort, allInitFleet.enemyMain);
              };
              return KanColle_Util.throwWith("invalid api_active_deck value");
          })();
          var initFleet = {
              main: allInitFleet.allyEscort,
              enemy: Data_Tuple.fst(enemySplitted)
          };
          var finalFleet = KanColle_DamageAnalysis_DamageVector.applyNormalDamageVector(resultDV)(initFleet);
          var allFinalFleet = (function () {
              var $76 = KanColle_KCAPI_Battle.getEnemyActiveDeck(b);
              if ($76 === 1) {
                  return {
                      allyMain: allInitFleet.allyMain,
                      allyEscort: finalFleet.main,
                      enemyMain: finalFleet.enemy,
                      enemyEscort: Data_Tuple.snd(enemySplitted)
                  };
              };
              if ($76 === 2) {
                  return {
                      allyMain: allInitFleet.allyMain,
                      allyEscort: finalFleet.main,
                      enemyMain: Data_Tuple.snd(enemySplitted),
                      enemyEscort: finalFleet.enemy
                  };
              };
              return KanColle_Util.throwWith("invalid api_active_deck value");
          })();
          var z = function (prj) {
              return Data_Array.zipWith(getShipResult$prime)(prj(allInitFleet))(prj(allFinalFleet));
          };
          return {
              allyMain: z(function (v) {
                  return v.allyMain;
              }),
              allyEscort: z(function (v) {
                  return v.allyEscort;
              }),
              enemyMain: z(function (v) {
                  return v.enemyMain;
              }),
              enemyEscort: z(function (v) {
                  return v.enemyEscort;
              })
          };
      };
  };
  var analyzeBothCombinedCTFBattle = function (ds) {
      return function (b) {
          var resultDV = KanColle_DamageAnalysis_Stages_BothCombinedCTF.battleDV(b);
          var initFleet = getInitFleetBC(ds)(b);
          var getShipResult$prime = function (ms1) {
              return function (ms2) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Types.getShipResult)(ms1))(ms2);
              };
          };
          var finalFleet = {
              allyMain: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.allyMain)(initFleet.allyMain),
              allyEscort: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.allyEscort)(initFleet.allyEscort),
              enemyMain: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.enemyMain)(initFleet.enemyMain),
              enemyEscort: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.enemyEscort)(initFleet.enemyEscort)
          };
          var z = function (prj) {
              return Data_Array.zipWith(getShipResult$prime)(prj(initFleet))(prj(finalFleet));
          };
          return {
              allyMain: z(function (v) {
                  return v.allyMain;
              }),
              allyEscort: z(function (v) {
                  return v.allyEscort;
              }),
              enemyMain: z(function (v) {
                  return v.enemyMain;
              }),
              enemyEscort: z(function (v) {
                  return v.enemyEscort;
              })
          };
      };
  };
  var analyzeBattleBy = function (getDVFromBattle) {
      return function (ds) {
          return function (battle) {
              var initFleet = getInitFleet(ds)(battle);
              var getShipResult$prime = function (ms1) {
                  return function (ms2) {
                      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Types.getShipResult)(ms1))(ms2);
                  };
              };
              var finalFleet = KanColle_DamageAnalysis_DamageVector.applyNormalDamageVector(getDVFromBattle(battle))(initFleet);
              return KanColle_DamageAnalysis_Types.appNormalBattle(KanColle_DamageAnalysis_Types.appNormalBattle(KanColle_DamageAnalysis_Types.dupAsNormalBattle(Data_Array.zipWith(getShipResult$prime)))(initFleet))(finalFleet);
          };
      };
  };
  var analyzeNightBattle = analyzeBattleBy(KanColle_DamageAnalysis_Stages.nightBattleDV);
  var analyzeBattle = analyzeBattleBy(KanColle_DamageAnalysis_Stages.battleDV);
  var analyzeAbyssalCTFNightBattle = function (ds) {
      return function (b) {
          var resultDV = KanColle_DamageAnalysis_Stages.nightBattleDV(b);
          var getShipResult$prime = function (ms1) {
              return function (ms2) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Types.getShipResult)(ms1))(ms2);
              };
          };
          var allInitFleet = getInitFleetAC(ds)(b);
          var enemySplitted = (function () {
              var $77 = KanColle_KCAPI_Battle.getEnemyActiveDeck(b);
              if ($77 === 1) {
                  return new Data_Tuple.Tuple(allInitFleet.enemyMain, allInitFleet.enemyEscort);
              };
              if ($77 === 2) {
                  return new Data_Tuple.Tuple(allInitFleet.enemyEscort, allInitFleet.enemyMain);
              };
              return KanColle_Util.throwWith("invalid api_active_deck value");
          })();
          var initFleet = {
              main: allInitFleet.main,
              enemy: Data_Tuple.fst(enemySplitted)
          };
          var finalFleet = KanColle_DamageAnalysis_DamageVector.applyNormalDamageVector(resultDV)(initFleet);
          var allFinalFleet = (function () {
              var $78 = KanColle_KCAPI_Battle.getEnemyActiveDeck(b);
              if ($78 === 1) {
                  return {
                      main: finalFleet.main,
                      enemyMain: finalFleet.enemy,
                      enemyEscort: Data_Tuple.snd(enemySplitted)
                  };
              };
              if ($78 === 2) {
                  return {
                      main: finalFleet.main,
                      enemyMain: Data_Tuple.snd(enemySplitted),
                      enemyEscort: finalFleet.enemy
                  };
              };
              return KanColle_Util.throwWith("invalid api_active_deck value");
          })();
          var z = function (prj) {
              return Data_Array.zipWith(getShipResult$prime)(prj(allInitFleet))(prj(allFinalFleet));
          };
          return {
              main: z(function (v) {
                  return v.main;
              }),
              enemyMain: z(function (v) {
                  return v.enemyMain;
              }),
              enemyEscort: z(function (v) {
                  return v.enemyEscort;
              })
          };
      };
  };
  var analyzeAbyssalCTFBattle = function (ds) {
      return function (b) {
          var resultDV = KanColle_DamageAnalysis_Stages_AbyssalCombined.battleDV(b);
          var initFleet = getInitFleetAC(ds)(b);
          var getShipResult$prime = function (ms1) {
              return function (ms2) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(KanColle_DamageAnalysis_Types.getShipResult)(ms1))(ms2);
              };
          };
          var finalFleet = {
              main: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.main)(initFleet.main),
              enemyMain: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.enemyMain)(initFleet.enemyMain),
              enemyEscort: KanColle_DamageAnalysis_DamageVector.applyDamageVector(resultDV.enemyEscort)(initFleet.enemyEscort)
          };
          var z = function (prj) {
              return Data_Array.zipWith(getShipResult$prime)(prj(initFleet))(prj(finalFleet));
          };
          return {
              main: z(function (v) {
                  return v.main;
              }),
              enemyMain: z(function (v) {
                  return v.enemyMain;
              }),
              enemyEscort: z(function (v) {
                  return v.enemyEscort;
              })
          };
      };
  };
  exports["analyzeAbyssalCTFBattle"] = analyzeAbyssalCTFBattle;
  exports["analyzeAbyssalCTFNightBattle"] = analyzeAbyssalCTFNightBattle;
  exports["analyzeBattle"] = analyzeBattle;
  exports["analyzeBothCombinedCTFBattle"] = analyzeBothCombinedCTFBattle;
  exports["analyzeBothCombinedNightBattle"] = analyzeBothCombinedNightBattle;
  exports["analyzeBothCombinedSTFBattle"] = analyzeBothCombinedSTFBattle;
  exports["analyzeCTFBattle"] = analyzeCTFBattle;
  exports["analyzeCombinedNightBattle"] = analyzeCombinedNightBattle;
  exports["analyzeNightBattle"] = analyzeNightBattle;
  exports["analyzeSTFBattle"] = analyzeSTFBattle;
  exports["analyzeTECFBattle"] = analyzeTECFBattle;
})(PS["KanColle.DamageAnalysis.DamageAnalysis"] = PS["KanColle.DamageAnalysis.DamageAnalysis"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_DamageAnalysis_DamageAnalysis = PS["KanColle.DamageAnalysis.DamageAnalysis"];
  var KanColle_DamageAnalysis_Types = PS["KanColle.DamageAnalysis.Types"];
  var KanColle_KCAPI_Battle = PS["KanColle.KCAPI.Battle"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var readDameCon = (function () {
      var convert = function (v) {
          if (v === 0) {
              return Data_Maybe.Nothing.value;
          };
          if (v === 1) {
              return new Data_Maybe.Just(KanColle_DamageAnalysis_Types.RepairTeam.value);
          };
          if (v === 2) {
              return new Data_Maybe.Just(KanColle_DamageAnalysis_Types.RepairGoddess.value);
          };
          return KanColle_Util.throwWith("readDameCon: invalid input: " + Data_Show.show(Data_Show.showInt)(v));
      };
      return Data_Functor.map(Data_Functor.functorArray)(convert);
  })();
  var liftToFFICombined = function (f) {
      var convert = function (s) {
          return {
              main: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.main),
              enemy: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.enemy),
              escort: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.escort)
          };
      };
      return function (ds, b) {
          return convert(f(readDameCon(ds))(b));
      };
  };
  var liftToFFIBC = function (f) {
      var convert = function (s) {
          return {
              allyMain: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.allyMain),
              allyEscort: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.allyEscort),
              enemyMain: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.enemyMain),
              enemyEscort: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.enemyEscort)
          };
      };
      return function (ds, b) {
          return convert(f(readDameCon(ds))(b));
      };
  };
  var liftToFFIAC = function (f) {
      var convert = function (s) {
          return {
              main: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.main),
              enemyMain: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.enemyMain),
              enemyEscort: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.enemyEscort)
          };
      };
      return function (ds, b) {
          return convert(f(readDameCon(ds))(b));
      };
  };
  var liftToFFI = function (f) {
      var convert = function (s) {
          return {
              main: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.main),
              enemy: Data_Functor.map(Data_Functor.functorArray)(Data_Nullable.toNullable)(s.enemy)
          };
      };
      return function (ds, b) {
          return convert(f(readDameCon(ds))(b));
      };
  };
  var analyzeTECFBattleJS = liftToFFICombined(KanColle_DamageAnalysis_DamageAnalysis.analyzeTECFBattle);
  var analyzeSTFBattleJS = liftToFFICombined(KanColle_DamageAnalysis_DamageAnalysis.analyzeSTFBattle);
  var analyzeNightBattleJS = liftToFFI(KanColle_DamageAnalysis_DamageAnalysis.analyzeNightBattle);
  var analyzeCombinedNightBattleJS = liftToFFI(KanColle_DamageAnalysis_DamageAnalysis.analyzeCombinedNightBattle);
  var analyzeCTFBattleJS = liftToFFICombined(KanColle_DamageAnalysis_DamageAnalysis.analyzeCTFBattle);
  var analyzeBothCombinedSTFBattleJS = liftToFFIBC(KanColle_DamageAnalysis_DamageAnalysis.analyzeBothCombinedSTFBattle);
  var analyzeBothCombinedNightBattleJS = liftToFFIBC(KanColle_DamageAnalysis_DamageAnalysis.analyzeBothCombinedNightBattle);
  var analyzeBothCombinedCTFBattleJS = liftToFFIBC(KanColle_DamageAnalysis_DamageAnalysis.analyzeBothCombinedCTFBattle);
  var analyzeBattleJS = liftToFFI(KanColle_DamageAnalysis_DamageAnalysis.analyzeBattle);
  var analyzeAbyssalCTFNightBattleJS = liftToFFIAC(KanColle_DamageAnalysis_DamageAnalysis.analyzeAbyssalCTFNightBattle);
  var analyzeAbyssalCTFBattleJS = liftToFFIAC(KanColle_DamageAnalysis_DamageAnalysis.analyzeAbyssalCTFBattle);
  exports["analyzeAbyssalCTFBattleJS"] = analyzeAbyssalCTFBattleJS;
  exports["analyzeAbyssalCTFNightBattleJS"] = analyzeAbyssalCTFNightBattleJS;
  exports["analyzeBattleJS"] = analyzeBattleJS;
  exports["analyzeBothCombinedCTFBattleJS"] = analyzeBothCombinedCTFBattleJS;
  exports["analyzeBothCombinedNightBattleJS"] = analyzeBothCombinedNightBattleJS;
  exports["analyzeBothCombinedSTFBattleJS"] = analyzeBothCombinedSTFBattleJS;
  exports["analyzeCTFBattleJS"] = analyzeCTFBattleJS;
  exports["analyzeCombinedNightBattleJS"] = analyzeCombinedNightBattleJS;
  exports["analyzeNightBattleJS"] = analyzeNightBattleJS;
  exports["analyzeSTFBattleJS"] = analyzeSTFBattleJS;
  exports["analyzeTECFBattleJS"] = analyzeTECFBattleJS;
})(PS["KanColle.DamageAnalysis.FFI"] = PS["KanColle.DamageAnalysis.FFI"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var DE = (function () {
      function DE() {

      };
      DE.value = new DE();
      return DE;
  })();
  var DD = (function () {
      function DD() {

      };
      DD.value = new DD();
      return DD;
  })();
  var CL = (function () {
      function CL() {

      };
      CL.value = new CL();
      return CL;
  })();
  var CLT = (function () {
      function CLT() {

      };
      CLT.value = new CLT();
      return CLT;
  })();
  var CA = (function () {
      function CA() {

      };
      CA.value = new CA();
      return CA;
  })();
  var CAV = (function () {
      function CAV() {

      };
      CAV.value = new CAV();
      return CAV;
  })();
  var CVL = (function () {
      function CVL() {

      };
      CVL.value = new CVL();
      return CVL;
  })();
  var FBB = (function () {
      function FBB() {

      };
      FBB.value = new FBB();
      return FBB;
  })();
  var BB = (function () {
      function BB() {

      };
      BB.value = new BB();
      return BB;
  })();
  var BBV = (function () {
      function BBV() {

      };
      BBV.value = new BBV();
      return BBV;
  })();
  var CV = (function () {
      function CV() {

      };
      CV.value = new CV();
      return CV;
  })();
  var XBB = (function () {
      function XBB() {

      };
      XBB.value = new XBB();
      return XBB;
  })();
  var SS = (function () {
      function SS() {

      };
      SS.value = new SS();
      return SS;
  })();
  var SSV = (function () {
      function SSV() {

      };
      SSV.value = new SSV();
      return SSV;
  })();
  var AP = (function () {
      function AP() {

      };
      AP.value = new AP();
      return AP;
  })();
  var AV = (function () {
      function AV() {

      };
      AV.value = new AV();
      return AV;
  })();
  var LHA = (function () {
      function LHA() {

      };
      LHA.value = new LHA();
      return LHA;
  })();
  var CVB = (function () {
      function CVB() {

      };
      CVB.value = new CVB();
      return CVB;
  })();
  var AR = (function () {
      function AR() {

      };
      AR.value = new AR();
      return AR;
  })();
  var AS = (function () {
      function AS() {

      };
      AS.value = new AS();
      return AS;
  })();
  var CT = (function () {
      function CT() {

      };
      CT.value = new CT();
      return CT;
  })();
  var AO = (function () {
      function AO() {

      };
      AO.value = new AO();
      return AO;
  })();
  var Unknown = (function () {
      function Unknown(value0) {
          this.value0 = value0;
      };
      Unknown.create = function (value0) {
          return new Unknown(value0);
      };
      return Unknown;
  })();
  var toInt = function (v) {
      if (v instanceof DE) {
          return 1;
      };
      if (v instanceof DD) {
          return 2;
      };
      if (v instanceof CL) {
          return 3;
      };
      if (v instanceof CLT) {
          return 4;
      };
      if (v instanceof CA) {
          return 5;
      };
      if (v instanceof CAV) {
          return 6;
      };
      if (v instanceof CVL) {
          return 7;
      };
      if (v instanceof FBB) {
          return 8;
      };
      if (v instanceof BB) {
          return 9;
      };
      if (v instanceof BBV) {
          return 10;
      };
      if (v instanceof CV) {
          return 11;
      };
      if (v instanceof XBB) {
          return 12;
      };
      if (v instanceof SS) {
          return 13;
      };
      if (v instanceof SSV) {
          return 14;
      };
      if (v instanceof AP) {
          return 15;
      };
      if (v instanceof AV) {
          return 16;
      };
      if (v instanceof LHA) {
          return 17;
      };
      if (v instanceof CVB) {
          return 18;
      };
      if (v instanceof AR) {
          return 19;
      };
      if (v instanceof AS) {
          return 20;
      };
      if (v instanceof CT) {
          return 21;
      };
      if (v instanceof AO) {
          return 22;
      };
      if (v instanceof Unknown) {
          return -1;
      };
      throw new Error("Failed pattern match at KanColle.Generated.SType line 86, column 1 - line 87, column 1: " + [ v.constructor.name ]);
  };
  var showSType = function (v) {
      if (v instanceof DE) {
          return "DE";
      };
      if (v instanceof DD) {
          return "DD";
      };
      if (v instanceof CL) {
          return "CL";
      };
      if (v instanceof CLT) {
          return "CLT";
      };
      if (v instanceof CA) {
          return "CA";
      };
      if (v instanceof CAV) {
          return "CAV";
      };
      if (v instanceof CVL) {
          return "CVL";
      };
      if (v instanceof FBB) {
          return "FBB";
      };
      if (v instanceof BB) {
          return "BB";
      };
      if (v instanceof BBV) {
          return "BBV";
      };
      if (v instanceof CV) {
          return "CV";
      };
      if (v instanceof XBB) {
          return "XBB";
      };
      if (v instanceof SS) {
          return "SS";
      };
      if (v instanceof SSV) {
          return "SSV";
      };
      if (v instanceof AP) {
          return "AP";
      };
      if (v instanceof AV) {
          return "AV";
      };
      if (v instanceof LHA) {
          return "LHA";
      };
      if (v instanceof CVB) {
          return "CVB";
      };
      if (v instanceof AR) {
          return "AR";
      };
      if (v instanceof AS) {
          return "AS";
      };
      if (v instanceof CT) {
          return "CT";
      };
      if (v instanceof AO) {
          return "AO";
      };
      if (v instanceof Unknown) {
          return "<Unknown:" + (v.value0 + ">");
      };
      throw new Error("Failed pattern match at KanColle.Generated.SType line 11, column 1 - line 12, column 1: " + [ v.constructor.name ]);
  };
  var readSType = function (v) {
      if (v === "DE") {
          return DE.value;
      };
      if (v === "DD") {
          return DD.value;
      };
      if (v === "CL") {
          return CL.value;
      };
      if (v === "CLT") {
          return CLT.value;
      };
      if (v === "CA") {
          return CA.value;
      };
      if (v === "CAV") {
          return CAV.value;
      };
      if (v === "CVL") {
          return CVL.value;
      };
      if (v === "FBB") {
          return FBB.value;
      };
      if (v === "BB") {
          return BB.value;
      };
      if (v === "BBV") {
          return BBV.value;
      };
      if (v === "CV") {
          return CV.value;
      };
      if (v === "XBB") {
          return XBB.value;
      };
      if (v === "SS") {
          return SS.value;
      };
      if (v === "SSV") {
          return SSV.value;
      };
      if (v === "AP") {
          return AP.value;
      };
      if (v === "AV") {
          return AV.value;
      };
      if (v === "LHA") {
          return LHA.value;
      };
      if (v === "CVB") {
          return CVB.value;
      };
      if (v === "AR") {
          return AR.value;
      };
      if (v === "AS") {
          return AS.value;
      };
      if (v === "CT") {
          return CT.value;
      };
      if (v === "AO") {
          return AO.value;
      };
      return new Unknown(v);
  };
  var fromInt = function (v) {
      if (v === 1) {
          return DE.value;
      };
      if (v === 2) {
          return DD.value;
      };
      if (v === 3) {
          return CL.value;
      };
      if (v === 4) {
          return CLT.value;
      };
      if (v === 5) {
          return CA.value;
      };
      if (v === 6) {
          return CAV.value;
      };
      if (v === 7) {
          return CVL.value;
      };
      if (v === 8) {
          return FBB.value;
      };
      if (v === 9) {
          return BB.value;
      };
      if (v === 10) {
          return BBV.value;
      };
      if (v === 11) {
          return CV.value;
      };
      if (v === 12) {
          return XBB.value;
      };
      if (v === 13) {
          return SS.value;
      };
      if (v === 14) {
          return SSV.value;
      };
      if (v === 15) {
          return AP.value;
      };
      if (v === 16) {
          return AV.value;
      };
      if (v === 17) {
          return LHA.value;
      };
      if (v === 18) {
          return CVB.value;
      };
      if (v === 19) {
          return AR.value;
      };
      if (v === 20) {
          return AS.value;
      };
      if (v === 21) {
          return CT.value;
      };
      if (v === 22) {
          return AO.value;
      };
      return new Unknown("num " + Data_Show.show(Data_Show.showInt)(v));
  };
  var eqSType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof DE && y instanceof DE) {
              return true;
          };
          if (x instanceof DD && y instanceof DD) {
              return true;
          };
          if (x instanceof CL && y instanceof CL) {
              return true;
          };
          if (x instanceof CLT && y instanceof CLT) {
              return true;
          };
          if (x instanceof CA && y instanceof CA) {
              return true;
          };
          if (x instanceof CAV && y instanceof CAV) {
              return true;
          };
          if (x instanceof CVL && y instanceof CVL) {
              return true;
          };
          if (x instanceof FBB && y instanceof FBB) {
              return true;
          };
          if (x instanceof BB && y instanceof BB) {
              return true;
          };
          if (x instanceof BBV && y instanceof BBV) {
              return true;
          };
          if (x instanceof CV && y instanceof CV) {
              return true;
          };
          if (x instanceof XBB && y instanceof XBB) {
              return true;
          };
          if (x instanceof SS && y instanceof SS) {
              return true;
          };
          if (x instanceof SSV && y instanceof SSV) {
              return true;
          };
          if (x instanceof AP && y instanceof AP) {
              return true;
          };
          if (x instanceof AV && y instanceof AV) {
              return true;
          };
          if (x instanceof LHA && y instanceof LHA) {
              return true;
          };
          if (x instanceof CVB && y instanceof CVB) {
              return true;
          };
          if (x instanceof AR && y instanceof AR) {
              return true;
          };
          if (x instanceof AS && y instanceof AS) {
              return true;
          };
          if (x instanceof CT && y instanceof CT) {
              return true;
          };
          if (x instanceof AO && y instanceof AO) {
              return true;
          };
          if (x instanceof Unknown && y instanceof Unknown) {
              return x.value0 === y.value0;
          };
          return false;
      };
  });
  exports["DE"] = DE;
  exports["DD"] = DD;
  exports["CL"] = CL;
  exports["CLT"] = CLT;
  exports["CA"] = CA;
  exports["CAV"] = CAV;
  exports["CVL"] = CVL;
  exports["FBB"] = FBB;
  exports["BB"] = BB;
  exports["BBV"] = BBV;
  exports["CV"] = CV;
  exports["XBB"] = XBB;
  exports["SS"] = SS;
  exports["SSV"] = SSV;
  exports["AP"] = AP;
  exports["AV"] = AV;
  exports["LHA"] = LHA;
  exports["CVB"] = CVB;
  exports["AR"] = AR;
  exports["AS"] = AS;
  exports["CT"] = CT;
  exports["AO"] = AO;
  exports["Unknown"] = Unknown;
  exports["fromInt"] = fromInt;
  exports["readSType"] = readSType;
  exports["showSType"] = showSType;
  exports["toInt"] = toInt;
  exports["eqSType"] = eqSType;
})(PS["KanColle.Generated.SType"] = PS["KanColle.Generated.SType"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var KanColle_SType = PS["KanColle.SType"];
  var KanColle_Generated_SType = PS["KanColle.Generated.SType"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Show = PS["Data.Show"];
  var Data_Ord = PS["Data.Ord"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var ShipLevel = (function () {
      function ShipLevel(value0) {
          this.value0 = value0;
      };
      ShipLevel.create = function (value0) {
          return new ShipLevel(value0);
      };
      return ShipLevel;
  })();
  var ShipTypeOneOf = (function () {
      function ShipTypeOneOf(value0) {
          this.value0 = value0;
      };
      ShipTypeOneOf.create = function (value0) {
          return new ShipTypeOneOf(value0);
      };
      return ShipTypeOneOf;
  })();
  var Flagship = (function () {
      function Flagship(value0) {
          this.value0 = value0;
      };
      Flagship.create = function (value0) {
          return new Flagship(value0);
      };
      return Flagship;
  })();
  var FleetLevel = (function () {
      function FleetLevel(value0) {
          this.value0 = value0;
      };
      FleetLevel.create = function (value0) {
          return new FleetLevel(value0);
      };
      return FleetLevel;
  })();
  var FleetTotalAsw = (function () {
      function FleetTotalAsw(value0) {
          this.value0 = value0;
      };
      FleetTotalAsw.create = function (value0) {
          return new FleetTotalAsw(value0);
      };
      return FleetTotalAsw;
  })();
  var FleetTotalLos = (function () {
      function FleetTotalLos(value0) {
          this.value0 = value0;
      };
      FleetTotalLos.create = function (value0) {
          return new FleetTotalLos(value0);
      };
      return FleetTotalLos;
  })();
  var FleetTotalAa = (function () {
      function FleetTotalAa(value0) {
          this.value0 = value0;
      };
      FleetTotalAa.create = function (value0) {
          return new FleetTotalAa(value0);
      };
      return FleetTotalAa;
  })();
  var FleetTotalFp = (function () {
      function FleetTotalFp(value0) {
          this.value0 = value0;
      };
      FleetTotalFp.create = function (value0) {
          return new FleetTotalFp(value0);
      };
      return FleetTotalFp;
  })();
  var FleetDrum = (function () {
      function FleetDrum(value0) {
          this.value0 = value0;
      };
      FleetDrum.create = function (value0) {
          return new FleetDrum(value0);
      };
      return FleetDrum;
  })();
  var FleetShipWithDrum = (function () {
      function FleetShipWithDrum(value0) {
          this.value0 = value0;
      };
      FleetShipWithDrum.create = function (value0) {
          return new FleetShipWithDrum(value0);
      };
      return FleetShipWithDrum;
  })();
  var FleetSTypeCount = (function () {
      function FleetSTypeCount(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FleetSTypeCount.create = function (value0) {
          return function (value1) {
              return new FleetSTypeCount(value0, value1);
          };
      };
      return FleetSTypeCount;
  })();
  var FleetShipCount = (function () {
      function FleetShipCount(value0) {
          this.value0 = value0;
      };
      FleetShipCount.create = function (value0) {
          return new FleetShipCount(value0);
      };
      return FleetShipCount;
  })();
  var AnyOf = (function () {
      function AnyOf(...values) {
          this.values = values;
      };
      AnyOf.create = function (values) {
          return new AnyOf(values);
      };
      return AnyOf;
  })();
  var getExpeditionRequirement = function (v) {
      // Shortcuts
      var addGroup = Data_Semigroup.append(Data_Semigroup.semigroupArray);
      var submarine = function (n) {
          return [ new FleetSTypeCount(n, [ KanColle_Generated_SType.SS.value, KanColle_Generated_SType.SSV.value ]) ];
      };
      var ddde = function (n) {
          return [ new FleetSTypeCount(n, [ KanColle_Generated_SType.DD.value, KanColle_Generated_SType.DE.value ]) ];
      };
      var ddOrDe = function (n) {
          return [ new AnyOf( new FleetSTypeCount(n, [ KanColle_Generated_SType.DD.value ]), new FleetSTypeCount(n, [ KanColle_Generated_SType.DE.value ]) ) ];
      };
      var sty = function (n) {
          return function (stype) {
              return [ new FleetSTypeCount(n, [ stype ]) ];
          };
      };
      var lvlCnt = function (n) {
          return [ new FleetLevel(n) ];
      };
      var aswTotal = function (n) {
          return [ new FleetTotalAsw(n) ];
      };
      var losTotal = function (n) {
          return [ new FleetTotalLos(n) ];
      };
      var aaTotal = function (n) {
          return [ new FleetTotalAa(n) ];
      };
      var fpTotal = function (n) {
          return [ new FleetTotalFp(n) ];
      };
      var fslAndSc = function (fsl) {
          return function (sc) {
              return [ new Flagship(new ShipLevel(fsl)), new FleetShipCount(sc) ];
          };
      };
      var carrier = function (n) {
          return [ new FleetSTypeCount(n, [ KanColle_Generated_SType.CV.value, KanColle_Generated_SType.CVL.value, KanColle_Generated_SType.AV.value ]) ];
      };
      if (v === 1) {
          return fslAndSc(1)(2);
      };
      if (v === 2) {
          return fslAndSc(2)(4);
      };
      if (v === 3) {
          return fslAndSc(3)(3);
      };
      if (v === 4) {
          // TODO add OR logic to stype count predicates
          //return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(3)(3))(new AnyOf(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(ddOrDe(2)), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.DD.value))(sty(3)(KanColle_Generated_SType.DE.value))));
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(3)(3))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(ddde(2)));
      };
      if (v === 5) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(3)(4))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(ddde(2)));
      };
      if (v === 6) {
          return fslAndSc(4)(4);
      };
      if (v === 7) {
          return fslAndSc(5)(6);
      };
      if (v === 8) {
          return fslAndSc(6)(6);
      };
      if (v === 9) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(3)(4))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(ddde(2)));
      };
      if (v === 10) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(3)(3))(sty(2)(KanColle_Generated_SType.CL.value));
      };
      if (v === 11) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(6)(4))(ddde(2));
      };
      if (v === 12) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(4)(4))(ddde(2));
      };
      if (v === 13) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(5)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(sty(4)(KanColle_Generated_SType.DD.value)));
      };
      if (v === 14) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(6)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(sty(3)(KanColle_Generated_SType.DD.value)));
      };
      if (v === 15) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(8)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(carrier(2))(sty(2)(KanColle_Generated_SType.DD.value)));
      };
      if (v === 16) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(10)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(sty(2)(KanColle_Generated_SType.DD.value)));
      };
      if (v === 17) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(20)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(sty(3)(KanColle_Generated_SType.DD.value)));
      };
      if (v === 18) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(15)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(carrier(3))(sty(2)(KanColle_Generated_SType.DD.value)));
      };
      if (v === 19) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(20)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Generated_SType.BBV.value))(sty(2)(KanColle_Generated_SType.DD.value)));
      };
      if (v === 20) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(1)(2))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(submarine(1))(sty(1)(KanColle_Generated_SType.CL.value)));
      };
      if (v === 21) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(15)(5))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(30))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(4)(KanColle_Generated_SType.DD.value))([ new FleetShipWithDrum(3) ]))));
      };
      if (v === 22) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(30)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(45))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CA.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(sty(2)(KanColle_Generated_SType.DD.value)))));
      };
      if (v === 23) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(50)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(200))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Generated_SType.BBV.value))(sty(2)(KanColle_Generated_SType.DD.value))));
      };
      if (v === 24) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(50)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(200))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(ddde(4))([ new Flagship(new ShipTypeOneOf([ KanColle_Generated_SType.CL.value ])) ]))));
      };
      if (v === 25) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(25)(4))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Generated_SType.CA.value))(sty(2)(KanColle_Generated_SType.DD.value)));
      };
      if (v === 26) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(30)(4))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(carrier(1))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(sty(2)(KanColle_Generated_SType.DD.value))));
      };
      if (v === 27) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(1)(2))(submarine(2));
      };
      if (v === 28) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(30)(3))(submarine(3));
      };
      if (v === 29) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(50)(3))(submarine(3));
      };
      if (v === 30) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(55)(4))(submarine(4));
      };
      if (v === 31) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(60)(4))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(200))(submarine(4)));
      };
      if (v === 32) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(5)(3))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CT.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Generated_SType.DD.value))([ new Flagship(new ShipTypeOneOf([ KanColle_Generated_SType.CT.value ])) ])));
      };
      if (v === 33) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(1)(2))(sty(2)(KanColle_Generated_SType.DD.value));
      };
      if (v === 34) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(1)(2))(sty(2)(KanColle_Generated_SType.DD.value));
      };
      if (v === 35) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(40)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(carrier(2))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CA.value))(sty(1)(KanColle_Generated_SType.DD.value))));
      };
      if (v === 36) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(30)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Generated_SType.AV.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(sty(1)(KanColle_Generated_SType.DD.value))));
      };
      if (v === 37) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(50)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(200))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(5)(KanColle_Generated_SType.DD.value))([ new FleetShipWithDrum(3), new FleetDrum(4) ]))));
      };
      if (v === 38) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(65)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(240))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(5)(KanColle_Generated_SType.DD.value))([ new FleetShipWithDrum(4), new FleetDrum(8) ])));
      };
      if (v === 39) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(3)(5))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(180))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.AS.value))(submarine(4))));
      };
      if (v === 40) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(fslAndSc(25)(6))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(lvlCnt(150))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Generated_SType.CL.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Generated_SType.AV.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Generated_SType.DD.value))([ new Flagship(new ShipTypeOneOf([ KanColle_Generated_SType.CL.value ])) ])))));
      };
      if (v === 100) {
          return addGroup(fslAndSc(5)(4))(addGroup(lvlCnt(10))(ddde(3)));
      };
      if (v === 101) {
          return addGroup(fslAndSc(20)(4))(addGroup(ddde(4))(addGroup(aswTotal(180))(addGroup(aaTotal(70))(losTotal(73)))));
      };
      if (v === 102) {
          return addGroup(fslAndSc(35)(5))(addGroup(lvlCnt(185))(addGroup(sty(1)(KanColle_Generated_SType.CL.value))(addGroup(ddde(4))(addGroup(aswTotal(280))(addGroup(aaTotal(162))(losTotal(60)))))));
      };
      if (v === 110) {
          return addGroup(fslAndSc(40)(6))(addGroup(lvlCnt(150))(addGroup(sty(1)(KanColle_Generated_SType.AV.value))(addGroup(sty(1)(KanColle_Generated_SType.CL.value))(addGroup(ddde(2))(addGroup(aswTotal(200))(addGroup(aaTotal(200))(losTotal(140))))))));
      };
      if (v === 111) {
          return addGroup(fslAndSc(45)(6))(addGroup(lvlCnt(290))(addGroup(sty(1)(KanColle_Generated_SType.CA.value))(addGroup(sty(1)(KanColle_Generated_SType.CL.value))(addGroup(sty(3)(KanColle_Generated_SType.DD.value))(fpTotal(360))))));
      };
      return [  ];
  };
  var fromRawShip = function (s) {
      var $2 = {};
      for (var $3 in s) {
          if ({}.hasOwnProperty.call(s, $3)) {
              $2[$3] = s[$3];
          };
      };
      $2.stype = KanColle_Generated_SType.readSType(s.stype);
      return $2;
  };
  var fromRawFleet = Data_Functor.map(Data_Functor.functorArray)(fromRawShip);
  var explainShipRequirement = function (v) {
      if (v instanceof ShipLevel) {
          return "ship level should be at least " + Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof ShipTypeOneOf) {
          return "ship should have one of the following type: " + Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(KanColle_Generated_SType.showSType)(v.value0));
      };
      throw new Error("Failed pattern match at KanColle.Expedition.Requirement line 28, column 28 - line 31, column 96: " + [ v.constructor.name ]);
  };
  var explainFleetRequirement = function (v) {
      if (v instanceof Flagship) {
          return "flagship: " + explainShipRequirement(v.value0);
      };
      if (v instanceof FleetLevel) {
          return "fleet level sum should be at least " + Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof FleetTotalAsw) {
          return "fleet asw stat sum should be at least " + Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof FleetTotalLos) {
          return "fleet los stat sum should be at least " + Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof FleetTotalAa) {
          return "fleet anti-air stat sum should be at least " + Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof FleetTotalFp) {
          return "fleet fire-power stat sum should be at least " + Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof FleetDrum) {
          return "fleet should have at least " + (Data_Show.show(Data_Show.showInt)(v.value0) + " drum(s)");
      };
      if (v instanceof FleetShipWithDrum) {
          return "at least " + (Data_Show.show(Data_Show.showInt)(v.value0) + " ship(s) should have drum(s)");
      };
      if (v instanceof FleetSTypeCount) {
          return "require at least " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" ship(s) of the following type: " + Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(KanColle_Generated_SType.showSType)(v.value1))));
      };
      if (v instanceof FleetShipCount) {
          return "fleet should have at least " + (Data_Show.show(Data_Show.showInt)(v.value0) + " ship(s)");
      };
      throw new Error("Failed pattern match at KanColle.Expedition.Requirement line 34, column 29 - line 43, column 1: " + [ v.constructor.name ]);
  };
  var explainRequirements = Data_Functor.map(Data_Functor.functorArray)(explainFleetRequirement);
  var checkShip = function (req) {
      return function (s) {
          if (req instanceof ShipLevel) {
              return s.level >= req.value0;
          };
          if (req instanceof ShipTypeOneOf) {
              return Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                  return Data_Eq.eq(KanColle_Generated_SType.eqSType)(s.stype)(v);
              })(req.value0);
          };
          throw new Error("Failed pattern match at KanColle.Expedition.Requirement line 68, column 19 - line 70, column 50: " + [ req.constructor.name ]);
      };
  };
  var checkFleet = function (req) {
      return function (fleet) {
          var count = function (pred) {
              return function ($31) {
                  return Data_Array.length(Data_Array.filter(pred)($31));
              };
          };
          var $19 = Data_Array.uncons(fleet);
          if ($19 instanceof Data_Maybe.Just) {
              if (req instanceof Flagship) {
                  return checkShip(req.value0)($19.value0.head);
              };
              if (req instanceof FleetLevel) {
                  return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return x.level;
                  })(fleet)) >= req.value0;
              };
              if (req instanceof FleetTotalAsw) {
                  return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return x.asw;
                  })(fleet)) >= req.value0;
              };
              if (req instanceof FleetTotalLos) {
                  return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return x.los;
                  })(fleet)) >= req.value0;
              };
              if (req instanceof FleetTotalAa) {
                  return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return x.aa;
                  })(fleet)) >= req.value0;
              };
              if (req instanceof FleetTotalFp) {
                  return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return x.fp;
                  })(fleet)) >= req.value0;
              };
              if (req instanceof FleetDrum) {
                  return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
                      return x.drumCount;
                  })(fleet)) >= req.value0;
              };
              if (req instanceof FleetShipWithDrum) {
                  return count(function (x) {
                      return x.drumCount > 0;
                  })(fleet) >= req.value0;
              };
              if (req instanceof FleetSTypeCount) {
                  return count(checkShip(new ShipTypeOneOf(req.value1)))(fleet) >= req.value0;
              };
              if (req instanceof FleetShipCount) {
                  return Data_Array.length(fleet) >= req.value0;
              };
              if (req instanceof AnyOf) {
                  return (function(preds) {
                      return preds.some(function(fr) {
                          return checkFleet(fr)(fleet);
                      });
                  })(req.values);
              }
              throw new Error("Failed pattern match at KanColle.Expedition.Requirement line 74, column 36 - line 80, column 46: " + [ req.constructor.name ]);
          };
          if ($19 instanceof Data_Maybe.Nothing) {
              return false;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.Requirement line 73, column 24 - line 81, column 21: " + [ $19.constructor.name ]);
      };
  };
  var unsatisfiedRequirements = function (eId) {
      return function (fleet) {
          var fleetReqs = getExpeditionRequirement(eId);
          return Data_Array.filter(function (fr) {
              return !checkFleet(fr)(fleet);
          })(fleetReqs);
      };
  };
  exports["Flagship"] = Flagship;
  exports["FleetLevel"] = FleetLevel;
  exports["FleetTotalAsw"] = FleetTotalAsw;
  exports["FleetTotalLos"] = FleetTotalLos;
  exports["FleetTotalAa"] = FleetTotalAa;
  exports["FleetTotalFp"] = FleetTotalFp;
  exports["FleetDrum"] = FleetDrum;
  exports["FleetShipWithDrum"] = FleetShipWithDrum;
  exports["FleetSTypeCount"] = FleetSTypeCount;
  exports["FleetShipCount"] = FleetShipCount;
  exports["ShipLevel"] = ShipLevel;
  exports["ShipTypeOneOf"] = ShipTypeOneOf;
  exports["AnyOf"] = AnyOf;
  exports["checkFleet"] = checkFleet;
  exports["checkShip"] = checkShip;
  exports["explainFleetRequirement"] = explainFleetRequirement;
  exports["explainRequirements"] = explainRequirements;
  exports["explainShipRequirement"] = explainShipRequirement;
  exports["fromRawFleet"] = fromRawFleet;
  exports["fromRawShip"] = fromRawShip;
  exports["getExpeditionRequirement"] = getExpeditionRequirement;
  exports["unsatisfiedRequirements"] = unsatisfiedRequirements;
})(PS["KanColle.Expedition.Requirement"] = PS["KanColle.Expedition.Requirement"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Data_Array = PS["Data.Array"];
  var resourceRowsLiftOp = function (app) {
      return function (x) {
          return function (y) {
              return {
                  fuel: app(x.fuel)(y.fuel),
                  ammo: app(x.ammo)(y.ammo),
                  steel: app(x.steel)(y.steel),
                  bauxite: app(x.bauxite)(y.bauxite)
              };
          };
      };
  };
  var resourceRowsFill = function (v) {
      return {
          fuel: v,
          ammo: v,
          steel: v,
          bauxite: v
      };
  };
  var mapResourceRows = function (f) {
      return function (r) {
          return {
              fuel: f(r.fuel),
              ammo: f(r.ammo),
              steel: f(r.steel),
              bauxite: f(r.bauxite)
          };
      };
  };
  var allExpeditionIds = Data_Array.range(1)(40);
  allExpeditionIds.push(...Data_Array.range(100)(102));
  allExpeditionIds.push(...Data_Array.range(110)(111));
  exports["allExpeditionIds"] = allExpeditionIds;
  exports["mapResourceRows"] = mapResourceRows;
  exports["resourceRowsFill"] = resourceRowsFill;
  exports["resourceRowsLiftOp"] = resourceRowsLiftOp;
})(PS["KanColle.Expedition.Base"] = PS["KanColle.Expedition.Base"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var IncomeBase = function (x) {
      return x;
  };
  var mkIncomeBase = IncomeBase;
  var incomeSemigroup = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return KanColle_Expedition_Base.resourceRowsLiftOp(Data_Semiring.add(Data_Semiring.semiringInt))(v)(v1);
      };
  });
  var incomeMonoid = new Data_Monoid.Monoid(function () {
      return incomeSemigroup;
  }, KanColle_Expedition_Base.resourceRowsFill(0));
  var income = function (f) {
      return function (a) {
          return function (s) {
              return function (b) {
                  return {
                      fuel: f,
                      ammo: a,
                      steel: s,
                      bauxite: b
                  };
              };
          };
      };
  };
  var getIncomeBase = function (v) {
      return v;
  };
  var getExpeditionIncomeBase = function (eId) {
      if (eId === 1) {
          return income(0)(30)(0)(0);
      };
      if (eId === 2) {
          return income(0)(100)(30)(0);
      };
      if (eId === 3) {
          return income(30)(30)(40)(0);
      };
      if (eId === 4) {
          return income(0)(60)(0)(0);
      };
      if (eId === 5) {
          return income(200)(200)(20)(20);
      };
      if (eId === 6) {
          return income(0)(0)(0)(80);
      };
      if (eId === 7) {
          return income(0)(0)(50)(30);
      };
      if (eId === 8) {
          return income(50)(100)(50)(50);
      };
      if (eId === 9) {
          return income(350)(0)(0)(0);
      };
      if (eId === 10) {
          return income(0)(50)(0)(30);
      };
      if (eId === 11) {
          return income(0)(0)(0)(250);
      };
      if (eId === 12) {
          return income(50)(250)(200)(50);
      };
      if (eId === 13) {
          return income(240)(300)(0)(0);
      };
      if (eId === 14) {
          return income(0)(240)(200)(0);
      };
      if (eId === 15) {
          return income(0)(0)(300)(400);
      };
      if (eId === 16) {
          return income(500)(500)(200)(200);
      };
      if (eId === 17) {
          return income(70)(70)(50)(0);
      };
      if (eId === 18) {
          return income(0)(0)(300)(100);
      };
      if (eId === 19) {
          return income(400)(0)(50)(30);
      };
      if (eId === 20) {
          return income(0)(0)(150)(0);
      };
      if (eId === 21) {
          return income(320)(270)(0)(0);
      };
      if (eId === 22) {
          return income(0)(10)(0)(0);
      };
      if (eId === 23) {
          return income(0)(20)(0)(100);
      };
      if (eId === 24) {
          return income(500)(0)(0)(150);
      };
      if (eId === 25) {
          return income(900)(0)(500)(0);
      };
      if (eId === 26) {
          return income(0)(0)(0)(900);
      };
      if (eId === 27) {
          return income(0)(0)(800)(0);
      };
      if (eId === 28) {
          return income(0)(0)(900)(350);
      };
      if (eId === 29) {
          return income(0)(0)(0)(100);
      };
      if (eId === 30) {
          return income(0)(0)(0)(100);
      };
      if (eId === 31) {
          return income(0)(30)(0)(0);
      };
      if (eId === 32) {
          return income(50)(50)(50)(50);
      };
      if (eId === 33) {
          return Data_Monoid.mempty(incomeMonoid);
      };
      if (eId === 34) {
          return Data_Monoid.mempty(incomeMonoid);
      };
      if (eId === 35) {
          return income(0)(0)(240)(280);
      };
      if (eId === 36) {
          return income(480)(0)(200)(200);
      };
      if (eId === 37) {
          return income(0)(380)(270)(0);
      };
      if (eId === 38) {
          return income(420)(0)(200)(0);
      };
      if (eId === 39) {
          return income(0)(0)(300)(0);
      };
      if (eId === 40) {
          return income(300)(300)(0)(100);
      };
      if (eId === 100) {
          return income(45)(45)(0)(0);
      };
      if (eId === 101) {
          return income(70)(40)(0)(10);
      };
      if (eId === 102) {
          return income(120)(0)(60)(60);
      };
      if (eId === 110) {
          return income(0)(0)(10)(30);
      };
      if (eId === 111) {
          return income(300)(200)(100)(0);
      };
      return Data_Monoid.mempty(incomeMonoid);
  };
  exports["getExpeditionIncomeBase"] = getExpeditionIncomeBase;
  exports["getIncomeBase"] = getIncomeBase;
  exports["mkIncomeBase"] = mkIncomeBase;
  exports["incomeSemigroup"] = incomeSemigroup;
  exports["incomeMonoid"] = incomeMonoid;
})(PS["KanColle.Expedition.IncomeBase"] = PS["KanColle.Expedition.IncomeBase"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Int = PS["Data.Int"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];
  var noCost = {
      fuel: 0.0,
      ammo: 0.0,
      time: 0
  };
  var getExpeditionCost = function (eId) {
      var percent = function (v) {
          return Data_Int.toNumber(v * 10 | 0) / 100.0;
      };
      var hr = function (v) {
          return v * 60 | 0;
      };
      var hm = function (h) {
          return function (m) {
              return (h * 60 | 0) + m | 0;
          };
      };
      var c = function (f) {
          return function (a) {
              return function (t) {
                  return {
                      fuel: percent(f),
                      ammo: percent(a),
                      time: t
                  };
              };
          };
      };
      if (eId === 1) {
          return c(3)(0)(15);
      };
      if (eId === 2) {
          return c(5)(0)(30);
      };
      if (eId === 3) {
          return c(3)(2)(20);
      };
      if (eId === 4) {
          return c(5)(0)(50);
      };
      if (eId === 5) {
          return c(5)(0)(hm(1)(30));
      };
      if (eId === 6) {
          return c(3)(2)(40);
      };
      if (eId === 7) {
          return c(5)(0)(hr(1));
      };
      if (eId === 8) {
          return c(5)(2)(hr(3));
      };
      if (eId === 9) {
          return c(5)(0)(hr(4));
      };
      if (eId === 10) {
          return c(3)(0)(hm(1)(30));
      };
      if (eId === 11) {
          return c(5)(0)(hr(5));
      };
      if (eId === 12) {
          return c(5)(0)(hr(8));
      };
      if (eId === 13) {
          return c(5)(4)(hr(4));
      };
      if (eId === 14) {
          return c(5)(0)(hr(6));
      };
      if (eId === 15) {
          return c(5)(4)(hr(12));
      };
      if (eId === 16) {
          return c(5)(4)(hr(15));
      };
      if (eId === 17) {
          return c(3)(4)(45);
      };
      if (eId === 18) {
          return c(5)(2)(hr(5));
      };
      if (eId === 19) {
          return c(5)(4)(hr(6));
      };
      if (eId === 20) {
          return c(5)(4)(hr(2));
      };
      if (eId === 21) {
          return c(8)(7)(hm(2)(20));
      };
      if (eId === 22) {
          return c(8)(7)(hr(3));
      };
      if (eId === 23) {
          return c(8)(8)(hr(4));
      };
      if (eId === 24) {
          return c(9)(6)(hm(8)(20));
      };
      if (eId === 25) {
          return c(5)(8)(hr(40));
      };
      if (eId === 26) {
          return c(8)(8)(hr(80));
      };
      if (eId === 27) {
          return c(8)(8)(hr(20));
      };
      if (eId === 28) {
          return c(8)(8)(hr(25));
      };
      if (eId === 29) {
          return c(9)(4)(hr(24));
      };
      if (eId === 30) {
          return c(9)(7)(hr(48));
      };
      if (eId === 31) {
          return c(5)(0)(hr(2));
      };
      if (eId === 32) {
          return c(9)(3)(hr(24));
      };
      if (eId === 33) {
          return c(5)(8)(15);
      };
      if (eId === 34) {
          return c(5)(8)(30);
      };
      if (eId === 35) {
          return c(8)(8)(hr(7));
      };
      if (eId === 36) {
          return c(8)(8)(hr(9));
      };
      if (eId === 37) {
          return c(8)(8)(hm(2)(45));
      };
      if (eId === 38) {
          return c(8)(8)(hm(2)(55));
      };
      if (eId === 39) {
          return c(9)(9)(hr(30));
      };
      if (eId === 40) {
          return c(8)(7)(hm(6)(50));
      };
      if (eId === 100) {
          return c(3.5)(0)(25);
      };
      if (eId === 101) {
          return c(5)(2)(55);
      };
      if (eId === 102) {
          return c(6.5)(3.5)(hm(2)(15));
      };
      if (eId === 110) {
          return c(4.5)(1.5)((35));
      };
      if (eId === 111) {
          return c(8)(6.5)(hm(8)(40));
      };
      return noCost;
  };
  var calcCost = function (c) {
      return function (x) {
          return {
              fuel: Data_Int.floor(Data_Int.toNumber(x.fuel) * c.fuel),
              ammo: Data_Int.floor(Data_Int.toNumber(x.ammo) * c.ammo)
          };
      };
  };
  exports["calcCost"] = calcCost;
  exports["getExpeditionCost"] = getExpeditionCost;
})(PS["KanColle.Expedition.Cost"] = PS["KanColle.Expedition.Cost"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var KanColle_Expedition_Requirement = PS["KanColle.Expedition.Requirement"];
  var KanColle_Expedition_IncomeBase = PS["KanColle.Expedition.IncomeBase"];
  var KanColle_Expedition_Cost = PS["KanColle.Expedition.Cost"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Functor = PS["Data.Functor"];
  var validExpeditionId = function ($0) {
      return !Data_Array["null"](KanColle_Expedition_Requirement.getExpeditionRequirement($0));
  };
  var getExpeditionDisplayName = function (eId) {
      return eId >= 100 && eId < 110 ? "A" + (eId - 99)
        : eId >= 110 && eId < 120 ? "B" + (eId - 109)
        : eId;
  };
  var getExpeditionWorld = function (eId) {
      return eId < 100 ? Math.ceil(eId / 8) : Math.ceil((eId - 99) / 10);
  };
  var getExpeditionInfo = function (eId) {
      return {
          id: eId,
          name: getExpeditionDisplayName(eId),
          world: getExpeditionWorld(eId),
          req: KanColle_Expedition_Requirement.getExpeditionRequirement(eId),
          income: KanColle_Expedition_IncomeBase.getExpeditionIncomeBase(eId),
          cost: KanColle_Expedition_Cost.getExpeditionCost(eId)
      };
  };
  var checkExpedition = function (eId) {
      return function (fleet) {
          return validExpeditionId(eId) && Data_Array["null"](KanColle_Expedition_Requirement.unsatisfiedRequirements(eId)(fleet));
      };
  };
  var getAvailableExpeditions = function (fleet) {
      return Data_Array.filter(function (eId) {
          return checkExpedition(eId)(fleet);
      })(KanColle_Expedition_Base.allExpeditionIds);
  };
  var allExpeditions = Data_Functor.map(Data_Functor.functorArray)(getExpeditionInfo)(KanColle_Expedition_Base.allExpeditionIds);
  exports["allExpeditions"] = allExpeditions;
  exports["checkExpedition"] = checkExpedition;
  exports["getAvailableExpeditions"] = getAvailableExpeditions;
  exports["getExpeditionInfo"] = getExpeditionInfo;
  exports["validExpeditionId"] = validExpeditionId;
})(PS["KanColle.Expedition"] = PS["KanColle.Expedition"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_Partial = PS["Data.Array.Partial"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_String = PS["Data.String"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var KanColle_SType = PS["KanColle.SType"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var KanColle_Expedition_Cost = PS["KanColle.Expedition.Cost"];
  var KanColle_Expedition_Requirement = PS["KanColle.Expedition.Requirement"];
  var KanColle_Util = PS["KanColle.Util"];
  var Data_Maybe = PS["Data.Maybe"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Eq = PS["Data.Eq"];
  var KanColle_Generated_SType = PS["KanColle.Generated.SType"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var ECost = function (x) {
      return x;
  };
  var pprFleetNotes = function (xs) {
      var notes = Data_Array.mapMaybe(function (x) {
          return x.note;
      })(xs);
      var $6 = Data_Array["null"](notes);
      if ($6) {
          return "<N/A>";
      };
      if (!$6) {
          var formatNote = function (note) {
              return "{" + (Partial_Unsafe.unsafePartial(function (dictPartial) {
                  return Data_Array_Partial.head(dictPartial)(note);
              }) + ("}x" + Data_Show.show(Data_Show.showInt)(Data_Array.length(note))));
          };
          var convert = function (v) {
              return Data_Array.cons(v.value0)(v.value1);
          };
          var grouppedNotes = Data_Functor.map(Data_Functor.functorArray)(formatNote)(Data_Functor.map(Data_Functor.functorArray)(convert)(Data_Array.group(Data_Eq.eqString)(notes)));
          return Data_String.joinWith(", ")(grouppedNotes);
      };
      throw new Error("Failed pattern match at KanColle.Expedition.Minimal line 198, column 20 - line 204, column 41: " + [ $6.constructor.name ]);
  };
  var getECost = function (v) {
      return v;
  };
  var eCostSemigroup = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return {
              shipCost: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.shipCost)(v1.shipCost),
              fleet: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.fleet)(v1.fleet)
          };
      };
  });
  var eCostMonoid = new Data_Monoid.Monoid(function () {
      return eCostSemigroup;
  }, {
      shipCost: Data_Monoid.mempty(Data_Monoid.monoidArray),
      fleet: Data_Monoid.mempty(Data_Monoid.monoidArray)
  });
  var dummyShip = function (s) {
      return {
          ammo: 400,
          morale: 100,
          stype: s,
          level: 150,
          drumCount: 4,
          note: Data_Maybe.Nothing.value
      };
  };
  var mkECost = function (s) {
      return function (f) {
          return function (a) {
              return {
                  shipCost: [ {
                      fuel: f,
                      ammo: a
                  } ],
                  fleet: [ dummyShip(s) ]
              };
          };
      };
  };
  var shipWithNote = function (s) {
      return function (n) {
          var $15 = dummyShip(s);
          var $13 = {};
          for (var $14 in $15) {
              if ({}.hasOwnProperty.call($15, $14)) {
                  $13[$14] = $15[$14];
              };
          };
          $13.note = new Data_Maybe.Just(n);
          return $13;
      };
  };
  var mkECostWithNote = function (s) {
      return function (f) {
          return function (a) {
              return function (n) {
                  return {
                      shipCost: [ {
                          fuel: f,
                          ammo: a
                      } ],
                      fleet: [ shipWithNote(s)(n) ]
                  };
              };
          };
      };
  };
  var katori = mkECostWithNote(KanColle_Generated_SType.CT.value)(35)(20)("\u9999\u53d6");
  var ssCost = function (n) {
      var nonSSV = mkECostWithNote(KanColle_Generated_SType.SS.value)(10)(20)("\u975e\u9a6c\u6218\u795eSS");
      var maruyu = mkECostWithNote(KanColle_Generated_SType.SS.value)(10)(10)("\u9a6c\u6218\u795e");
      if (n === 1) {
          return maruyu;
      };
      return Data_Semigroup.append(eCostSemigroup)(maruyu)(KanColle_Util.times(eCostMonoid)(n - 1)(nonSSV));
  };
  var fillSS = function (n) {
      return function (v) {
          var l = Data_Array.length(v.fleet);
          var $19 = l >= n;
          if ($19) {
              return v;
          };
          if (!$19) {
              return Data_Semigroup.append(eCostSemigroup)(v)(ssCost(n - l));
          };
          throw new Error("Failed pattern match at KanColle.Expedition.Minimal line 142, column 25 - line 144, column 27: " + [ $19.constructor.name ]);
      };
  };
  var taigei = mkECostWithNote(KanColle_Generated_SType.AS.value)(35)(10)("\u5927\u9cb8");
  var ddCost = function (n) {
      var mutsukiClass = mkECostWithNote(KanColle_Generated_SType.DD.value)(15)(15)("\u7766\u6708\u7ea7(\u6539/\u6539\u4e8c\u7686\u53ef)");
      return KanColle_Util.times(eCostMonoid)(n)(mutsukiClass);
  };
  var cvlCost = function (n) {
      var shouhou = mkECostWithNote(KanColle_Generated_SType.CVL.value)(35)(35)("\u7965\u51e4\u7ea7");
      var houshou = mkECostWithNote(KanColle_Generated_SType.CVL.value)(25)(25)("\u51e4\u7fd4");
      if (n === 1) {
          return houshou;
      };
      return Data_Semigroup.append(eCostSemigroup)(houshou)(KanColle_Util.times(eCostMonoid)(n - 1)(shouhou));
  };
  var clCost = function (n) {
      var tenryuu = mkECostWithNote(KanColle_Generated_SType.CL.value)(25)(20)("\u5929\u9f99\u7ea7");
      var kuma = mkECostWithNote(KanColle_Generated_SType.CL.value)(25)(25)("\u7403\u78e8\u7ea7");
      var $21 = n <= 2;
      if ($21) {
          return KanColle_Util.times(eCostMonoid)(n)(tenryuu);
      };
      if (!$21) {
          return Data_Semigroup.append(eCostSemigroup)(KanColle_Util.times(eCostMonoid)(2)(tenryuu))(KanColle_Util.times(eCostMonoid)(n - 2)(kuma));
      };
      throw new Error("Failed pattern match at KanColle.Expedition.Minimal line 125, column 12 - line 127, column 45: " + [ $21.constructor.name ]);
  };
  var caCost = function (n) {
      return KanColle_Util.times(eCostMonoid)(n)(mkECostWithNote(KanColle_Generated_SType.CA.value)(35)(50)("\u53e4\u9e70\u7ea7/\u9752\u53f6\u7ea7"));
  };
  var bbvCost = function (n) {
      var fusouOrIse = mkECostWithNote(KanColle_Generated_SType.BBV.value)(95)(105)("\u6276\u6851\u7ea7\u6539/\u4f0a\u52bf\u7ea7\u6539");
      return KanColle_Util.times(eCostMonoid)(n)(fusouOrIse);
  };
  var avCost = function (n) {
      var chitoseOrMizuho = mkECostWithNote(KanColle_Generated_SType.AV.value)(35)(35)("\u5343\u5c81\u7ea7/\u745e\u7a57");
      var akitsushima = mkECostWithNote(KanColle_Generated_SType.AV.value)(50)(10)("\u79cb\u6d25\u6d32");
      var $22 = n <= 3;
      if ($22) {
          return KanColle_Util.times(eCostMonoid)(n)(chitoseOrMizuho);
      };
      if (!$22) {
          return Data_Semigroup.append(eCostSemigroup)(KanColle_Util.times(eCostMonoid)(3)(chitoseOrMizuho))(akitsushima);
      };
      throw new Error("Failed pattern match at KanColle.Expedition.Minimal line 100, column 12 - line 105, column 45: " + [ $22.constructor.name ]);
  };
  var getExpeditionMinCost = function (v) {
      if (v === 1) {
          return fillSS(2)(Data_Monoid.mempty(eCostMonoid));
      };
      if (v === 2) {
          return fillSS(4)(Data_Monoid.mempty(eCostMonoid));
      };
      if (v === 3) {
          return fillSS(3)(Data_Monoid.mempty(eCostMonoid));
      };
      if (v === 4) {
          return Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(2));
      };
      if (v === 5) {
          return fillSS(4)(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(2)));
      };
      if (v === 6) {
          return fillSS(4)(Data_Monoid.mempty(eCostMonoid));
      };
      if (v === 7) {
          return fillSS(6)(Data_Monoid.mempty(eCostMonoid));
      };
      if (v === 8) {
          return fillSS(6)(Data_Monoid.mempty(eCostMonoid));
      };
      if (v === 9) {
          return fillSS(4)(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(2)));
      };
      if (v === 10) {
          return fillSS(3)(clCost(2));
      };
      if (v === 11) {
          return fillSS(4)(ddCost(2));
      };
      if (v === 12) {
          return fillSS(4)(ddCost(2));
      };
      if (v === 13) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(4)));
      };
      if (v === 14) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(3)));
      };
      if (v === 15) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(cvlCost(2))(ddCost(2)));
      };
      if (v === 16) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(2)));
      };
      if (v === 17) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(3)));
      };
      if (v === 18) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(cvlCost(3))(ddCost(2)));
      };
      if (v === 19) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(bbvCost(2))(ddCost(2)));
      };
      if (v === 20) {
          return Data_Semigroup.append(eCostSemigroup)(ssCost(1))(clCost(1));
      };
      if (v === 21) {
          return Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(4));
      };
      if (v === 22) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(caCost(1))(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(2))));
      };
      if (v === 23) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(bbvCost(2))(ddCost(2)));
      };
      if (v === 24) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(4)));
      };
      if (v === 25) {
          return Data_Semigroup.append(eCostSemigroup)(caCost(2))(ddCost(2));
      };
      if (v === 26) {
          return Data_Semigroup.append(eCostSemigroup)(cvlCost(1))(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(2)));
      };
      if (v === 27) {
          return ssCost(2);
      };
      if (v === 28) {
          return ssCost(3);
      };
      if (v === 29) {
          return ssCost(3);
      };
      if (v === 30) {
          return ssCost(4);
      };
      if (v === 31) {
          return ssCost(4);
      };
      if (v === 32) {
          return Data_Semigroup.append(eCostSemigroup)(katori)(ddCost(2));
      };
      if (v === 33) {
          return ddCost(2);
      };
      if (v === 34) {
          return ddCost(2);
      };
      if (v === 35) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(cvlCost(2))(Data_Semigroup.append(eCostSemigroup)(caCost(1))(ddCost(1))));
      };
      if (v === 36) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(avCost(2))(Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(1))));
      };
      if (v === 37) {
          return Data_Semigroup.append(eCostSemigroup)(clCost(1))(ddCost(5));
      };
      if (v === 38) {
          return fillSS(6)(ddCost(5));
      };
      if (v === 39) {
          return Data_Semigroup.append(eCostSemigroup)(taigei)(ssCost(4));
      };
      if (v === 40) {
          return fillSS(6)(Data_Semigroup.append(eCostSemigroup)(clCost(1))(Data_Semigroup.append(eCostSemigroup)(avCost(2))(ddCost(2))));
      };
      return Data_Monoid.mempty(eCostMonoid);
  };
  var minimalCostMarkdownTable = (function () {
      var mkRow = function (eId) {
          var minCost = getECost(getExpeditionMinCost(eId));
          var notes = pprFleetNotes(minCost.fleet);
          var cost = KanColle_Expedition_Cost.getExpeditionCost(eId);
          var costVec = Data_Functor.map(Data_Functor.functorArray)(function (sc) {
              return KanColle_Expedition_Cost.calcCost(cost)(sc);
          })(minCost.shipCost);
          var fuelCosts = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return x.fuel;
          })(costVec));
          var ammoCosts = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return x.ammo;
          })(costVec));
          return Data_String.joinWith(" | ")([ Data_Show.show(Data_Show.showInt)(eId), Data_Show.show(Data_Show.showInt)(fuelCosts), Data_Show.show(Data_Show.showInt)(ammoCosts), notes ]);
      };
      var rows = Data_Functor.map(Data_Functor.functorArray)(mkRow)(KanColle_Expedition_Base.allExpeditionIds);
      var header = "Expedition Id | Fuel | Ammo | Minimal Cost Fleet Composition" + ("\x0a" + " --- | --- | --- | ---");
      return header + ("\x0a" + Data_String.joinWith("\x0a")(rows));
  })();
  exports["ECost"] = ECost;
  exports["avCost"] = avCost;
  exports["bbvCost"] = bbvCost;
  exports["caCost"] = caCost;
  exports["clCost"] = clCost;
  exports["cvlCost"] = cvlCost;
  exports["ddCost"] = ddCost;
  exports["dummyShip"] = dummyShip;
  exports["fillSS"] = fillSS;
  exports["getECost"] = getECost;
  exports["getExpeditionMinCost"] = getExpeditionMinCost;
  exports["katori"] = katori;
  exports["minimalCostMarkdownTable"] = minimalCostMarkdownTable;
  exports["mkECost"] = mkECost;
  exports["mkECostWithNote"] = mkECostWithNote;
  exports["pprFleetNotes"] = pprFleetNotes;
  exports["shipWithNote"] = shipWithNote;
  exports["ssCost"] = ssCost;
  exports["taigei"] = taigei;
  exports["eCostSemigroup"] = eCostSemigroup;
  exports["eCostMonoid"] = eCostMonoid;
})(PS["KanColle.Expedition.Minimal"] = PS["KanColle.Expedition.Minimal"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Int = PS["Data.Int"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Foldable = PS["Data.Foldable"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var KanColle_Expedition_IncomeBase = PS["KanColle.Expedition.IncomeBase"];
  var KanColle_Expedition_Minimal = PS["KanColle.Expedition.Minimal"];
  var KanColle_Expedition_Cost = PS["KanColle.Expedition.Cost"];
  var Data_Show = PS["Data.Show"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var simpleEvalCost = function (f) {
      return function (income) {
          var i = KanColle_Expedition_IncomeBase.getIncomeBase(income);
          return f(i.fuel)(i.ammo)(i.steel)(i.bauxite);
      };
  };
  var showEvalResult = function (er) {
      var showHourly = function (v) {
          return Data_Show.show(Data_Show.showNumber)(Data_Int.toNumber(v) / (Data_Int.toNumber((KanColle_Expedition_Cost.getExpeditionCost(er.eId)).time) / 60.0));
      };
      var inc = KanColle_Expedition_IncomeBase.getIncomeBase(er.netIncome);
      return "Expedition #" + (Data_Show.show(Data_Show.showInt)(er.eId) + (": " + (showHourly(inc.fuel) + (" | " + (showHourly(inc.ammo) + (" | " + (showHourly(inc.steel) + (" | " + (showHourly(inc.bauxite) + (" | " + Data_Show.show(Data_Show.showNumber)(er.score)))))))))));
  };
  var ordMax = function (dictOrd) {
      return function (a) {
          return function (b) {
              var $2 = Data_Ord.greaterThanOrEq(dictOrd)(a)(b);
              if ($2) {
                  return a;
              };
              if (!$2) {
                  return b;
              };
              throw new Error("Failed pattern match at KanColle.Expedition.Evaluate line 44, column 14 - line 44, column 37: " + [ $2.constructor.name ]);
          };
      };
  };
  var nToFloor = Data_Int.floor;
  var minToHour = function (m) {
      return Data_Int.toNumber(m) / 60.0;
  };
  var incomeDiff = function (cost) {
      return function (iv) {
          return function (v) {
              var i = KanColle_Expedition_IncomeBase.getIncomeBase(iv);
              var fuelCosts = Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return nToFloor(Data_Int.toNumber(x.fuel) * cost.fuel);
              })(v.shipCost);
              var ammoCosts = Data_Functor.map(Data_Functor.functorArray)(function (x) {
                  return nToFloor(Data_Int.toNumber(x.ammo) * cost.ammo);
              })(v.shipCost);
              return KanColle_Expedition_IncomeBase.mkIncomeBase({
                  fuel: i.fuel - Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(fuelCosts),
                  ammo: i.ammo - Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(ammoCosts),
                  steel: i.steel,
                  bauxite: i.bauxite
              });
          };
      };
  };
  var sortByHourlyGain = function (evalCost) {
      var compareScore = Data_Ord.comparing(Data_Ord.ordNumber)(function (x) {
          return x.score;
      });
      var collectInfo = function (eId) {
          var cost = KanColle_Expedition_Cost.getExpeditionCost(eId);
          var netIncome = incomeDiff(cost)(KanColle_Expedition_IncomeBase.getExpeditionIncomeBase(eId))(KanColle_Expedition_Minimal.getExpeditionMinCost(eId));
          var score = Data_Int.toNumber(evalCost(netIncome)) / minToHour(cost.time);
          return {
              eId: eId,
              netIncome: netIncome,
              time: cost.time,
              score: score
          };
      };
      var expeditions = Data_Functor.map(Data_Functor.functorArray)(collectInfo)(KanColle_Expedition_Base.allExpeditionIds);
      return Data_Array.sortBy(Data_Function.flip(compareScore))(expeditions);
  };
  var sortWithAfkTime = function (evalCost) {
      return function (timePenalty) {
          return function (afkMinutes) {
              var compareScore = Data_Ord.comparing(Data_Ord.ordNumber)(function (x) {
                  return x.score;
              });
              var collectInfo = function (eId) {
                  var cost = KanColle_Expedition_Cost.getExpeditionCost(eId);
                  var timeDiffPenalty = timePenalty * Data_Int.toNumber(ordMax(Data_Ord.ordInt)(0)(cost.time - afkMinutes));
                  var totalExpTime = ordMax(Data_Ord.ordInt)(cost.time)(afkMinutes);
                  var netIncome = incomeDiff(cost)(KanColle_Expedition_IncomeBase.getExpeditionIncomeBase(eId))(KanColle_Expedition_Minimal.getExpeditionMinCost(eId));
                  var scoreNoPenalty = Data_Int.toNumber(evalCost(netIncome)) / minToHour(totalExpTime);
                  var score = scoreNoPenalty - timeDiffPenalty;
                  return {
                      eId: eId,
                      netIncome: netIncome,
                      time: totalExpTime,
                      score: score
                  };
              };
              var expeditions = Data_Functor.map(Data_Functor.functorArray)(collectInfo)(KanColle_Expedition_Base.allExpeditionIds);
              return Data_Array.sortBy(Data_Function.flip(compareScore))(expeditions);
          };
      };
  };
  var evalResultToJS = function (er) {
      var inc = KanColle_Expedition_IncomeBase.getIncomeBase(er.netIncome);
      var hourly = function (v) {
          return Data_Int.toNumber(v) / minToHour(er.time);
      };
      return {
          eId: er.eId,
          result: [ hourly(inc.fuel), hourly(inc.ammo), hourly(inc.steel), hourly(inc.bauxite), er.score ]
      };
  };
  var evalNetIncomeWithAfkMinutesJS$prime = function (sEvalCost) {
      return function (penalty) {
          return function (afkMinutes) {
              return Data_Functor.map(Data_Functor.functorArray)(evalResultToJS)(sortWithAfkTime(simpleEvalCost(Data_Function_Uncurried.runFn4(sEvalCost)))(penalty)(afkMinutes));
          };
      };
  };
  var evalNetIncomeWithAfkMinutesJS = Data_Function_Uncurried.mkFn3(evalNetIncomeWithAfkMinutesJS$prime);
  var evalNetIncomeHourlyJS = function (sEvalCost) {
      return Data_Functor.map(Data_Functor.functorArray)(evalResultToJS)(sortByHourlyGain(simpleEvalCost(Data_Function_Uncurried.runFn4(sEvalCost))));
  };
  exports["evalNetIncomeHourlyJS"] = evalNetIncomeHourlyJS;
  exports["evalNetIncomeWithAfkMinutesJS"] = evalNetIncomeWithAfkMinutesJS;
  exports["evalNetIncomeWithAfkMinutesJS'"] = evalNetIncomeWithAfkMinutesJS$prime;
  exports["evalResultToJS"] = evalResultToJS;
  exports["incomeDiff"] = incomeDiff;
  exports["minToHour"] = minToHour;
  exports["nToFloor"] = nToFloor;
  exports["ordMax"] = ordMax;
  exports["showEvalResult"] = showEvalResult;
  exports["simpleEvalCost"] = simpleEvalCost;
  exports["sortByHourlyGain"] = sortByHourlyGain;
  exports["sortWithAfkTime"] = sortWithAfkTime;
})(PS["KanColle.Expedition.Evaluate"] = PS["KanColle.Expedition.Evaluate"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var KanColle_Expedition_IncomeBase = PS["KanColle.Expedition.IncomeBase"];
  var Data_Int = PS["Data.Int"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var GrossIncome = function (x) {
      return x;
  };
  var withFactorToGrossIncome = function (f) {
      return function (b) {
          var normLandingCraft = (function () {
              var $4 = f.landingCraft >= 4;
              if ($4) {
                  return 4;
              };
              if (!$4) {
                  return f.landingCraft;
              };
              throw new Error("Failed pattern match at KanColle.Expedition.GrossIncome line 42, column 9 - line 44, column 30: " + [ $4.constructor.name ]);
          })();
          var lcFactor = 1.0 + Data_Int.toNumber(normLandingCraft) * 5.0e-2;
          var ib = KanColle_Expedition_IncomeBase.getIncomeBase(b);
          var gsFactor = (function () {
              if (f.greatSuccess) {
                  return 1.5;
              };
              if (!f.greatSuccess) {
                  return 1.0;
              };
              throw new Error("Failed pattern match at KanColle.Expedition.GrossIncome line 46, column 16 - line 47, column 5: " + [ f.greatSuccess.constructor.name ]);
          })();
          var modify = function ($8) {
              return (function ($9) {
                  return Data_Int.floor((function (v) {
                      return v * gsFactor;
                  })($9));
              })((function (v) {
                  return v * lcFactor;
              })(Data_Int.toNumber($8)));
          };
          return KanColle_Expedition_Base.mapResourceRows(modify)(ib);
      };
  };
  var showGrossIncome = function (v) {
      return "GrossIncome (" + (Data_Show.show(Data_Show.showInt)(v.fuel) + (", " + (Data_Show.show(Data_Show.showInt)(v.ammo) + (", " + (Data_Show.show(Data_Show.showInt)(v.steel) + (", " + (Data_Show.show(Data_Show.showInt)(v.bauxite) + ")")))))));
  };
  var getGrossIncome = function (v) {
      return v;
  };
  var defaultFactor = {
      greatSuccess: false,
      landingCraft: 0
  };
  var toGrossIncome = withFactorToGrossIncome(defaultFactor);
  exports["getGrossIncome"] = getGrossIncome;
  exports["showGrossIncome"] = showGrossIncome;
  exports["toGrossIncome"] = toGrossIncome;
  exports["withFactorToGrossIncome"] = withFactorToGrossIncome;
})(PS["KanColle.Expedition.GrossIncome"] = PS["KanColle.Expedition.GrossIncome"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_Util = PS["KanColle.Util"];
  var KanColle_Expedition_Evaluate = PS["KanColle.Expedition.Evaluate"];
  var KanColle_Expedition_IncomeBase = PS["KanColle.Expedition.IncomeBase"];
  var KanColle_Expedition_Cost = PS["KanColle.Expedition.Cost"];
  var KanColle_Expedition_Minimal = PS["KanColle.Expedition.Minimal"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Int = PS["Data.Int"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var showNetIncome = function (ni) {
      var i = KanColle_Expedition_IncomeBase.getIncomeBase(ni.netIncome);
      return Data_String.joinWith(" | ")([ Data_Show.show(Data_Show.showInt)(ni.eId), Data_Show.show(Data_Show.showInt)(i.fuel), Data_Show.show(Data_Show.showInt)(i.ammo), Data_Show.show(Data_Show.showInt)(i.steel), Data_Show.show(Data_Show.showInt)(i.bauxite) ]);
  };
  var showNetHourlyIncome = function (ni) {
      var s = function (x) {
          return Data_Maybe.fromMaybe("ERR")(KanColle_Util.toFixed(3)(x));
      };
      return Data_String.joinWith(" | ")([ Data_Show.show(Data_Show.showInt)(ni.eId), s(ni.hourly.fuel), s(ni.hourly.ammo), s(ni.hourly.steel), s(ni.hourly.bauxite) ]);
  };
  var netIncomeTable = (function () {
      var collectInfo = function (eId) {
          var minCost = KanColle_Expedition_Minimal.getExpeditionMinCost(eId);
          var eIncome = KanColle_Expedition_IncomeBase.getExpeditionIncomeBase(eId);
          var cost = KanColle_Expedition_Cost.getExpeditionCost(eId);
          var netIncome = KanColle_Expedition_Evaluate.incomeDiff(cost)(eIncome)(minCost);
          return {
              eId: eId,
              netIncome: netIncome
          };
      };
      return Data_Functor.map(Data_Functor.functorArray)(collectInfo)(KanColle_Expedition_Base.allExpeditionIds);
  })();
  var netIncomeWithAfkTime = function (atime) {
      var transform = function (ni) {
          var totalTime = KanColle_Expedition_Evaluate.ordMax(Data_Ord.ordInt)((KanColle_Expedition_Cost.getExpeditionCost(ni.eId)).time)(atime);
          var t = function (resource) {
              return Data_Int.toNumber(resource) / (Data_Int.toNumber(totalTime) / 60.0);
          };
          var i = KanColle_Expedition_IncomeBase.getIncomeBase(ni.netIncome);
          return {
              eId: ni.eId,
              hourly: {
                  fuel: t(i.fuel),
                  ammo: t(i.ammo),
                  steel: t(i.steel),
                  bauxite: t(i.bauxite)
              }
          };
      };
      return Data_Functor.map(Data_Functor.functorArray)(transform)(netIncomeTable);
  };
  var mergeHNetIncome = function (dictFunctor) {
      return function (dictFoldable) {
          return function (xs) {
              return {
                  eIds: Data_Foldable.foldMap(dictFoldable)(Data_Monoid.monoidArray)(function (x) {
                      return [ x.eId ];
                  })(xs),
                  hourly: {
                      fuel: Data_Foldable.sum(dictFoldable)(Data_Semiring.semiringNumber)(Data_Functor.map(dictFunctor)(function (x) {
                          return x.hourly.fuel;
                      })(xs)),
                      ammo: Data_Foldable.sum(dictFoldable)(Data_Semiring.semiringNumber)(Data_Functor.map(dictFunctor)(function (x) {
                          return x.hourly.ammo;
                      })(xs)),
                      steel: Data_Foldable.sum(dictFoldable)(Data_Semiring.semiringNumber)(Data_Functor.map(dictFunctor)(function (x) {
                          return x.hourly.steel;
                      })(xs)),
                      bauxite: Data_Foldable.sum(dictFoldable)(Data_Semiring.semiringNumber)(Data_Functor.map(dictFunctor)(function (x) {
                          return x.hourly.bauxite;
                      })(xs))
                  }
              };
          };
      };
  };
  exports["mergeHNetIncome"] = mergeHNetIncome;
  exports["netIncomeTable"] = netIncomeTable;
  exports["netIncomeWithAfkTime"] = netIncomeWithAfkTime;
  exports["showNetHourlyIncome"] = showNetHourlyIncome;
  exports["showNetIncome"] = showNetIncome;
})(PS["KanColle.Expedition.NetIncome"] = PS["KanColle.Expedition.NetIncome"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_SType = PS["KanColle.SType"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var KanColle_Generated_SType = PS["KanColle.Generated.SType"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var DD = (function () {
      function DD() {

      };
      DD.value = new DD();
      return DD;
  })();
  var CL = (function () {
      function CL() {

      };
      CL.value = new CL();
      return CL;
  })();
  var CVLike = (function () {
      function CVLike() {

      };
      CVLike.value = new CVLike();
      return CVLike;
  })();
  var SSLike = (function () {
      function SSLike() {

      };
      SSLike.value = new SSLike();
      return SSLike;
  })();
  var CA = (function () {
      function CA() {

      };
      CA.value = new CA();
      return CA;
  })();
  var BBV = (function () {
      function BBV() {

      };
      BBV.value = new BBV();
      return BBV;
  })();
  var AS = (function () {
      function AS() {

      };
      AS.value = new AS();
      return AS;
  })();
  var CT = (function () {
      function CT() {

      };
      CT.value = new CT();
      return CT;
  })();
  var AV = (function () {
      function AV() {

      };
      AV.value = new AV();
      return AV;
  })();
  var matchSType = function (s) {
      return function (ks) {
          if (s instanceof DD) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.DD.value);
          };
          if (s instanceof CL) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.CL.value);
          };
          if (s instanceof CVLike) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.CV.value) || (Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.CVL.value) || (Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.AV.value) || Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.CVB.value)));
          };
          if (s instanceof SSLike) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.SS.value) || Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.SSV.value);
          };
          if (s instanceof CA) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.CA.value);
          };
          if (s instanceof BBV) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.BBV.value);
          };
          if (s instanceof AS) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.AS.value);
          };
          if (s instanceof CT) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.CT.value);
          };
          if (s instanceof AV) {
              return Data_Eq.eq(KanColle_Generated_SType.eqSType)(ks)(KanColle_Generated_SType.AV.value);
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.SType line 25, column 19 - line 40, column 19: " + [ s.constructor.name ]);
      };
  };
  var eqSType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof DD && y instanceof DD) {
              return true;
          };
          if (x instanceof CL && y instanceof CL) {
              return true;
          };
          if (x instanceof CVLike && y instanceof CVLike) {
              return true;
          };
          if (x instanceof SSLike && y instanceof SSLike) {
              return true;
          };
          if (x instanceof CA && y instanceof CA) {
              return true;
          };
          if (x instanceof BBV && y instanceof BBV) {
              return true;
          };
          if (x instanceof AS && y instanceof AS) {
              return true;
          };
          if (x instanceof CT && y instanceof CT) {
              return true;
          };
          if (x instanceof AV && y instanceof AV) {
              return true;
          };
          return false;
      };
  });
  var ordSType = new Data_Ord.Ord(function () {
      return eqSType;
  }, function (x) {
      return function (y) {
          if (x instanceof DD && y instanceof DD) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof DD) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof DD) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CL && y instanceof CL) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CL) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CL) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CVLike && y instanceof CVLike) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CVLike) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CVLike) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SSLike && y instanceof SSLike) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SSLike) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SSLike) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CA && y instanceof CA) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CA) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CA) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof BBV && y instanceof BBV) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof BBV) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof BBV) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AS && y instanceof AS) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof AS) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof AS) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CT && y instanceof CT) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CT) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CT) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AV && y instanceof AV) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.SType line 22, column 1 - line 22, column 38: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  exports["DD"] = DD;
  exports["CL"] = CL;
  exports["CVLike"] = CVLike;
  exports["SSLike"] = SSLike;
  exports["CA"] = CA;
  exports["BBV"] = BBV;
  exports["AS"] = AS;
  exports["CT"] = CT;
  exports["AV"] = AV;
  exports["matchSType"] = matchSType;
  exports["eqSType"] = eqSType;
  exports["ordSType"] = ordSType;
})(PS["KanColle.Expedition.New.SType"] = PS["KanColle.Expedition.New.SType"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Bucket = (function () {
      function Bucket() {

      };
      Bucket.value = new Bucket();
      return Bucket;
  })();
  var Flamethrower = (function () {
      function Flamethrower() {

      };
      Flamethrower.value = new Flamethrower();
      return Flamethrower;
  })();
  var DevMat = (function () {
      function DevMat() {

      };
      DevMat.value = new DevMat();
      return DevMat;
  })();
  var FCoinSmall = (function () {
      function FCoinSmall() {

      };
      FCoinSmall.value = new FCoinSmall();
      return FCoinSmall;
  })();
  var FCoinMedium = (function () {
      function FCoinMedium() {

      };
      FCoinMedium.value = new FCoinMedium();
      return FCoinMedium;
  })();
  var FCoinLarge = (function () {
      function FCoinLarge() {

      };
      FCoinLarge.value = new FCoinLarge();
      return FCoinLarge;
  })();
  var Other = (function () {
      function Other(value0) {
          this.value0 = value0;
      };
      Other.create = function (value0) {
          return new Other(value0);
      };
      return Other;
  })();
  var itemFromInt = function (v) {
      if (v === 1) {
          return Bucket.value;
      };
      if (v === 2) {
          return Flamethrower.value;
      };
      if (v === 3) {
          return DevMat.value;
      };
      if (v === 10) {
          return FCoinSmall.value;
      };
      if (v === 11) {
          return FCoinMedium.value;
      };
      if (v === 12) {
          return FCoinLarge.value;
      };
      return new Other(v);
  };
  exports["Bucket"] = Bucket;
  exports["Flamethrower"] = Flamethrower;
  exports["DevMat"] = DevMat;
  exports["FCoinSmall"] = FCoinSmall;
  exports["FCoinMedium"] = FCoinMedium;
  exports["FCoinLarge"] = FCoinLarge;
  exports["Other"] = Other;
  exports["itemFromInt"] = itemFromInt;
})(PS["KanColle.Expedition.New.Item"] = PS["KanColle.Expedition.New.Item"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];
  var KanColle_Expedition_New_SType = PS["KanColle.Expedition.New.SType"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var KanColle_Expedition_New_Item = PS["KanColle.Expedition.New.Item"];
  var Rsc = function (x) {
      return x;
  };
  var MCost = function (x) {
      return x;
  };
  var FNI = function (x) {
      return x;
  };
  var FACost = function (x) {
      return x;
  };
  var ACost = function (x) {
      return x;
  };
  var mkMC = function (fuel) {
      return function (ammo) {
          return {
              fuel: fuel,
              ammo: ammo
          };
      };
  };
  exports["ACost"] = ACost;
  exports["FACost"] = FACost;
  exports["FNI"] = FNI;
  exports["MCost"] = MCost;
  exports["Rsc"] = Rsc;
  exports["mkMC"] = mkMC;
})(PS["KanColle.Expedition.New.Types"] = PS["KanColle.Expedition.New.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  var Data_Array = PS["Data.Array"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var EA = function (x) {
      return x;
  };
  var unEA = function (v) {
      return v;
  };
  var pureEA = function ($42) {
      return EA(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(40)($42));
  };
  var mkEA = function (xs) {
      if (Data_Array.length(xs) === 45) {
          return xs;
      };
      if (Data_Boolean.otherwise) {
          return Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Partial.crash(dictPartial)("expecting exactly 45 elements");
          });
      };
      throw new Error("Failed pattern match at KanColle.Expedition.New.EArray line 26, column 1 - line 28, column 72: " + [ xs.constructor.name ]);
  };
  var indEA = function (v) {
      return function (i) {
          if (1 <= i && i <= 40) {
              return Partial_Unsafe.unsafePartial(function (dictPartial) {
                  return v[i - 1];
              });
          };
          if (1 <= 100 && i <= 120) {
              return Partial_Unsafe.unsafePartial(function (dictPartial) {
                  return v[i - 60];
              });
          };
          if (Data_Boolean.otherwise) {
              return Partial_Unsafe.unsafePartial(function (dictPartial) {
                  return Partial.crash(dictPartial)("index out of range");
              });
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.EArray line 31, column 1 - line 33, column 61: " + [ v.constructor.name, i.constructor.name ]);
      };
  };
  var functorEArray = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Functor.map(Data_Functor.functorArray)(f)(v);
      };
  });
  var foldableEArray = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              return Data_Foldable.foldMap(Data_Foldable.foldableArray)(dictMonoid)(f)(v);
          };
      };
  }, function (f) {
      return function (z) {
          return function (v) {
              return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(v);
          };
      };
  }, function (f) {
      return function (z) {
          return function (v) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(v);
          };
      };
  });
  var traversableEArray = new Data_Traversable.Traversable(function () {
      return foldableEArray;
  }, function () {
      return functorEArray;
  }, function (dictApplicative) {
      return function (v) {
          return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(EA)(Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)(v));
      };
  }, function (dictApplicative) {
      return function (f) {
          return function (v) {
              return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(EA)(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(f)(v));
          };
      };
  });
  var extractEA = function (v) {
      return function (v1) {
          return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(Data_Array.filter(Data_Tuple.fst)(Data_Array.zip(v)(v1)));
      };
  };
  var appEA = function (v) {
      return function (v1) {
          return Data_Array.zipWith(Data_Function.apply)(v)(v1);
      };
  };
  var applyEArray = new Control_Apply.Apply(function () {
      return functorEArray;
  }, appEA);
  var applicativeEArray = new Control_Applicative.Applicative(function () {
      return applyEArray;
  }, pureEA);
  var allExpeds = Data_Array.range(1)(40);
  var imapEA = function (f) {
      return function (v) {
          return Data_Array.zipWith(f)(allExpeds)(v);
      };
  };
  exports["extractEA"] = extractEA;
  exports["imapEA"] = imapEA;
  exports["indEA"] = indEA;
  exports["mkEA"] = mkEA;
  exports["unEA"] = unEA;
  exports["functorEArray"] = functorEArray;
  exports["applyEArray"] = applyEArray;
  exports["applicativeEArray"] = applicativeEArray;
  exports["foldableEArray"] = foldableEArray;
  exports["traversableEArray"] = traversableEArray;
})(PS["KanColle.Expedition.New.EArray"] = PS["KanColle.Expedition.New.EArray"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var KanColle_Expedition_New_Types = PS["KanColle.Expedition.New.Types"];
  var KanColle_Expedition_New_EArray = PS["KanColle.Expedition.New.EArray"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Array = PS["Data.Array"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ring = PS["Data.Ring"];
  var KanColle_Expedition_New_SType = PS["KanColle.Expedition.New.SType"];
  var Data_Functor = PS["Data.Functor"];
  var minimumCompositions = (function () {
      var sty = function (n) {
          return function (st) {
              return Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(new Data_Maybe.Just(st));
          };
      };
      var atLeast = function (n) {
          return function (compo) {
              var $0 = Data_Array.length(compo) < n;
              if ($0) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(compo)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - Data_Array.length(compo))(Data_Maybe.Nothing.value));
              };
              if (!$0) {
                  return compo;
              };
              throw new Error("Failed pattern match at KanColle.Expedition.New.MinCompo line 119, column 23 - line 121, column 19: " + [ $0.constructor.name ]);
          };
      };
      var full = atLeast(6);
      return KanColle_Expedition_New_EArray.mkEA([ atLeast(2)([  ]), atLeast(4)([  ]), atLeast(3)([  ]), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(2)(KanColle_Expedition_New_SType.DD.value)), atLeast(4)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(2)(KanColle_Expedition_New_SType.DD.value))), atLeast(4)([  ]), full([  ]), full([  ]), atLeast(4)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(2)(KanColle_Expedition_New_SType.DD.value))), atLeast(3)(sty(2)(KanColle_Expedition_New_SType.CL.value)), atLeast(4)(sty(2)(KanColle_Expedition_New_SType.DD.value)), atLeast(4)(sty(2)(KanColle_Expedition_New_SType.DD.value)), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(4)(KanColle_Expedition_New_SType.DD.value))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(3)(KanColle_Expedition_New_SType.DD.value))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Expedition_New_SType.CVLike.value))(sty(2)(KanColle_Expedition_New_SType.DD.value))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(2)(KanColle_Expedition_New_SType.DD.value))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(3)(KanColle_Expedition_New_SType.DD.value))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(3)(KanColle_Expedition_New_SType.CVLike.value))(sty(2)(KanColle_Expedition_New_SType.DD.value))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Expedition_New_SType.BBV.value))(sty(2)(KanColle_Expedition_New_SType.DD.value))), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.SSLike.value))(sty(1)(KanColle_Expedition_New_SType.CL.value)), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(4)(KanColle_Expedition_New_SType.DD.value)), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CA.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(2)(KanColle_Expedition_New_SType.DD.value)))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Expedition_New_SType.BBV.value))(sty(2)(KanColle_Expedition_New_SType.DD.value))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(4)(KanColle_Expedition_New_SType.DD.value))), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Expedition_New_SType.CA.value))(sty(2)(KanColle_Expedition_New_SType.DD.value)), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CVLike.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(2)(KanColle_Expedition_New_SType.DD.value))), sty(2)(KanColle_Expedition_New_SType.SSLike.value), sty(3)(KanColle_Expedition_New_SType.SSLike.value), sty(3)(KanColle_Expedition_New_SType.SSLike.value), sty(4)(KanColle_Expedition_New_SType.SSLike.value), sty(4)(KanColle_Expedition_New_SType.SSLike.value), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CT.value))(sty(2)(KanColle_Expedition_New_SType.DD.value)), sty(2)(KanColle_Expedition_New_SType.DD.value), sty(2)(KanColle_Expedition_New_SType.DD.value), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Expedition_New_SType.CVLike.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CA.value))(sty(1)(KanColle_Expedition_New_SType.DD.value)))), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Expedition_New_SType.AV.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(1)(KanColle_Expedition_New_SType.DD.value)))), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(sty(5)(KanColle_Expedition_New_SType.DD.value)), full(sty(5)(KanColle_Expedition_New_SType.DD.value)), Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.AS.value))(sty(4)(KanColle_Expedition_New_SType.SSLike.value)), full(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(1)(KanColle_Expedition_New_SType.CL.value))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(sty(2)(KanColle_Expedition_New_SType.AV.value))(sty(2)(KanColle_Expedition_New_SType.DD.value)))),
        atLeast(4)([  ]), atLeast(4)([  ]), atLeast(5)([  ]), atLeast(6)([  ]), atLeast(6)([  ]) ]);
  })();
  var getMinimumComposition = KanColle_Expedition_New_EArray.indEA(minimumCompositions);
  var concretizeComposition = function (expectCount) {
      return function (wildcard) {
          return function (mfc) {
              var concretize = Data_Maybe.fromMaybe(wildcard);
              var atLeast = function (n) {
                  return function (compo) {
                      var $1 = Data_Array.length(compo) < n;
                      if ($1) {
                          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(compo)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - Data_Array.length(compo))(Data_Maybe.Nothing.value));
                      };
                      if (!$1) {
                          return compo;
                      };
                      throw new Error("Failed pattern match at KanColle.Expedition.New.MinCompo line 22, column 23 - line 24, column 19: " + [ $1.constructor.name ]);
                  };
              };
              return Data_Functor.map(Data_Functor.functorArray)(concretize)(atLeast(expectCount)(mfc));
          };
      };
  };
  exports["concretizeComposition"] = concretizeComposition;
  exports["getMinimumComposition"] = getMinimumComposition;
})(PS["KanColle.Expedition.New.MinCompo"] = PS["KanColle.Expedition.New.MinCompo"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_Expedition_New_Types = PS["KanColle.Expedition.New.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Int = PS["Data.Int"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ring = PS["Data.Ring"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var KanColle_Expedition_New_SType = PS["KanColle.Expedition.New.SType"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];
  var takeOrFail = function (n) {
      return function (xs) {
          if (n <= Data_Array.length(xs)) {
              return new Data_Maybe.Just(Data_Array.take(n)(xs));
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.CostModel line 42, column 1 - line 44, column 24: " + [ n.constructor.name, xs.constructor.name ]);
      };
  };
  var normalCostModel = function (stype) {
      var ssLikeCost = function (n) {
          if (n <= 1) {
              return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(10)(10)));
          };
          if (n <= 6) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(ssLikeCost(1))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - 1)(KanColle_Expedition_New_Types.mkMC(10)(20))));
              });
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.CostModel line 50, column 1 - line 146, column 21: " + [ n.constructor.name ]);
      };
      var ddCost = function (n) {
          return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(15)(15)));
      };
      var cvlLikeCost = function (n) {
          if (n <= 1) {
              return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(30)(30)));
          };
          if (n <= 2) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(cvlLikeCost(1))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - 1)(KanColle_Expedition_New_Types.mkMC(35)(40))));
              });
          };
          if (n <= 4) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(cvlLikeCost(2))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - 2)(KanColle_Expedition_New_Types.mkMC(35)(45))));
              });
          };
          if (n <= 6) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(cvlLikeCost(4))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - 4)(KanColle_Expedition_New_Types.mkMC(40)(40))));
              });
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.CostModel line 50, column 1 - line 146, column 21: " + [ n.constructor.name ]);
      };
      var ctCost = function (n) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(n <= 2))(function () {
              return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(35)(20)));
          });
      };
      var clCost = function (n) {
          if (n <= 2) {
              return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(25)(25)));
          };
          if (n <= 6) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(clCost(2))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - 2)(KanColle_Expedition_New_Types.mkMC(25)(30))));
              });
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.CostModel line 50, column 1 - line 146, column 21: " + [ n.constructor.name ]);
      };
      var caCost = function (n) {
          if (n <= 1) {
              return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(35)(55)));
          };
          if (n <= 4) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(caCost(1))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - 1)(KanColle_Expedition_New_Types.mkMC(35)(65))));
              });
          };
          if (n <= 6) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(caCost(4))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - 4)(KanColle_Expedition_New_Types.mkMC(40)(70))));
              });
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.CostModel line 50, column 1 - line 146, column 21: " + [ n.constructor.name ]);
      };
      var bbvCost = function (n) {
          if (n <= 2) {
              return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(95)(105)));
          };
          if (n <= 4) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(bbvCost(2))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n - 2)(KanColle_Expedition_New_Types.mkMC(105)(140))));
              });
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.CostModel line 50, column 1 - line 146, column 21: " + [ n.constructor.name ]);
      };
      var avCost = function (n) {
          if (n <= 2) {
              return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(35)(45)));
          };
          if (n <= 3) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(avCost(2))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ KanColle_Expedition_New_Types.mkMC(40)(45) ]));
              });
          };
          if (n <= 4) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(avCost(3))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ KanColle_Expedition_New_Types.mkMC(40)(50) ]));
              });
          };
          if (n <= 5) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(avCost(4))(function (v) {
                  return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ KanColle_Expedition_New_Types.mkMC(60)(15) ]));
              });
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.CostModel line 50, column 1 - line 146, column 21: " + [ n.constructor.name ]);
      };
      var asCost = function (n) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(n <= 1))(function () {
              return new Data_Maybe.Just(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)(KanColle_Expedition_New_Types.mkMC(35)(10)));
          });
      };
      if (stype instanceof KanColle_Expedition_New_SType.DD) {
          return ddCost;
      };
      if (stype instanceof KanColle_Expedition_New_SType.CL) {
          return clCost;
      };
      if (stype instanceof KanColle_Expedition_New_SType.CVLike) {
          return cvlLikeCost;
      };
      if (stype instanceof KanColle_Expedition_New_SType.SSLike) {
          return ssLikeCost;
      };
      if (stype instanceof KanColle_Expedition_New_SType.CA) {
          return caCost;
      };
      if (stype instanceof KanColle_Expedition_New_SType.BBV) {
          return bbvCost;
      };
      if (stype instanceof KanColle_Expedition_New_SType.AS) {
          return asCost;
      };
      if (stype instanceof KanColle_Expedition_New_SType.CT) {
          return ctCost;
      };
      if (stype instanceof KanColle_Expedition_New_SType.AV) {
          return avCost;
      };
      throw new Error("Failed pattern match at KanColle.Expedition.New.CostModel line 50, column 25 - line 59, column 17: " + [ stype.constructor.name ]);
  };
  var calcFleetMaxCost = function (cm) {
      return function (fcAr) {
          var fc = Data_Map.fromFoldableWith(KanColle_Expedition_New_SType.ordSType)(Data_Foldable.foldableArray)(Data_Semiring.add(Data_Semiring.semiringInt))(Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return new Data_Tuple.Tuple(x, 1);
          })(fcAr));
          var compos = Data_Functor.map(Data_List_Types.functorList)(function (v) {
              return cm(v.value0)(v.value1);
          })(Data_Map.toList(fc));
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidArray))(Data_Traversable.sequence(Data_List_Types.traversableList)(Data_Maybe.applicativeMaybe)(compos));
      };
  };
  var calcActualCost = function (v) {
      return function (info) {
          return {
              fuel: Data_Int.floor(info.fuelCostPercent * Data_Int.toNumber(v.fuel)),
              ammo: Data_Int.floor(info.ammoCostPercent * Data_Int.toNumber(v.ammo))
          };
      };
  };
  var calcFleetActualCost = function (fmc) {
      return function (info) {
          var z = {
              fuel: 0,
              ammo: 0
          };
          var merge = function (acc) {
              return function (mc) {
                  var $38 = calcActualCost(mc)(info);
                  return {
                      fuel: acc.fuel + $38.fuel | 0,
                      ammo: acc.ammo + $38.ammo | 0
                  };
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(merge)(z)(fmc);
      };
  };
  exports["calcActualCost"] = calcActualCost;
  exports["calcFleetActualCost"] = calcFleetActualCost;
  exports["calcFleetMaxCost"] = calcFleetMaxCost;
  exports["normalCostModel"] = normalCostModel;
})(PS["KanColle.Expedition.New.CostModel"] = PS["KanColle.Expedition.New.CostModel"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_Expedition_New_Types = PS["KanColle.Expedition.New.Types"];
  var Data_Ring = PS["Data.Ring"];
  var calcFleetNetIncome = function (v) {
      return function (v1) {
          return {
              fuel: v.fuel - v1.fuel,
              ammo: v.ammo - v1.ammo,
              steel: v.steel,
              bauxite: v.bauxite
          };
      };
  };
  exports["calcFleetNetIncome"] = calcFleetNetIncome;
})(PS["KanColle.Expedition.New.NetIncome"] = PS["KanColle.Expedition.New.NetIncome"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var KanColle_Expedition_New_EArray = PS["KanColle.Expedition.New.EArray"];
  var KanColle_Expedition_New_Types = PS["KanColle.Expedition.New.Types"];
  var resources = (function () {
      var i = function (f) {
          return function (a) {
              return function (s) {
                  return function (b) {
                      return {
                          fuel: f,
                          ammo: a,
                          steel: s,
                          bauxite: b
                      };
                  };
              };
          };
      };
      return KanColle_Expedition_New_EArray.mkEA([ i(0)(30)(0)(0), i(0)(100)(30)(0), i(30)(30)(40)(0), i(0)(60)(0)(0), i(200)(200)(20)(20), i(0)(0)(0)(80), i(0)(0)(50)(30), i(50)(100)(50)(50), i(350)(0)(0)(0), i(0)(50)(0)(30), i(0)(0)(0)(250), i(50)(250)(200)(50), i(240)(300)(0)(0), i(0)(240)(200)(0), i(0)(0)(300)(400), i(500)(500)(200)(200), i(70)(70)(50)(0), i(0)(0)(300)(100), i(400)(0)(50)(30), i(0)(0)(150)(0), i(320)(270)(0)(0), i(0)(10)(0)(0), i(0)(20)(0)(100), i(500)(0)(0)(150), i(900)(0)(500)(0), i(0)(0)(0)(900), i(0)(0)(800)(0), i(0)(0)(900)(350), i(0)(0)(0)(100), i(0)(0)(0)(100), i(0)(30)(0)(0), i(50)(50)(50)(50), i(0)(0)(0)(0), i(0)(0)(0)(0), i(0)(0)(240)(280), i(480)(0)(200)(200), i(0)(380)(270)(0), i(420)(0)(200)(0), i(0)(0)(300)(0), i(300)(300)(0)(100),
        i(45)(45)(0)(0), i(70)(40)(0)(10), i(120)(0)(60)(60), i(0)(0)(10)(30), i(300)(200)(100)(0) ]);
  })();
  var getResource = KanColle_Expedition_New_EArray.indEA(resources);
  exports["getResource"] = getResource;
  exports["resources"] = resources;
})(PS["KanColle.Expedition.New.Resource"] = PS["KanColle.Expedition.New.Resource"] || {});
(function(exports) {
    "use strict";

  // module KanColle.Expedition.New.Info

  exports.kcExpeditionRaw =
      [
          {
              "api_id":1,
              "api_time":15,
              "api_use_fuel":0.3,
              "api_use_bull":0,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":2,
              "api_time":30,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[1,1],
              "api_win_item2":[0,0]
          },
          {
              "api_id":3,
              "api_time":20,
              "api_use_fuel":0.3,
              "api_use_bull":0.2,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":4,
              "api_time":50,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[1,1],
              "api_win_item2":[10,1]
          },
          {
              "api_id":5,
              "api_time":90,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":6,
              "api_time":40,
              "api_use_fuel":0.3,
              "api_use_bull":0.2,
              "api_win_item1":[10,1],
              "api_win_item2":[0,0]
          },
          {
              "api_id":7,
              "api_time":60,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[2,1],
              "api_win_item2":[0,0]
          },
          {
              "api_id":8,
              "api_time":180,
              "api_use_fuel":0.5,
              "api_use_bull":0.2,
              "api_win_item1":[2,2],
              "api_win_item2":[3,1]
          },
          {
              "api_id":9,
              "api_time":240,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[10,1],
              "api_win_item2":[1,2]
          },
          {
              "api_id":10,
              "api_time":90,
              "api_use_fuel":0.3,
              "api_use_bull":0,
              "api_win_item1":[1,1],
              "api_win_item2":[2,1]
          },
          {
              "api_id":11,
              "api_time":300,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[10,1],
              "api_win_item2":[1,1]
          },
          {
              "api_id":12,
              "api_time":480,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[11,1],
              "api_win_item2":[3,1]
          },
          {
              "api_id":13,
              "api_time":240,
              "api_use_fuel":0.5,
              "api_use_bull":0.4,
              "api_win_item1":[1,2],
              "api_win_item2":[10,1]
          },
          {
              "api_id":14,
              "api_time":360,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[1,1],
              "api_win_item2":[3,1]
          },
          {
              "api_id":15,
              "api_time":720,
              "api_use_fuel":0.5,
              "api_use_bull":0.4,
              "api_win_item1":[12,1],
              "api_win_item2":[3,1]
          },
          {
              "api_id":16,
              "api_time":900,
              "api_use_fuel":0.5,
              "api_use_bull":0.4,
              "api_win_item1":[2,2],
              "api_win_item2":[3,2]
          },
          {
              "api_id":17,
              "api_time":45,
              "api_use_fuel":0.3,
              "api_use_bull":0.4,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":18,
              "api_time":300,
              "api_use_fuel":0.5,
              "api_use_bull":0.2,
              "api_win_item1":[1,1],
              "api_win_item2":[0,0]
          },
          {
              "api_id":19,
              "api_time":360,
              "api_use_fuel":0.5,
              "api_use_bull":0.4,
              "api_win_item1":[10,1],
              "api_win_item2":[3,1]
          },
          {
              "api_id":20,
              "api_time":120,
              "api_use_fuel":0.5,
              "api_use_bull":0.4,
              "api_win_item1":[3,1],
              "api_win_item2":[10,1]
          },
          {
              "api_id":21,
              "api_time":140,
              "api_use_fuel":0.8,
              "api_use_bull":0.7,
              "api_win_item1":[10,1],
              "api_win_item2":[0,0]
          },
          {
              "api_id":22,
              "api_time":180,
              "api_use_fuel":0.8,
              "api_use_bull":0.7,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":23,
              "api_time":240,
              "api_use_fuel":0.8,
              "api_use_bull":0.8,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":24,
              "api_time":500,
              "api_use_fuel":0.9,
              "api_use_bull":0.6,
              "api_win_item1":[3,2],
              "api_win_item2":[1,1]
          },
          {
              "api_id":25,
              "api_time":2400,
              "api_use_fuel":0.5,
              "api_use_bull":0.8,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":26,
              "api_time":4800,
              "api_use_fuel":0.8,
              "api_use_bull":0.8,
              "api_win_item1":[1,3],
              "api_win_item2":[0,0]
          },
          {
              "api_id":27,
              "api_time":1200,
              "api_use_fuel":0.8,
              "api_use_bull":0.8,
              "api_win_item1":[3,1],
              "api_win_item2":[10,2]
          },
          {
              "api_id":28,
              "api_time":1500,
              "api_use_fuel":0.8,
              "api_use_bull":0.8,
              "api_win_item1":[3,2],
              "api_win_item2":[11,2]
          },
          {
              "api_id":29,
              "api_time":1440,
              "api_use_fuel":0.9,
              "api_use_bull":0.4,
              "api_win_item1":[3,1],
              "api_win_item2":[10,1]
          },
          {
              "api_id":30,
              "api_time":2880,
              "api_use_fuel":0.9,
              "api_use_bull":0.7,
              "api_win_item1":[3,3],
              "api_win_item2":[0,0]
          },
          {
              "api_id":31,
              "api_time":120,
              "api_use_fuel":0.5,
              "api_use_bull":0,
              "api_win_item1":[10,1],
              "api_win_item2":[0,0],
          },
          {
              "api_id":32,
              "api_time":1440,
              "api_use_fuel":0.9,
              "api_use_bull":0.3,
              "api_win_item1":[12,1],
              "api_win_item2":[3,3]
          },
          {
              "api_id":33,
              "api_time":15,
              "api_use_fuel":0.5,
              "api_use_bull":0.8,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":34,
              "api_time":30,
              "api_use_fuel":0.5,
              "api_use_bull":0.8,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":35,
              "api_time":420,
              "api_use_fuel":0.8,
              "api_use_bull":0.8,
              "api_win_item1":[10,2],
              "api_win_item2":[3,1]
          },
          {
              "api_id":36,
              "api_time":540,
              "api_use_fuel":0.8,
              "api_use_bull":0.8,
              "api_win_item1":[11,2],
              "api_win_item2":[1,1]
          },
          {
              "api_id":37,
              "api_time":165,
              "api_use_fuel":0.8,
              "api_use_bull":0.8,
              "api_win_item1":[10,1],
              "api_win_item2":[0,0]
          },
          {
              "api_id":38,
              "api_time":175,
              "api_use_fuel":0.8,
              "api_use_bull":0.8,
              "api_win_item1":[10,1],
              "api_win_item2":[0,0]
          },
          {
              "api_id":39,
              "api_time":1800,
              "api_use_fuel":0.9,
              "api_use_bull":0.9,
              "api_win_item1":[1,2],
              "api_win_item2":[11,1]
          },
          {
              "api_id":40,
              "api_time":410,
              "api_use_fuel":0.8,
              "api_use_bull":0.7,
              "api_win_item1":[10,3],
              "api_win_item2":[1,1]
          },
          {
              "api_id":100,
              "api_disp_no":"A1",
              "api_deck_num":4,
              "api_time":25,
              "api_use_fuel":0.35,
              "api_use_bull":0,
              "api_win_item1":[0,0],
              "api_win_item2":[0,0]
          },
          {
              "api_id":101,
              "api_disp_no":"A2",
              "api_deck_num":4,
              "api_time":55,
              "api_use_fuel":0.5,
              "api_use_bull":0.2,
              "api_win_item1":[3,1],
              "api_win_item2":[1,1]
          },
          {
              "api_id":102,
              "api_disp_no":"A3",
              "api_deck_num":5,
              "api_time":135,
              "api_use_fuel":0.65,
              "api_use_bull":0.35,
              "api_win_item1":[1,1],
              "api_win_item2":[3,2]
          },
          {
              "api_id":110,
              "api_disp_no":"B1",
              "api_deck_num":6,
              "api_time":35,
              "api_use_fuel":0.15,
              "api_use_bull":0.45,
              "api_win_item1":[10,1],
              "api_win_item2":[1,1]
          },
          {
              "api_id":111,
              "api_disp_no":"B2",
              "api_deck_num":6,
              "api_time":520,
              "api_use_fuel":0.65,
              "api_use_bull":0.8,
              "api_win_item1":[3,2],
              "api_win_item2":[1,2]
          }
      ];
})(PS["KanColle.Expedition.New.Info"] = PS["KanColle.Expedition.New.Info"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var $foreign = PS["KanColle.Expedition.New.Info"];
  var KanColle_Expedition_New_EArray = PS["KanColle.Expedition.New.EArray"];
  var KanColle_Expedition_New_Types = PS["KanColle.Expedition.New.Types"];
  var KanColle_Expedition_New_Resource = PS["KanColle.Expedition.New.Resource"];
  var Data_Array = PS["Data.Array"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var KanColle_Expedition_New_Item = PS["KanColle.Expedition.New.Item"];
  var Data_Functor = PS["Data.Functor"];
  var convertRawInfo = function (ri) {
      var convertRawItem = function (ar) {
          var $2 = Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Array.unsafeIndex(dictPartial);
          })(ar)(0);
          if ($2 === 0) {
              return Data_Maybe.Nothing.value;
          };
          return new Data_Maybe.Just({
              item: KanColle_Expedition_New_Item.itemFromInt($2),
              maxCount: Partial_Unsafe.unsafePartial(function (dictPartial) {
                  return Data_Array.unsafeIndex(dictPartial);
              })(ar)(1)
          });
      };
      return {
          id: ri.api_id,
          displayName: ri.api_disp_no || ri.api_id,
          shipCount: ri.api_deck_num,
          timeInMin: ri.api_time,
          fuelCostPercent: ri.api_use_fuel,
          ammoCostPercent: ri.api_use_bull,
          item1: convertRawItem(ri.api_win_item1),
          item2: convertRawItem(ri.api_win_item2),
          resource: KanColle_Expedition_New_Resource.getResource(ri.api_id)
      };
  };
  var expedInfoTable = KanColle_Expedition_New_EArray.mkEA(Data_Functor.map(Data_Functor.functorArray)(convertRawInfo)($foreign.kcExpeditionRaw));
  var getInformation = KanColle_Expedition_New_EArray.indEA(expedInfoTable);
  exports["expedInfoTable"] = expedInfoTable;
  exports["getInformation"] = getInformation;
})(PS["KanColle.Expedition.New.Info"] = PS["KanColle.Expedition.New.Info"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var KanColle_Expedition_New_Types = PS["KanColle.Expedition.New.Types"];
  var Data_Int = PS["Data.Int"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var resourceScorer = function (f) {
      return function (rph) {
          return function (v) {
              return f(rph);
          };
      };
  };
  var simpleResourceScorer = function (p) {
      var scorer = function (rph) {
          return rph.fuel * p.fuel + rph.ammo * p.ammo + rph.steel * p.steel + rph.bauxite * p.bauxite;
      };
      return resourceScorer(scorer);
  };
  var calcResourcePerHr = function (v) {
      return function (info) {
          return function (afkTimeInMin) {
              var t = Data_Ord.max(Data_Ord.ordInt)(afkTimeInMin)(info.timeInMin);
              var perHr = function (x) {
                  return Data_Int.toNumber(60 * x | 0) / Data_Int.toNumber(t);
              };
              return {
                  fuel: perHr(v.fuel),
                  ammo: perHr(v.ammo),
                  steel: perHr(v.steel),
                  bauxite: perHr(v.bauxite)
              };
          };
      };
  };
  exports["calcResourcePerHr"] = calcResourcePerHr;
  exports["resourceScorer"] = resourceScorer;
  exports["simpleResourceScorer"] = simpleResourceScorer;
})(PS["KanColle.Expedition.New.Scorer"] = PS["KanColle.Expedition.New.Scorer"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var KanColle_Expedition_New_Types = PS["KanColle.Expedition.New.Types"];
  var KanColle_Expedition_New_MinCompo = PS["KanColle.Expedition.New.MinCompo"];
  var KanColle_Expedition_New_CostModel = PS["KanColle.Expedition.New.CostModel"];
  var KanColle_Expedition_New_NetIncome = PS["KanColle.Expedition.New.NetIncome"];
  var KanColle_Expedition_New_Resource = PS["KanColle.Expedition.New.Resource"];
  var KanColle_Expedition_New_EArray = PS["KanColle.Expedition.New.EArray"];
  var KanColle_Expedition_New_Info = PS["KanColle.Expedition.New.Info"];
  var KanColle_Expedition_New_Scorer = PS["KanColle.Expedition.New.Scorer"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Data_Function = PS["Data.Function"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var KanColle_Util = PS["KanColle.Util"];
  var Data_Int = PS["Data.Int"];
  var Data_Semiring = PS["Data.Semiring"];
  var NormMod = function (x) {
      return x;
  };
  var DirectMod = function (x) {
      return x;
  };
  var Conf = (function () {
      function Conf(value0) {
          this.value0 = value0;
      };
      Conf.create = function (value0) {
          return new Conf(value0);
      };
      return Conf;
  })();
  var IncomeModifier = function (getModifier) {
      this.getModifier = getModifier;
  };
  var ResupplyCost = function (getResupplyCost) {
      this.getResupplyCost = getResupplyCost;
  };
  var normalIncomeModifier = new IncomeModifier(function (v) {
      var gs$prime = (function () {
          if (v.greatSuccess) {
              return 1.5;
          };
          if (!v.greatSuccess) {
              return 1.0;
          };
          throw new Error("Failed pattern match at KanColle.Expedition.New.Config line 47, column 14 - line 49, column 1: " + [ v.greatSuccess.constructor.name ]);
      })();
      return gs$prime * (1.0 + 2.0e-2 * Data_Int.toNumber(v.daihatsuCount));
  });
  var getResupplyCost = function (dict) {
      return dict.getResupplyCost;
  };
  var getModifier = function (dict) {
      return dict.getModifier;
  };
  var directIncomeModifier = new IncomeModifier(function (v) {
      return v;
  });
  exports["IncomeModifier"] = IncomeModifier;
  exports["getModifier"] = getModifier;
})(PS["KanColle.Expedition.New.Config"] = PS["KanColle.Expedition.New.Config"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Map = PS["Data.Map"];
  var KanColle_Expedition_New_SType = PS["KanColle.Expedition.New.SType"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var addReq = function (s) {
      return function (n) {
          var f = function ($1) {
              return Data_Maybe.Just.create(Data_Maybe.maybe(n)(function (v) {
                  return v + n | 0;
              })($1));
          };
          return Data_Map.alter(KanColle_Expedition_New_SType.ordSType)(f)(s);
      };
  };
  exports["addReq"] = addReq;
})(PS["KanColle.Expedition.New.Requirement"] = PS["KanColle.Expedition.New.Requirement"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var KanColle_Expedition_NetIncome = PS["KanColle.Expedition.NetIncome"];
  var Data_Array = PS["Data.Array"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Function = PS["Data.Function"];
  var Data_String = PS["Data.String"];
  var Data_Maybe = PS["Data.Maybe"];
  var KanColle_Util = PS["KanColle.Util"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var showNI = function (x) {
      var f = function (y) {
          return Data_Maybe.fromMaybe("ERR")(KanColle_Util.toFixed(3)(y));
      };
      return Data_String.joinWith(" | ")([ Data_Show.show(Data_Show.showArray(Data_Show.showInt))(x.eIds), f(x.hourly.fuel), f(x.hourly.ammo), f(x.hourly.steel), f(x.hourly.bauxite), f(x.resourceScore) ]);
  };
  var calcWithExpeditionIdsFleetCount = function (fltCnt) {
      return function (pF) {
          return function (pA) {
              return function (pS) {
                  return function (pB) {
                      return function (afkTime) {
                          return function (availableEIds) {
                              var isAvailable = function (info) {
                                  return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqInt)(info.eId)(availableEIds));
                              };
                              var calcResourceScore = function (x) {
                                  var score = x.hourly.fuel * pF + x.hourly.ammo * pA + x.hourly.steel * pS + x.hourly.bauxite * pB;
                                  return {
                                      eIds: x.eIds,
                                      hourly: x.hourly,
                                      resourceScore: score - 0.0 * 0.0
                                  };
                              };
                              var allExpeds = KanColle_Expedition_NetIncome.netIncomeWithAfkTime(afkTime);
                              var filteredExpeds = Data_Array.filter(isAvailable)(allExpeds);
                              var hourlyNetIncomeTable = Data_Functor.map(Data_Functor.functorArray)(function ($0) {
                                  return calcResourceScore(KanColle_Expedition_NetIncome.mergeHNetIncome(Data_List_Types.functorList)(Data_List_Types.foldableList)($0));
                              })(KanColle_Util.chooseN(Data_Foldable.foldableArray)(filteredExpeds)(fltCnt));
                              return Data_Array.sortBy(Data_Function.on(Data_Function.flip(Data_Ord.compare(Data_Ord.ordNumber)))(function (x) {
                                  return x.resourceScore;
                              }))(hourlyNetIncomeTable);
                          };
                      };
                  };
              };
          };
      };
  };
  var calcWithExpeditionIdsFleetCountJS = Data_Function_Uncurried.mkFn7(calcWithExpeditionIdsFleetCount);
  var calcWithExpeditionIds = calcWithExpeditionIdsFleetCount(3);
  var calcWithExpeditionIdsJS = Data_Function_Uncurried.mkFn6(calcWithExpeditionIds);
  var calcNetIncomeWithFleetCount = function (fltCnt) {
      return function (alp) {
          return function (pF) {
              return function (pA) {
                  return function (pS) {
                      return function (pB) {
                          return function (afkMins) {
                              var calcResourceScore = function (x) {
                                  var score = x.hourly.fuel * pF + x.hourly.ammo * pA + x.hourly.steel * pS + x.hourly.bauxite * pB;
                                  return {
                                      eIds: x.eIds,
                                      hourly: x.hourly,
                                      resourceScore: score - 0.0 * alp
                                  };
                              };
                              var hourlyNetIncomeTable = Data_Functor.map(Data_Functor.functorArray)(function ($1) {
                                  return calcResourceScore(KanColle_Expedition_NetIncome.mergeHNetIncome(Data_List_Types.functorList)(Data_List_Types.foldableList)($1));
                              })(KanColle_Util.chooseN(Data_Foldable.foldableArray)(KanColle_Expedition_NetIncome.netIncomeWithAfkTime(afkMins))(fltCnt));
                              return Data_Array.sortBy(Data_Function.on(Data_Function.flip(Data_Ord.compare(Data_Ord.ordNumber)))(function (x) {
                                  return x.resourceScore;
                              }))(hourlyNetIncomeTable);
                          };
                      };
                  };
              };
          };
      };
  };
  var calcNetIncome = calcNetIncomeWithFleetCount(3);
  var dbg = function (pF) {
      return function (pA) {
          return function (pS) {
              return function (pB) {
                  return function (atime) {
                      return function (a) {
                          return function __do() {
                              Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function ($2) {
                                  return Control_Monad_Eff_Console.log(showNI($2));
                              })(Data_Array.take(50)(calcNetIncome(a)(pF)(pA)(pS)(pB)(atime))))();
                              return Data_Unit.unit;
                          };
                      };
                  };
              };
          };
      };
  };
  var quickCalc = function (pF) {
      return function (pA) {
          return function (pS) {
              return function (pB) {
                  return function (atime) {
                      return Data_Array.take(50)(calcNetIncome(0.0)(pF)(pA)(pS)(pB)(atime));
                  };
              };
          };
      };
  };
  var quickCalcJS = Data_Function_Uncurried.mkFn5(quickCalc);
  exports["calcNetIncome"] = calcNetIncome;
  exports["calcNetIncomeWithFleetCount"] = calcNetIncomeWithFleetCount;
  exports["calcWithExpeditionIds"] = calcWithExpeditionIds;
  exports["calcWithExpeditionIdsFleetCount"] = calcWithExpeditionIdsFleetCount;
  exports["calcWithExpeditionIdsFleetCountJS"] = calcWithExpeditionIdsFleetCountJS;
  exports["calcWithExpeditionIdsJS"] = calcWithExpeditionIdsJS;
  exports["dbg"] = dbg;
  exports["quickCalc"] = quickCalc;
  exports["quickCalcJS"] = quickCalcJS;
  exports["showNI"] = showNI;
})(PS["KanColle.Expedition.Plan"] = PS["KanColle.Expedition.Plan"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var Data_Nullable = PS["Data.Nullable"];
  var KanColle_SType = PS["KanColle.SType"];
  var KanColle_Expedition_Base = PS["KanColle.Expedition.Base"];
  var KanColle_Expedition_Requirement = PS["KanColle.Expedition.Requirement"];
  var Data_Functor = PS["Data.Functor"];
  var KanColle_Generated_SType = PS["KanColle.Generated.SType"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];
  var resultPackToObject = function (rp) {
      var $2 = {};
      for (var $3 in rp) {
          if ({}.hasOwnProperty.call(rp, $3)) {
              $2[$3] = rp[$3];
          };
      };
      $2.flagShipTypeOf = Data_Nullable.toNullable(rp.flagShipTypeOf);
      $2.levelCount = Data_Nullable.toNullable(rp.levelCount);
      $2.totalAsw = Data_Nullable.toNullable(rp.totalAsw);
      $2.totalLos = Data_Nullable.toNullable(rp.totalLos);
      $2.totalAa = Data_Nullable.toNullable(rp.totalAa);
      $2.totalFp = Data_Nullable.toNullable(rp.totalFp);
      $2.drumCount = Data_Nullable.toNullable(rp.drumCount);
      $2.drumCarrierCount = Data_Nullable.toNullable(rp.drumCarrierCount);
      return $2;
  };
  var requirementPackToObj = function (rp) {
      var cov = function (stReq) {
          return {
              stypeReqCount: stReq.stypeReqCount,
              stypeOneOf: Data_Functor.map(Data_Functor.functorArray)(KanColle_Generated_SType.showSType)(stReq.stypeOneOf)
          };
      };
      return {
          flagShipLevel: rp.flagShipLevel,
          shipCount: rp.shipCount,
          flagShipTypeOf: Data_Nullable.toNullable(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Functor.map(Data_Functor.functorArray)(KanColle_Generated_SType.showSType))(rp.flagShipTypeOf)),
          levelCount: Data_Nullable.toNullable(rp.levelCount),
          totalAsw: Data_Nullable.toNullable(rp.totalAsw),
          totalLos: Data_Nullable.toNullable(rp.totalLos),
          totalAa: Data_Nullable.toNullable(rp.totalAa),
          totalFp: Data_Nullable.toNullable(rp.totalFp),
          drumCount: Data_Nullable.toNullable(rp.drumCount),
          drumCarrierCount: Data_Nullable.toNullable(rp.drumCarrierCount),
          fleetSType: Data_Functor.map(Data_Functor.functorArray)(cov)(rp.fleetSType)
      };
  };
  var dummyRequirementPack = {
      flagShipLevel: 1,
      shipCount: 1,
      flagShipTypeOf: Data_Maybe.Nothing.value,
      levelCount: Data_Maybe.Nothing.value,
      totalAsw: Data_Maybe.Nothing.value,
      totalLos: Data_Maybe.Nothing.value,
      totalAa: Data_Maybe.Nothing.value,
      totalFp: Data_Maybe.Nothing.value,
      drumCount: Data_Maybe.Nothing.value,
      drumCarrierCount: Data_Maybe.Nothing.value,
      fleetSType: [  ]
  };
  var fromExpeditionRequirement = (function () {
      var updatePack = function (p) {
          return function (fleetReq) {
              if (fleetReq instanceof KanColle_Expedition_Requirement.Flagship) {
                  if (fleetReq.value0 instanceof KanColle_Expedition_Requirement.ShipLevel) {
                      var $7 = {};
                      for (var $8 in p) {
                          if ({}.hasOwnProperty.call(p, $8)) {
                              $7[$8] = p[$8];
                          };
                      };
                      $7.flagShipLevel = fleetReq.value0.value0;
                      return $7;
                  };
                  if (fleetReq.value0 instanceof KanColle_Expedition_Requirement.ShipTypeOneOf) {
                      var $11 = {};
                      for (var $12 in p) {
                          if ({}.hasOwnProperty.call(p, $12)) {
                              $11[$12] = p[$12];
                          };
                      };
                      $11.flagShipTypeOf = new Data_Maybe.Just(fleetReq.value0.value0);
                      return $11;
                  };
                  throw new Error("Failed pattern match at KanColle.Expedition.RequirementObject line 72, column 11 - line 74, column 65: " + [ fleetReq.value0.constructor.name ]);
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetLevel) {
                  var $16 = {};
                  for (var $17 in p) {
                      if ({}.hasOwnProperty.call(p, $17)) {
                          $16[$17] = p[$17];
                      };
                  };
                  $16.levelCount = new Data_Maybe.Just(fleetReq.value0);
                  return $16;
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetTotalAsw) {
                  var $180 = {};
                  for (var $190 in p) {
                      if ({}.hasOwnProperty.call(p, $190)) {
                          $180[$190] = p[$190];
                      };
                  };
                  $180.totalAsw = new Data_Maybe.Just(fleetReq.value0);
                  return $180;
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetTotalLos) {
                  var $181 = {};
                  for (var $191 in p) {
                      if ({}.hasOwnProperty.call(p, $191)) {
                          $181[$191] = p[$191];
                      };
                  };
                  $181.totalLos = new Data_Maybe.Just(fleetReq.value0);
                  return $181;
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetTotalAa) {
                  var $182 = {};
                  for (var $192 in p) {
                      if ({}.hasOwnProperty.call(p, $192)) {
                          $182[$192] = p[$192];
                      };
                  };
                  $182.totalAa = new Data_Maybe.Just(fleetReq.value0);
                  return $182;
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetTotalFp) {
                  var $183 = {};
                  for (var $193 in p) {
                      if ({}.hasOwnProperty.call(p, $193)) {
                          $183[$193] = p[$193];
                      };
                  };
                  $183.totalFp = new Data_Maybe.Just(fleetReq.value0);
                  return $183;
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetDrum) {
                  var $20 = {};
                  for (var $21 in p) {
                      if ({}.hasOwnProperty.call(p, $21)) {
                          $20[$21] = p[$21];
                      };
                  };
                  $20.drumCount = new Data_Maybe.Just(fleetReq.value0);
                  return $20;
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetShipWithDrum) {
                  var $24 = {};
                  for (var $25 in p) {
                      if ({}.hasOwnProperty.call(p, $25)) {
                          $24[$25] = p[$25];
                      };
                  };
                  $24.drumCarrierCount = new Data_Maybe.Just(fleetReq.value0);
                  return $24;
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetSTypeCount) {
                  var req = {
                      stypeReqCount: fleetReq.value0,
                      stypeOneOf: fleetReq.value1
                  };
                  var $28 = {};
                  for (var $29 in p) {
                      if ({}.hasOwnProperty.call(p, $29)) {
                          $28[$29] = p[$29];
                      };
                  };
                  $28.fleetSType = Data_Array.snoc(p.fleetSType)(req);
                  return $28;
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.AnyOf) {
                  // TODO
                  return {anyOf: fleetReq.values};
              };
              if (fleetReq instanceof KanColle_Expedition_Requirement.FleetShipCount) {
                  var $33 = {};
                  for (var $34 in p) {
                      if ({}.hasOwnProperty.call(p, $34)) {
                          $33[$34] = p[$34];
                      };
                  };
                  $33.shipCount = fleetReq.value0;
                  return $33;
              };
              throw new Error("Failed pattern match at KanColle.Expedition.RequirementObject line 70, column 29 - line 82, column 48: " + [ fleetReq.constructor.name ]);
          };
      };
      return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePack)(dummyRequirementPack);
  })();
  var getExpeditionRequirementPack = function (eId) {
      return fromExpeditionRequirement(KanColle_Expedition_Requirement.getExpeditionRequirement(eId));
  };
  var getExpeditionRequirementObject = function ($41) {
      return requirementPackToObj(getExpeditionRequirementPack($41));
  };
  var checkWithRequirementPack = function (req) {
      return function (fleet) {
          var count = function (pred) {
              return function ($42) {
                  return Data_Array.length(Data_Array.filter(pred)($42));
              };
          };
          var checkShipType = function (st) {
              return Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                  return Data_Eq.eq(KanColle_Generated_SType.eqSType)(st)(v);
              });
          };
          var $37 = Data_Array.uncons(fleet);
          if ($37 instanceof Data_Maybe.Just) {
              var flagShipLevel = $37.value0.head.level >= req.flagShipLevel;
              return {
                  flagShipLevel: flagShipLevel,
                  shipCount: Data_Array.length(fleet) >= req.shipCount,
                  flagShipTypeOf: Data_Functor.map(Data_Maybe.functorMaybe)(checkShipType($37.value0.head.stype))(req.flagShipTypeOf),
                  levelCount: Data_Functor.map(Data_Maybe.functorMaybe)(function (lc) {
                      return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (s) {
                          return s.level;
                      })(fleet)) >= lc;
                  })(req.levelCount),
                  totalAsw: Data_Functor.map(Data_Maybe.functorMaybe)(function (tas) {
                      return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (s) {
                          return s.asw;
                      })(fleet)) >= tas;
                  })(req.totalAsw),
                  totalLos: Data_Functor.map(Data_Maybe.functorMaybe)(function (tls) {
                      return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (s) {
                          return s.los;
                      })(fleet)) >= tls;
                  })(req.totalLos),
                  totalAa: Data_Functor.map(Data_Maybe.functorMaybe)(function (taa) {
                      return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (s) {
                          return s.aa;
                      })(fleet)) >= taa;
                  })(req.totalAa),
                  totalFp: Data_Functor.map(Data_Maybe.functorMaybe)(function (tfp) {
                      return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (s) {
                          return s.fp;
                      })(fleet)) >= tfp;
                  })(req.totalFp),
                  drumCount: Data_Functor.map(Data_Maybe.functorMaybe)(function (dc) {
                      return Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Functor.map(Data_Functor.functorArray)(function (s) {
                          return s.drumCount;
                      })(fleet)) >= dc;
                  })(req.drumCount),
                  drumCarrierCount: Data_Functor.map(Data_Maybe.functorMaybe)(function (dcc) {
                      return count(function (s) {
                          return s.drumCount > 0;
                      })(fleet) >= dcc;
                  })(req.drumCarrierCount),
                  fleetSType: Data_Functor.map(Data_Functor.functorArray)(function (r) {
                      return count(function (s) {
                          return checkShipType(s.stype)(r.stypeOneOf);
                      })(fleet) >= r.stypeReqCount;
                  })(req.fleetSType)
              };
          };
          if ($37 instanceof Data_Maybe.Nothing) {
              var toFalseF = function (dictFunctor) {
                  return Data_Functor.map(dictFunctor)(Data_Function["const"](false));
              };
              return {
                  flagShipLevel: false,
                  shipCount: false,
                  flagShipTypeOf: toFalseF(Data_Maybe.functorMaybe)(req.flagShipTypeOf),
                  levelCount: toFalseF(Data_Maybe.functorMaybe)(req.levelCount),
                  totalAsw: toFalseF(Data_Maybe.functorMaybe)(req.totalAsw),
                  totalLos: toFalseF(Data_Maybe.functorMaybe)(req.totalLos),
                  totalAa: toFalseF(Data_Maybe.functorMaybe)(req.totalAa),
                  totalFp: toFalseF(Data_Maybe.functorMaybe)(req.totalFp),
                  drumCount: toFalseF(Data_Maybe.functorMaybe)(req.drumCount),
                  drumCarrierCount: toFalseF(Data_Maybe.functorMaybe)(req.drumCarrierCount),
                  fleetSType: toFalseF(Data_Functor.functorArray)(req.fleetSType)
              };
          };
          throw new Error("Failed pattern match at KanColle.Expedition.RequirementObject line 116, column 38 - line 146, column 11: " + [ $37.constructor.name ]);
      };
  };
  var allRequirements = (function () {
      var mk = function (v) {
          return {
              id: v,
              val: getExpeditionRequirementObject(v)
          };
      };
      return Data_Functor.map(Data_Functor.functorArray)(mk)(KanColle_Expedition_Base.allExpeditionIds);
  })();
  exports["allRequirements"] = allRequirements;
  exports["checkWithRequirementPack"] = checkWithRequirementPack;
  exports["dummyRequirementPack"] = dummyRequirementPack;
  exports["fromExpeditionRequirement"] = fromExpeditionRequirement;
  exports["getExpeditionRequirementObject"] = getExpeditionRequirementObject;
  exports["getExpeditionRequirementPack"] = getExpeditionRequirementPack;
  exports["requirementPackToObj"] = requirementPackToObj;
  exports["resultPackToObject"] = resultPackToObject;
})(PS["KanColle.Expedition.RequirementObject"] = PS["KanColle.Expedition.RequirementObject"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var Data_Int = PS["Data.Int"];
  var Data_Foldable = PS["Data.Foldable"];
  var KanColle_KCAPI_Master = PS["KanColle.KCAPI.Master"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_List = PS["Data.List"];
  var Data_List_Partial = PS["Data.List.Partial"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Set = PS["Data.Set"];
  var Data_Tuple = PS["Data.Tuple"];
  var Debug_Trace = PS["Debug.Trace"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Show = PS["Data.Show"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var optTrace = function (s) {
      return function (thunk) {
          if (s === "") {
              return thunk(Data_Unit.unit);
          };
          if (Data_Boolean.otherwise) {
              return Debug_Trace.trace(s)(thunk);
          };
          throw new Error("Failed pattern match at KanColle.Remodel line 51, column 1 - line 53, column 32: " + [ s.constructor.name, thunk.constructor.name ]);
      };
  };
  var maybeToArray = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return [ v.value0 ];
      };
      if (v instanceof Data_Maybe.Nothing) {
          return [  ];
      };
      throw new Error("Failed pattern match at KanColle.Remodel line 81, column 1 - line 81, column 28: " + [ v.constructor.name ]);
  };
  var listToArray = Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray);
  var generateRemodelGroup = function (rim) {
      return function (originId) {
          var getRI = function (i) {
              return Data_StrMap.lookup(Data_Show.show(Data_Show.showInt)(i))(rim);
          };
          var ri = Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Maybe.fromJust(dictPartial);
          })(getRI(originId));
          var findLoop = function (__copy_visited) {
              return function (__copy_cur) {
                  var visited = __copy_visited;
                  var cur = __copy_cur;
                  tco: while (true) {
                      var $10 = Data_List.elemIndex(Data_Eq.eqInt)(cur)(visited);
                      if ($10 instanceof Data_Maybe.Nothing) {
                          var newVisited = new Data_List_Types.Cons(cur, visited);
                          var $11 = getRI(cur);
                          if ($11 instanceof Data_Maybe.Nothing) {
                              return newVisited;
                          };
                          if ($11 instanceof Data_Maybe.Just) {
                              visited = newVisited;
                              cur = $11.value0.shipIdTo;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at KanColle.Remodel line 138, column 14 - line 140, column 59: " + [ $11.constructor.name ]);
                      };
                      if ($10 instanceof Data_Maybe.Just) {
                          return visited;
                      };
                      throw new Error("Failed pattern match at KanColle.Remodel line 135, column 28 - line 141, column 26: " + [ $10.constructor.name ]);
                  };
              };
          };
          var groupL$prime = findLoop(Data_List_Types.Nil.value)(originId);
          var group = Data_Array.reverse(listToArray(groupL$prime));
          var finalFormsL$prime = findLoop(Data_List_Types.Nil.value)(Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_List_Partial.head(dictPartial);
          })(groupL$prime));
          var finalForms = Data_Array.reverse(listToArray(finalFormsL$prime));
          return {
              origin: originId,
              finalForms: finalForms,
              group: group
          };
      };
  };
  var generateRemodelGroups = function (rim) {
      var infoList = Data_StrMap.values(rim);
      var go = function (tp) {
          return function (ri) {
              var srcSet = Data_Tuple.fst(tp);
              var dstSet = Data_Tuple.snd(tp);
              return new Data_Tuple.Tuple(Data_Set.insert(Data_Ord.ordInt)(ri.shipIdFrom)(srcSet), Data_Set.insert(Data_Ord.ordInt)(ri.shipIdTo)(dstSet));
          };
      };
      var srcDstSets = Data_Foldable.foldl(Data_List_Types.foldableList)(go)(new Data_Tuple.Tuple(Data_Set.empty, Data_Set.empty))(infoList);
      var originIds = Data_Set.toUnfoldable(Data_List_Types.unfoldableList)(Data_Tuple.uncurry(Data_Set.difference(Data_Ord.ordInt))(srcDstSets));
      var build = function (oId) {
          return new Data_Tuple.Tuple(Data_Show.show(Data_Show.showInt)(oId), generateRemodelGroup(rim)(oId));
      };
      return Data_StrMap.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(build)(originIds));
  };
  var generateOriginMap = function (rgm) {
      var expand = function (v) {
          return Data_Functor.map(Data_Functor.functorArray)(function (x) {
              return new Data_Tuple.Tuple(Data_Show.show(Data_Show.showInt)(x), v.value1.origin);
          })(v.value1.group);
      };
      return Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidArray)(expand)(Data_StrMap.toList(rgm)));
  };
  var collectRemodelInfo2 = function (mstShipUpgrades) {
      return function (rim) {
          var upgrades = Data_Array.filter(function (x) {
              return x.api_current_ship_id !== 0;
          })(mstShipUpgrades);
          var combine = function (rim$prime) {
              return function (upgrade) {
                  var sidStr = Data_Show.show(Data_Show.showInt)(upgrade.api_current_ship_id);
                  var modifyRemodel = function (ri) {
                      var check = (function () {
                          if (ri.shipIdTo === upgrade.api_id) {
                              return "";
                          };
                          if (Data_Boolean.otherwise) {
                              return "WARNING: data inconsistent for id: " + Data_Show.show(Data_Show.showInt)(ri.shipIdFrom);
                          };
                          throw new Error("Failed pattern match at KanColle.Remodel line 104, column 13 - line 106, column 88: " + [  ]);
                      })();
                      return optTrace(check)(function (v) {
                          var $18 = {};
                          for (var $19 in ri) {
                              if ({}.hasOwnProperty.call(ri, $19)) {
                                  $18[$19] = ri[$19];
                              };
                          };
                          $18.catapult = upgrade.api_catapult_count;
                          $18.blueprint = upgrade.api_drawing_count;
                          return $18;
                      });
                  };
                  return Data_StrMap.alter(Data_Functor.map(Data_Maybe.functorMaybe)(modifyRemodel))(sidStr)(rim$prime);
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(combine)(rim)(upgrades);
      };
  };
  var calcDevMat = function (steel) {
      if (steel < 4500) {
          return 0;
      };
      if (steel < 5500) {
          return 10;
      };
      if (steel < 6500) {
          return 15;
      };
      if (Data_Boolean.otherwise) {
          return 20;
      };
      throw new Error("Failed pattern match at KanColle.Remodel line 57, column 1 - line 63, column 1: " + [ steel.constructor.name ]);
  };
  var fromMstShip = function (ms) {
      if (ms.api_id > KC3Master.abyssalShipIdFrom || ms.api_aftershipid === "0") {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          var result = {
              shipIdFrom: ms.api_id,
              shipIdTo: Partial_Unsafe.unsafePartial(function (dictPartial) {
                  return Data_Maybe.fromJust(dictPartial);
              })(Data_Int.fromString(ms.api_aftershipid)),
              level: ms.api_afterlv,
              steel: ms.api_afterfuel,
              ammo: ms.api_afterbull,
              catapult: 0,
              blueprint: 0,
              devmat: 0
          };
          return new Data_Maybe.Just((function () {
              var $23 = {};
              for (var $24 in result) {
                  if ({}.hasOwnProperty.call(result, $24)) {
                      $23[$24] = result[$24];
                  };
              };
              $23.devmat = calcDevMat(result.steel);
              return $23;
          })());
      };
      throw new Error("Failed pattern match at KanColle.Remodel line 65, column 1 - line 78, column 54: " + [ ms.constructor.name ]);
  };
  var collectRemodelInfo1 = function (mstShips) {
      var remodelInfoAr = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(function ($26) {
          return maybeToArray(fromMstShip($26));
      })(mstShips);
      var mkTup = function (x) {
          return new Data_Tuple.Tuple(Data_Show.show(Data_Show.showInt)(x.shipIdFrom), x);
      };
      return Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(mkTup)(remodelInfoAr));
  };
  var collectRemodelInfo = function (mst) {
      var result1 = collectRemodelInfo1(mst.api_mst_ship);
      var result2 = collectRemodelInfo2(mst.api_mst_shipupgrade)(result1);
      return result2;
  };
  var generateRemodelDb = function (mst) {
      var rim = collectRemodelInfo(mst);
      var rgs = generateRemodelGroups(rim);
      var ogs = generateOriginMap(rgs);
      return {
          remodelInfo: rim,
          remodelGroups: rgs,
          origins: ogs,
          shipCount: Data_Array.length(mst.api_mst_ship),
          upgradeCount: Data_Array.length(mst.api_mst_shipupgrade)
      };
  };
  exports["calcDevMat"] = calcDevMat;
  exports["collectRemodelInfo"] = collectRemodelInfo;
  exports["collectRemodelInfo1"] = collectRemodelInfo1;
  exports["collectRemodelInfo2"] = collectRemodelInfo2;
  exports["fromMstShip"] = fromMstShip;
  exports["generateOriginMap"] = generateOriginMap;
  exports["generateRemodelDb"] = generateRemodelDb;
  exports["generateRemodelGroup"] = generateRemodelGroup;
  exports["generateRemodelGroups"] = generateRemodelGroups;
  exports["listToArray"] = listToArray;
  exports["maybeToArray"] = maybeToArray;
  exports["optTrace"] = optTrace;
})(PS["KanColle.Remodel"] = PS["KanColle.Remodel"] || {});
(function(exports) {
  // Generated by psc version 0.10.5
  "use strict";
  var Prelude = PS["Prelude"];
  var $$Math = PS["Math"];
  var Data_Int = PS["Data.Int"];
  var KanColle_SType = PS["KanColle.SType"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var KanColle_Generated_SType = PS["KanColle.Generated.SType"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var stypeFactor = function (v) {
      if (v instanceof KanColle_Generated_SType.SS) {
          return 0.5;
      };
      if (v instanceof KanColle_Generated_SType.DD) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.CL) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.CLT) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.CT) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.AV) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.SSV) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.LHA) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.AO) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.CA) {
          return 1.5;
      };
      if (v instanceof KanColle_Generated_SType.CAV) {
          return 1.5;
      };
      if (v instanceof KanColle_Generated_SType.FBB) {
          return 1.5;
      };
      if (v instanceof KanColle_Generated_SType.CVL) {
          return 1.5;
      };
      if (v instanceof KanColle_Generated_SType.AS) {
          return 1.5;
      };
      if (v instanceof KanColle_Generated_SType.BB) {
          return 2.0;
      };
      if (v instanceof KanColle_Generated_SType.BBV) {
          return 2.0;
      };
      if (v instanceof KanColle_Generated_SType.CV) {
          return 2.0;
      };
      if (v instanceof KanColle_Generated_SType.CVB) {
          return 2.0;
      };
      if (v instanceof KanColle_Generated_SType.AR) {
          return 2.0;
      };
      if (v instanceof KanColle_Generated_SType.DE) {
          return 1.0;
      };
      if (v instanceof KanColle_Generated_SType.XBB) {
          return 2.0;
      };
      if (v instanceof KanColle_Generated_SType.AP) {
          return 2.0;
      };
      if (v instanceof KanColle_Generated_SType.Unknown) {
          return 1.0;
      };
      throw new Error("Failed pattern match at KanColle.RepairTime line 46, column 1 - line 48, column 1: " + [ v.constructor.name ]);
  };
  var dockingInSec = function (v) {
      return function (v1) {
          return function (curHp) {
              return function (maxHp) {
                  if (curHp === maxHp) {
                      return 0;
                  };
                  var lostHp = maxHp - curHp;
                  var repairTime = (function () {
                      var $9 = v1 <= 11;
                      if ($9) {
                          return Data_Int.toNumber(v1 * 10 | 0) * stypeFactor(v) * Data_Int.toNumber(lostHp);
                      };
                      if (!$9) {
                          var a = (Data_Int.floor($$Math.sqrt(Data_Int.toNumber(v1 - 11))) * 10 | 0) + 50 | 0;
                          return Data_Int.toNumber((v1 * 5 | 0) + a | 0) * stypeFactor(v) * Data_Int.toNumber(lostHp);
                      };
                      throw new Error("Failed pattern match at KanColle.RepairTime line 16, column 18 - line 20, column 70: " + [ $9.constructor.name ]);
                  })();
                  return Data_Int.floor(repairTime) + 30 | 0;
              };
          };
      };
  };
  var dockingInSecJS = Data_Function_Uncurried.mkFn4(function (s) {
      return dockingInSec(KanColle_Generated_SType.readSType(s));
  });
  var dockingInSecJSNum = Data_Function_Uncurried.mkFn4(function (sNum) {
      return dockingInSec(KanColle_Generated_SType.fromInt(sNum));
  });
  var facilityInSec = function (s) {
      return function (lvl) {
          return function (curHp) {
              return function (maxHp) {
                  var m20 = 20 * 60 | 0;
                  var facilitySlowestTime = m20 * (maxHp - curHp) | 0;
                  var dockingTime = dockingInSec(s)(lvl)(curHp)(maxHp);
                  var roundDockingTime = Data_Int.ceil(Data_Int.toNumber(dockingTime) / Data_Int.toNumber(m20)) * m20 | 0;
                  var $10 = facilitySlowestTime <= roundDockingTime;
                  if ($10) {
                      return facilitySlowestTime;
                  };
                  if (!$10) {
                      return roundDockingTime;
                  };
                  throw new Error("Failed pattern match at KanColle.RepairTime line 29, column 35 - line 31, column 26: " + [ $10.constructor.name ]);
              };
          };
      };
  };
  var facilityInSecJS = Data_Function_Uncurried.mkFn4(function (s) {
      return facilityInSec(KanColle_Generated_SType.readSType(s));
  });
  var facilityInSecJSNum = Data_Function_Uncurried.mkFn4(function (sNum) {
      return facilityInSec(KanColle_Generated_SType.fromInt(sNum));
  });
  exports["dockingInSec"] = dockingInSec;
  exports["dockingInSecJS"] = dockingInSecJS;
  exports["dockingInSecJSNum"] = dockingInSecJSNum;
  exports["facilityInSec"] = facilityInSec;
  exports["facilityInSecJS"] = facilityInSecJS;
  exports["facilityInSecJSNum"] = facilityInSecJSNum;
  exports["stypeFactor"] = stypeFactor;
})(PS["KanColle.RepairTime"] = PS["KanColle.RepairTime"] || {});
